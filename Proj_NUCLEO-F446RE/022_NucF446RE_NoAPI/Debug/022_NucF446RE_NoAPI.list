
022_NucF446RE_NoAPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000444  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000608  08000610  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  4 .ARM          00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000608  08000610  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000608  08000608  00010608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800060c  0800060c  0001060c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000610  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000610  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010610  2**0
                  CONTENTS, READONLY
 12 .debug_info   000005b7  00000000  00000000  0001063a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000129  00000000  00000000  00010bf1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  00010d70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001bd0  00000000  00000000  00010da8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000949  00000000  00000000  00012978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007ae8  00000000  00000000  000132c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001ada9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000a4  00000000  00000000  0001adfc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080005f0 	.word	0x080005f0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080005f0 	.word	0x080005f0

08000204 <main>:
void delay(void){
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 50000 ; i ++);
}

int main(void){
 8000204:	b580      	push	{r7, lr}
 8000206:	b08a      	sub	sp, #40	; 0x28
 8000208:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 800020a:	f107 0310 	add.w	r3, r7, #16
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f9e4 	bl	80005e0 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 8000218:	1d3b      	adds	r3, r7, #4
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f9de 	bl	80005e0 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000224:	4b6d      	ldr	r3, [pc, #436]	; (80003dc <main+0x1d8>)
 8000226:	613b      	str	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000228:	2305      	movs	r3, #5
 800022a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	757b      	strb	r3, [r7, #21]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000230:	2300      	movs	r3, #0
 8000232:	75bb      	strb	r3, [r7, #22]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	763b      	strb	r3, [r7, #24]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	75fb      	strb	r3, [r7, #23]

//	GPIO_PeriClockControl(GPIOA,ENABLE);
	GPIOA_PCLK_EN();
 800023c:	4b68      	ldr	r3, [pc, #416]	; (80003e0 <main+0x1dc>)
 800023e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000240:	4a67      	ldr	r2, [pc, #412]	; (80003e0 <main+0x1dc>)
 8000242:	f043 0301 	orr.w	r3, r3, #1
 8000246:	6313      	str	r3, [r2, #48]	; 0x30


	//GPIO_Handle_t *pGPIOHandle;

//	GPIO_Init(&GpioLed);
	uint32_t temp=0; 		//temp. register
 8000248:	2300      	movs	r3, #0
 800024a:	627b      	str	r3, [r7, #36]	; 0x24
	//1. configure the mode of gpio pin
	//the non interrupt mode.
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinMode<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 800024c:	7d7b      	ldrb	r3, [r7, #21]
 800024e:	461a      	mov	r2, r3
 8000250:	7d3b      	ldrb	r3, [r7, #20]
 8000252:	005b      	lsls	r3, r3, #1
 8000254:	fa02 f303 	lsl.w	r3, r2, r3
 8000258:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.pGPIOx->MODER &=~(0x3<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));		//clearing
 800025a:	693b      	ldr	r3, [r7, #16]
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	7d3b      	ldrb	r3, [r7, #20]
 8000260:	005b      	lsls	r3, r3, #1
 8000262:	2103      	movs	r1, #3
 8000264:	fa01 f303 	lsl.w	r3, r1, r3
 8000268:	43db      	mvns	r3, r3
 800026a:	4619      	mov	r1, r3
 800026c:	693b      	ldr	r3, [r7, #16]
 800026e:	400a      	ands	r2, r1
 8000270:	601a      	str	r2, [r3, #0]
	GpioLed.pGPIOx->MODER |=temp;		//setting
 8000272:	693b      	ldr	r3, [r7, #16]
 8000274:	6819      	ldr	r1, [r3, #0]
 8000276:	693b      	ldr	r3, [r7, #16]
 8000278:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800027a:	430a      	orrs	r2, r1
 800027c:	601a      	str	r2, [r3, #0]
	temp=0;
 800027e:	2300      	movs	r3, #0
 8000280:	627b      	str	r3, [r7, #36]	; 0x24
	//2.configure the speed
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinSpeed<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 8000282:	7dbb      	ldrb	r3, [r7, #22]
 8000284:	461a      	mov	r2, r3
 8000286:	7d3b      	ldrb	r3, [r7, #20]
 8000288:	005b      	lsls	r3, r3, #1
 800028a:	fa02 f303 	lsl.w	r3, r2, r3
 800028e:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.pGPIOx->OSPEEDR &=~(0x3<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000290:	693b      	ldr	r3, [r7, #16]
 8000292:	689a      	ldr	r2, [r3, #8]
 8000294:	7d3b      	ldrb	r3, [r7, #20]
 8000296:	4619      	mov	r1, r3
 8000298:	2303      	movs	r3, #3
 800029a:	408b      	lsls	r3, r1
 800029c:	43db      	mvns	r3, r3
 800029e:	4619      	mov	r1, r3
 80002a0:	693b      	ldr	r3, [r7, #16]
 80002a2:	400a      	ands	r2, r1
 80002a4:	609a      	str	r2, [r3, #8]
	GpioLed.pGPIOx->OSPEEDR |=temp;
 80002a6:	693b      	ldr	r3, [r7, #16]
 80002a8:	6899      	ldr	r1, [r3, #8]
 80002aa:	693b      	ldr	r3, [r7, #16]
 80002ac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80002ae:	430a      	orrs	r2, r1
 80002b0:	609a      	str	r2, [r3, #8]
	temp=0;
 80002b2:	2300      	movs	r3, #0
 80002b4:	627b      	str	r3, [r7, #36]	; 0x24
	//3.configure the pudp setting
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 80002b6:	7dfb      	ldrb	r3, [r7, #23]
 80002b8:	461a      	mov	r2, r3
 80002ba:	7d3b      	ldrb	r3, [r7, #20]
 80002bc:	005b      	lsls	r3, r3, #1
 80002be:	fa02 f303 	lsl.w	r3, r2, r3
 80002c2:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.pGPIOx->PUPDR &=~(0x3<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80002c4:	693b      	ldr	r3, [r7, #16]
 80002c6:	68da      	ldr	r2, [r3, #12]
 80002c8:	7d3b      	ldrb	r3, [r7, #20]
 80002ca:	4619      	mov	r1, r3
 80002cc:	2303      	movs	r3, #3
 80002ce:	408b      	lsls	r3, r1
 80002d0:	43db      	mvns	r3, r3
 80002d2:	4619      	mov	r1, r3
 80002d4:	693b      	ldr	r3, [r7, #16]
 80002d6:	400a      	ands	r2, r1
 80002d8:	60da      	str	r2, [r3, #12]
	GpioLed.pGPIOx->PUPDR |=temp;
 80002da:	693b      	ldr	r3, [r7, #16]
 80002dc:	68d9      	ldr	r1, [r3, #12]
 80002de:	693b      	ldr	r3, [r7, #16]
 80002e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80002e2:	430a      	orrs	r2, r1
 80002e4:	60da      	str	r2, [r3, #12]
	temp=0;
 80002e6:	2300      	movs	r3, #0
 80002e8:	627b      	str	r3, [r7, #36]	; 0x24
	//4. configure the optype
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinOPType<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);
 80002ea:	7e3b      	ldrb	r3, [r7, #24]
 80002ec:	461a      	mov	r2, r3
 80002ee:	7d3b      	ldrb	r3, [r7, #20]
 80002f0:	fa02 f303 	lsl.w	r3, r2, r3
 80002f4:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.pGPIOx->OTYPER &=~(0x1<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80002f6:	693b      	ldr	r3, [r7, #16]
 80002f8:	685a      	ldr	r2, [r3, #4]
 80002fa:	7d3b      	ldrb	r3, [r7, #20]
 80002fc:	4619      	mov	r1, r3
 80002fe:	2301      	movs	r3, #1
 8000300:	408b      	lsls	r3, r1
 8000302:	43db      	mvns	r3, r3
 8000304:	4619      	mov	r1, r3
 8000306:	693b      	ldr	r3, [r7, #16]
 8000308:	400a      	ands	r2, r1
 800030a:	605a      	str	r2, [r3, #4]
	GpioLed.pGPIOx->OTYPER |=temp;
 800030c:	693b      	ldr	r3, [r7, #16]
 800030e:	6859      	ldr	r1, [r3, #4]
 8000310:	693b      	ldr	r3, [r7, #16]
 8000312:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000314:	430a      	orrs	r2, r1
 8000316:	605a      	str	r2, [r3, #4]
	temp=0;
 8000318:	2300      	movs	r3, #0
 800031a:	627b      	str	r3, [r7, #36]	; 0x24


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOC;
 800031c:	4b31      	ldr	r3, [pc, #196]	; (80003e4 <main+0x1e0>)
 800031e:	607b      	str	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000320:	230d      	movs	r3, #13
 8000322:	723b      	strb	r3, [r7, #8]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000324:	2304      	movs	r3, #4
 8000326:	727b      	strb	r3, [r7, #9]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000328:	2302      	movs	r3, #2
 800032a:	72bb      	strb	r3, [r7, #10]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800032c:	2301      	movs	r3, #1
 800032e:	72fb      	strb	r3, [r7, #11]

	//	GPIO_PeriClockControl(GPIOC,ENABLE);
	GPIOC_PCLK_EN();
 8000330:	4b2b      	ldr	r3, [pc, #172]	; (80003e0 <main+0x1dc>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000334:	4a2a      	ldr	r2, [pc, #168]	; (80003e0 <main+0x1dc>)
 8000336:	f043 0304 	orr.w	r3, r3, #4
 800033a:	6313      	str	r3, [r2, #48]	; 0x30

//	GPIO_Init(&GPIOBtn);
//	uint32_t temp=0; 		//temp. register
	temp=0;
 800033c:	2300      	movs	r3, #0
 800033e:	627b      	str	r3, [r7, #36]	; 0x24

	//Interrupt mode
	//1.configure the FTSR
	EXTI->FTSR |=(1<< GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);
 8000340:	4b29      	ldr	r3, [pc, #164]	; (80003e8 <main+0x1e4>)
 8000342:	68db      	ldr	r3, [r3, #12]
 8000344:	7a3a      	ldrb	r2, [r7, #8]
 8000346:	4611      	mov	r1, r2
 8000348:	2201      	movs	r2, #1
 800034a:	408a      	lsls	r2, r1
 800034c:	4611      	mov	r1, r2
 800034e:	4a26      	ldr	r2, [pc, #152]	; (80003e8 <main+0x1e4>)
 8000350:	430b      	orrs	r3, r1
 8000352:	60d3      	str	r3, [r2, #12]
	//Clear the corresponding RTSR bit
	EXTI->RTSR &=~(1<< GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);
 8000354:	4b24      	ldr	r3, [pc, #144]	; (80003e8 <main+0x1e4>)
 8000356:	689b      	ldr	r3, [r3, #8]
 8000358:	7a3a      	ldrb	r2, [r7, #8]
 800035a:	4611      	mov	r1, r2
 800035c:	2201      	movs	r2, #1
 800035e:	408a      	lsls	r2, r1
 8000360:	43d2      	mvns	r2, r2
 8000362:	4611      	mov	r1, r2
 8000364:	4a20      	ldr	r2, [pc, #128]	; (80003e8 <main+0x1e4>)
 8000366:	400b      	ands	r3, r1
 8000368:	6093      	str	r3, [r2, #8]
	//2. configure GPIO port selection in SYSCFG_EXTICR
	//Будем расчитывать позицию EXTIx в регистрах
	/*Всего 4 регистра SYSCFG_EXTICR2 из каждого регистра используются первые 16 бит. Каждый регистр отвечает за 4 линии EXTI
	* К каждой линии EXTI можно подключить путем записи 4 битного числа только один пин порта под номером соответствующему номеру линии EXTI
	*Пример: к линии EXTI5 можно подключить PA5 либо PB5 либо... PE5*/
	uint8_t	temp1=GPIOBtn.GPIO_PinConfig.GPIO_PinNumber/4;
 800036a:	7a3b      	ldrb	r3, [r7, #8]
 800036c:	089b      	lsrs	r3, r3, #2
 800036e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	uint8_t	temp2=GPIOBtn.GPIO_PinConfig.GPIO_PinNumber%4;
 8000372:	7a3b      	ldrb	r3, [r7, #8]
 8000374:	f003 0303 	and.w	r3, r3, #3
 8000378:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	uint8_t portcode=GPIO_BASEADDR_TO_CODE(GPIOBtn.pGPIOx);
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a17      	ldr	r2, [pc, #92]	; (80003dc <main+0x1d8>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d03f      	beq.n	8000404 <main+0x200>
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4a19      	ldr	r2, [pc, #100]	; (80003ec <main+0x1e8>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d025      	beq.n	80003d8 <main+0x1d4>
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a15      	ldr	r2, [pc, #84]	; (80003e4 <main+0x1e0>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d01f      	beq.n	80003d4 <main+0x1d0>
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a16      	ldr	r2, [pc, #88]	; (80003f0 <main+0x1ec>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d019      	beq.n	80003d0 <main+0x1cc>
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a15      	ldr	r2, [pc, #84]	; (80003f4 <main+0x1f0>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d013      	beq.n	80003cc <main+0x1c8>
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a14      	ldr	r2, [pc, #80]	; (80003f8 <main+0x1f4>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d00d      	beq.n	80003c8 <main+0x1c4>
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a13      	ldr	r2, [pc, #76]	; (80003fc <main+0x1f8>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d007      	beq.n	80003c4 <main+0x1c0>
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a12      	ldr	r2, [pc, #72]	; (8000400 <main+0x1fc>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d101      	bne.n	80003c0 <main+0x1bc>
 80003bc:	2307      	movs	r3, #7
 80003be:	e022      	b.n	8000406 <main+0x202>
 80003c0:	2300      	movs	r3, #0
 80003c2:	e020      	b.n	8000406 <main+0x202>
 80003c4:	2306      	movs	r3, #6
 80003c6:	e01e      	b.n	8000406 <main+0x202>
 80003c8:	2305      	movs	r3, #5
 80003ca:	e01c      	b.n	8000406 <main+0x202>
 80003cc:	2304      	movs	r3, #4
 80003ce:	e01a      	b.n	8000406 <main+0x202>
 80003d0:	2303      	movs	r3, #3
 80003d2:	e018      	b.n	8000406 <main+0x202>
 80003d4:	2302      	movs	r3, #2
 80003d6:	e016      	b.n	8000406 <main+0x202>
 80003d8:	2301      	movs	r3, #1
 80003da:	e014      	b.n	8000406 <main+0x202>
 80003dc:	40020000 	.word	0x40020000
 80003e0:	40023800 	.word	0x40023800
 80003e4:	40020800 	.word	0x40020800
 80003e8:	40013c00 	.word	0x40013c00
 80003ec:	40020400 	.word	0x40020400
 80003f0:	40020c00 	.word	0x40020c00
 80003f4:	40021000 	.word	0x40021000
 80003f8:	40021400 	.word	0x40021400
 80003fc:	40021800 	.word	0x40021800
 8000400:	40021c00 	.word	0x40021c00
 8000404:	2300      	movs	r3, #0
 8000406:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	SYSCFG_PCLK_EN();
 800040a:	4b4a      	ldr	r3, [pc, #296]	; (8000534 <main+0x330>)
 800040c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800040e:	4a49      	ldr	r2, [pc, #292]	; (8000534 <main+0x330>)
 8000410:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000414:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1]=portcode <<(temp2*4);
 8000416:	f897 2021 	ldrb.w	r2, [r7, #33]	; 0x21
 800041a:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800041e:	009b      	lsls	r3, r3, #2
 8000420:	fa02 f103 	lsl.w	r1, r2, r3
 8000424:	4a44      	ldr	r2, [pc, #272]	; (8000538 <main+0x334>)
 8000426:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800042a:	3302      	adds	r3, #2
 800042c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	//3. enable the exti interrupt delivery using IMR
	EXTI->IMR |=(1<< GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);
 8000430:	4b42      	ldr	r3, [pc, #264]	; (800053c <main+0x338>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	7a3a      	ldrb	r2, [r7, #8]
 8000436:	4611      	mov	r1, r2
 8000438:	2201      	movs	r2, #1
 800043a:	408a      	lsls	r2, r1
 800043c:	4611      	mov	r1, r2
 800043e:	4a3f      	ldr	r2, [pc, #252]	; (800053c <main+0x338>)
 8000440:	430b      	orrs	r3, r1
 8000442:	6013      	str	r3, [r2, #0]


	//2.configure the speed
	temp=(GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));
 8000444:	7abb      	ldrb	r3, [r7, #10]
 8000446:	461a      	mov	r2, r3
 8000448:	7a3b      	ldrb	r3, [r7, #8]
 800044a:	005b      	lsls	r3, r3, #1
 800044c:	fa02 f303 	lsl.w	r3, r2, r3
 8000450:	627b      	str	r3, [r7, #36]	; 0x24
	GPIOBtn.pGPIOx->OSPEEDR &=~(0x3<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	689a      	ldr	r2, [r3, #8]
 8000456:	7a3b      	ldrb	r3, [r7, #8]
 8000458:	4619      	mov	r1, r3
 800045a:	2303      	movs	r3, #3
 800045c:	408b      	lsls	r3, r1
 800045e:	43db      	mvns	r3, r3
 8000460:	4619      	mov	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	400a      	ands	r2, r1
 8000466:	609a      	str	r2, [r3, #8]
	GPIOBtn.pGPIOx->OSPEEDR |=temp;
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	6899      	ldr	r1, [r3, #8]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000470:	430a      	orrs	r2, r1
 8000472:	609a      	str	r2, [r3, #8]
	temp=0;
 8000474:	2300      	movs	r3, #0
 8000476:	627b      	str	r3, [r7, #36]	; 0x24
	//3.configure the pudp setting
	temp=(GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));
 8000478:	7afb      	ldrb	r3, [r7, #11]
 800047a:	461a      	mov	r2, r3
 800047c:	7a3b      	ldrb	r3, [r7, #8]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	627b      	str	r3, [r7, #36]	; 0x24
	GPIOBtn.pGPIOx->PUPDR &=~(0x3<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	68da      	ldr	r2, [r3, #12]
 800048a:	7a3b      	ldrb	r3, [r7, #8]
 800048c:	4619      	mov	r1, r3
 800048e:	2303      	movs	r3, #3
 8000490:	408b      	lsls	r3, r1
 8000492:	43db      	mvns	r3, r3
 8000494:	4619      	mov	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	400a      	ands	r2, r1
 800049a:	60da      	str	r2, [r3, #12]
	GPIOBtn.pGPIOx->PUPDR |=temp;
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	68d9      	ldr	r1, [r3, #12]
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80004a4:	430a      	orrs	r2, r1
 80004a6:	60da      	str	r2, [r3, #12]
	temp=0;
 80004a8:	2300      	movs	r3, #0
 80004aa:	627b      	str	r3, [r7, #36]	; 0x24
	//4. configure the optype
	temp=(GPIOBtn.GPIO_PinConfig.GPIO_PinOPType<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);
 80004ac:	7b3b      	ldrb	r3, [r7, #12]
 80004ae:	461a      	mov	r2, r3
 80004b0:	7a3b      	ldrb	r3, [r7, #8]
 80004b2:	fa02 f303 	lsl.w	r3, r2, r3
 80004b6:	627b      	str	r3, [r7, #36]	; 0x24
	GPIOBtn.pGPIOx->OTYPER &=~(0x1<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	685a      	ldr	r2, [r3, #4]
 80004bc:	7a3b      	ldrb	r3, [r7, #8]
 80004be:	4619      	mov	r1, r3
 80004c0:	2301      	movs	r3, #1
 80004c2:	408b      	lsls	r3, r1
 80004c4:	43db      	mvns	r3, r3
 80004c6:	4619      	mov	r1, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	400a      	ands	r2, r1
 80004cc:	605a      	str	r2, [r3, #4]
	GPIOBtn.pGPIOx->OTYPER |=temp;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	6859      	ldr	r1, [r3, #4]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80004d6:	430a      	orrs	r2, r1
 80004d8:	605a      	str	r2, [r3, #4]


//	GPIO_WriteToOutPin(GPIOA,GPIO_PIN_NO_5,GPIO_PIN_RESET);//GPIO_PIN_SET//GPIO_PIN_RESET

	//write 1 to the output data register at the bit field corresponding to the pin number
	GPIOBtn.pGPIOx->ODR &= ~( 1 << GPIO_PIN_NO_13);
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	695a      	ldr	r2, [r3, #20]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80004e4:	615a      	str	r2, [r3, #20]


	//IRQ configurations
//	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
	//1. first lets find out the ipr register
	uint8_t iprx=IRQ_NO_EXTI15_10/4;				//выесняем какой регистр IPRX
 80004e6:	230a      	movs	r3, #10
 80004e8:	f887 3020 	strb.w	r3, [r7, #32]
	uint8_t iprx_section=IRQ_NO_EXTI15_10 %4;		//выесняем какиая из 4 секций
 80004ec:	2300      	movs	r3, #0
 80004ee:	77fb      	strb	r3, [r7, #31]
	uint8_t shift_ammount=(8*iprx_section)+(8-NO_PR_BITS_IMPLEMENTED);
 80004f0:	7ffb      	ldrb	r3, [r7, #31]
 80004f2:	00db      	lsls	r3, r3, #3
 80004f4:	b2db      	uxtb	r3, r3
 80004f6:	3304      	adds	r3, #4
 80004f8:	77bb      	strb	r3, [r7, #30]
	*(NVIC_PR_BASE_ADDR +iprx) |= (NVIC_IRQ_PRI15 <<shift_ammount);	/*(8*iprx_section)	 не умножаем на 4 так как арифметика указателей
 80004fa:	f897 3020 	ldrb.w	r3, [r7, #32]
 80004fe:	009b      	lsls	r3, r3, #2
 8000500:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000504:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000508:	681a      	ldr	r2, [r3, #0]
 800050a:	7fbb      	ldrb	r3, [r7, #30]
 800050c:	210f      	movs	r1, #15
 800050e:	fa01 f303 	lsl.w	r3, r1, r3
 8000512:	4619      	mov	r1, r3
 8000514:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000518:	009b      	lsls	r3, r3, #2
 800051a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800051e:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000522:	430a      	orrs	r2, r1
 8000524:	601a      	str	r2, [r3, #0]
	не работает так как мы задумали на 4 потому что следуюший адрес регистра находится через 4 адреса */


//	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,ENABLE);
	//program ISER0 resgister
	*NVIC_ISER1 |=(1<<(IRQ_NO_EXTI15_10 %32));
 8000526:	4b06      	ldr	r3, [pc, #24]	; (8000540 <main+0x33c>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a05      	ldr	r2, [pc, #20]	; (8000540 <main+0x33c>)
 800052c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000530:	6013      	str	r3, [r2, #0]



	while(1);
 8000532:	e7fe      	b.n	8000532 <main+0x32e>
 8000534:	40023800 	.word	0x40023800
 8000538:	40013800 	.word	0x40013800
 800053c:	40013c00 	.word	0x40013c00
 8000540:	e000e104 	.word	0xe000e104

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 f811 	bl	8000598 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff fe45 	bl	8000204 <main>

0800057a <LoopForever>:

LoopForever:
    b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000588:	08000610 	.word	0x08000610
  ldr r2, =_sbss
 800058c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000590:	2000001c 	.word	0x2000001c

08000594 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC_IRQHandler>
	...

08000598 <__libc_init_array>:
 8000598:	b570      	push	{r4, r5, r6, lr}
 800059a:	4d0d      	ldr	r5, [pc, #52]	; (80005d0 <__libc_init_array+0x38>)
 800059c:	4c0d      	ldr	r4, [pc, #52]	; (80005d4 <__libc_init_array+0x3c>)
 800059e:	1b64      	subs	r4, r4, r5
 80005a0:	10a4      	asrs	r4, r4, #2
 80005a2:	2600      	movs	r6, #0
 80005a4:	42a6      	cmp	r6, r4
 80005a6:	d109      	bne.n	80005bc <__libc_init_array+0x24>
 80005a8:	4d0b      	ldr	r5, [pc, #44]	; (80005d8 <__libc_init_array+0x40>)
 80005aa:	4c0c      	ldr	r4, [pc, #48]	; (80005dc <__libc_init_array+0x44>)
 80005ac:	f000 f820 	bl	80005f0 <_init>
 80005b0:	1b64      	subs	r4, r4, r5
 80005b2:	10a4      	asrs	r4, r4, #2
 80005b4:	2600      	movs	r6, #0
 80005b6:	42a6      	cmp	r6, r4
 80005b8:	d105      	bne.n	80005c6 <__libc_init_array+0x2e>
 80005ba:	bd70      	pop	{r4, r5, r6, pc}
 80005bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c0:	4798      	blx	r3
 80005c2:	3601      	adds	r6, #1
 80005c4:	e7ee      	b.n	80005a4 <__libc_init_array+0xc>
 80005c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ca:	4798      	blx	r3
 80005cc:	3601      	adds	r6, #1
 80005ce:	e7f2      	b.n	80005b6 <__libc_init_array+0x1e>
 80005d0:	08000608 	.word	0x08000608
 80005d4:	08000608 	.word	0x08000608
 80005d8:	08000608 	.word	0x08000608
 80005dc:	0800060c 	.word	0x0800060c

080005e0 <memset>:
 80005e0:	4402      	add	r2, r0
 80005e2:	4603      	mov	r3, r0
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d100      	bne.n	80005ea <memset+0xa>
 80005e8:	4770      	bx	lr
 80005ea:	f803 1b01 	strb.w	r1, [r3], #1
 80005ee:	e7f9      	b.n	80005e4 <memset+0x4>

080005f0 <_init>:
 80005f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005f2:	bf00      	nop
 80005f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005f6:	bc08      	pop	{r3}
 80005f8:	469e      	mov	lr, r3
 80005fa:	4770      	bx	lr

080005fc <_fini>:
 80005fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005fe:	bf00      	nop
 8000600:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000602:	bc08      	pop	{r3}
 8000604:	469e      	mov	lr, r3
 8000606:	4770      	bx	lr
