
022_NucF446RE_NoAPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000348  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800050c  08000514  00010514  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800050c  0800050c  00010514  2**0
                  CONTENTS
  4 .ARM          00000000  0800050c  0800050c  00010514  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800050c  08000514  00010514  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800050c  0800050c  0001050c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000510  08000510  00010510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010514  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000514  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000514  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010514  2**0
                  CONTENTS, READONLY
 12 .debug_info   000004a1  00000000  00000000  0001053e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000129  00000000  00000000  000109df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010b08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  00010b58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001b28  00000000  00000000  00010b90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000076c  00000000  00000000  000126b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000781d  00000000  00000000  00012e24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001a641  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000a4  00000000  00000000  0001a694  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080004f4 	.word	0x080004f4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080004f4 	.word	0x080004f4

08000204 <main>:
void delay(void){
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 50000 ; i ++);
}

int main(void){
 8000204:	b580      	push	{r7, lr}
 8000206:	b088      	sub	sp, #32
 8000208:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f966 	bl	80004e4 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f960 	bl	80004e4 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000224:	4b85      	ldr	r3, [pc, #532]	; (800043c <main+0x238>)
 8000226:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000228:	2305      	movs	r3, #5
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000230:	2300      	movs	r3, #0
 8000232:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

//	GPIO_PeriClockControl(GPIOA,ENABLE);
	GPIOA_PCLK_EN();
 800023c:	4b80      	ldr	r3, [pc, #512]	; (8000440 <main+0x23c>)
 800023e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000240:	4a7f      	ldr	r2, [pc, #508]	; (8000440 <main+0x23c>)
 8000242:	f043 0301 	orr.w	r3, r3, #1
 8000246:	6313      	str	r3, [r2, #48]	; 0x30

	//GPIO_Handle_t *pGPIOHandle;

//	GPIO_Init(&GpioLed);
	uint32_t temp=0; 		//temp. register
 8000248:	2300      	movs	r3, #0
 800024a:	61fb      	str	r3, [r7, #28]
	//1. configure the mode of gpio pin
	//the non interrupt mode.
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinMode<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 800024c:	7c7b      	ldrb	r3, [r7, #17]
 800024e:	461a      	mov	r2, r3
 8000250:	7c3b      	ldrb	r3, [r7, #16]
 8000252:	005b      	lsls	r3, r3, #1
 8000254:	fa02 f303 	lsl.w	r3, r2, r3
 8000258:	61fb      	str	r3, [r7, #28]
	GpioLed.pGPIOx->MODER &=~(0x3<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));		//clearing
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	7c3b      	ldrb	r3, [r7, #16]
 8000260:	005b      	lsls	r3, r3, #1
 8000262:	2103      	movs	r1, #3
 8000264:	fa01 f303 	lsl.w	r3, r1, r3
 8000268:	43db      	mvns	r3, r3
 800026a:	4619      	mov	r1, r3
 800026c:	68fb      	ldr	r3, [r7, #12]
 800026e:	400a      	ands	r2, r1
 8000270:	601a      	str	r2, [r3, #0]
	GpioLed.pGPIOx->MODER |=temp;		//setting
 8000272:	68fb      	ldr	r3, [r7, #12]
 8000274:	6819      	ldr	r1, [r3, #0]
 8000276:	68fb      	ldr	r3, [r7, #12]
 8000278:	69fa      	ldr	r2, [r7, #28]
 800027a:	430a      	orrs	r2, r1
 800027c:	601a      	str	r2, [r3, #0]
	temp=0;
 800027e:	2300      	movs	r3, #0
 8000280:	61fb      	str	r3, [r7, #28]
	//2.configure the speed
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinSpeed<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 8000282:	7cbb      	ldrb	r3, [r7, #18]
 8000284:	461a      	mov	r2, r3
 8000286:	7c3b      	ldrb	r3, [r7, #16]
 8000288:	005b      	lsls	r3, r3, #1
 800028a:	fa02 f303 	lsl.w	r3, r2, r3
 800028e:	61fb      	str	r3, [r7, #28]
	GpioLed.pGPIOx->OSPEEDR &=~(0x3<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000290:	68fb      	ldr	r3, [r7, #12]
 8000292:	689a      	ldr	r2, [r3, #8]
 8000294:	7c3b      	ldrb	r3, [r7, #16]
 8000296:	4619      	mov	r1, r3
 8000298:	2303      	movs	r3, #3
 800029a:	408b      	lsls	r3, r1
 800029c:	43db      	mvns	r3, r3
 800029e:	4619      	mov	r1, r3
 80002a0:	68fb      	ldr	r3, [r7, #12]
 80002a2:	400a      	ands	r2, r1
 80002a4:	609a      	str	r2, [r3, #8]
	GpioLed.pGPIOx->OSPEEDR |=temp;
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	6899      	ldr	r1, [r3, #8]
 80002aa:	68fb      	ldr	r3, [r7, #12]
 80002ac:	69fa      	ldr	r2, [r7, #28]
 80002ae:	430a      	orrs	r2, r1
 80002b0:	609a      	str	r2, [r3, #8]
	temp=0;
 80002b2:	2300      	movs	r3, #0
 80002b4:	61fb      	str	r3, [r7, #28]
	//3.configure the pudp setting
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GpioLed.GPIO_PinConfig.GPIO_PinNumber));
 80002b6:	7cfb      	ldrb	r3, [r7, #19]
 80002b8:	461a      	mov	r2, r3
 80002ba:	7c3b      	ldrb	r3, [r7, #16]
 80002bc:	005b      	lsls	r3, r3, #1
 80002be:	fa02 f303 	lsl.w	r3, r2, r3
 80002c2:	61fb      	str	r3, [r7, #28]
	GpioLed.pGPIOx->PUPDR &=~(0x3<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80002c4:	68fb      	ldr	r3, [r7, #12]
 80002c6:	68da      	ldr	r2, [r3, #12]
 80002c8:	7c3b      	ldrb	r3, [r7, #16]
 80002ca:	4619      	mov	r1, r3
 80002cc:	2303      	movs	r3, #3
 80002ce:	408b      	lsls	r3, r1
 80002d0:	43db      	mvns	r3, r3
 80002d2:	4619      	mov	r1, r3
 80002d4:	68fb      	ldr	r3, [r7, #12]
 80002d6:	400a      	ands	r2, r1
 80002d8:	60da      	str	r2, [r3, #12]
	GpioLed.pGPIOx->PUPDR |=temp;
 80002da:	68fb      	ldr	r3, [r7, #12]
 80002dc:	68d9      	ldr	r1, [r3, #12]
 80002de:	68fb      	ldr	r3, [r7, #12]
 80002e0:	69fa      	ldr	r2, [r7, #28]
 80002e2:	430a      	orrs	r2, r1
 80002e4:	60da      	str	r2, [r3, #12]
	temp=0;
 80002e6:	2300      	movs	r3, #0
 80002e8:	61fb      	str	r3, [r7, #28]
	//4. configure the optype
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinOPType<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);
 80002ea:	7d3b      	ldrb	r3, [r7, #20]
 80002ec:	461a      	mov	r2, r3
 80002ee:	7c3b      	ldrb	r3, [r7, #16]
 80002f0:	fa02 f303 	lsl.w	r3, r2, r3
 80002f4:	61fb      	str	r3, [r7, #28]
	GpioLed.pGPIOx->OTYPER &=~(0x1<<GpioLed.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80002f6:	68fb      	ldr	r3, [r7, #12]
 80002f8:	685a      	ldr	r2, [r3, #4]
 80002fa:	7c3b      	ldrb	r3, [r7, #16]
 80002fc:	4619      	mov	r1, r3
 80002fe:	2301      	movs	r3, #1
 8000300:	408b      	lsls	r3, r1
 8000302:	43db      	mvns	r3, r3
 8000304:	4619      	mov	r1, r3
 8000306:	68fb      	ldr	r3, [r7, #12]
 8000308:	400a      	ands	r2, r1
 800030a:	605a      	str	r2, [r3, #4]
	GpioLed.pGPIOx->OTYPER |=temp;
 800030c:	68fb      	ldr	r3, [r7, #12]
 800030e:	6859      	ldr	r1, [r3, #4]
 8000310:	68fb      	ldr	r3, [r7, #12]
 8000312:	69fa      	ldr	r2, [r7, #28]
 8000314:	430a      	orrs	r2, r1
 8000316:	605a      	str	r2, [r3, #4]
	temp=0;
 8000318:	2300      	movs	r3, #0
 800031a:	61fb      	str	r3, [r7, #28]

//	GPIO_Init(&GPIOBtn);
//	uint32_t temp=0; 		//temp. register
	//1. configure the mode of gpio pin
	//the non interrupt mode.
	temp=(GPIOBtn.GPIO_PinConfig.GPIO_PinMode<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));
 800031c:	797b      	ldrb	r3, [r7, #5]
 800031e:	461a      	mov	r2, r3
 8000320:	793b      	ldrb	r3, [r7, #4]
 8000322:	005b      	lsls	r3, r3, #1
 8000324:	fa02 f303 	lsl.w	r3, r2, r3
 8000328:	61fb      	str	r3, [r7, #28]
	GPIOBtn.pGPIOx->MODER &=~(0x3<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));		//clearing
 800032a:	683b      	ldr	r3, [r7, #0]
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	793b      	ldrb	r3, [r7, #4]
 8000330:	005b      	lsls	r3, r3, #1
 8000332:	2103      	movs	r1, #3
 8000334:	fa01 f303 	lsl.w	r3, r1, r3
 8000338:	43db      	mvns	r3, r3
 800033a:	4619      	mov	r1, r3
 800033c:	683b      	ldr	r3, [r7, #0]
 800033e:	400a      	ands	r2, r1
 8000340:	601a      	str	r2, [r3, #0]
	GPIOBtn.pGPIOx->MODER |=temp;		//setting
 8000342:	683b      	ldr	r3, [r7, #0]
 8000344:	6819      	ldr	r1, [r3, #0]
 8000346:	683b      	ldr	r3, [r7, #0]
 8000348:	69fa      	ldr	r2, [r7, #28]
 800034a:	430a      	orrs	r2, r1
 800034c:	601a      	str	r2, [r3, #0]
	temp=0;
 800034e:	2300      	movs	r3, #0
 8000350:	61fb      	str	r3, [r7, #28]
	//2.configure the speed
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinSpeed<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));
 8000352:	7cbb      	ldrb	r3, [r7, #18]
 8000354:	461a      	mov	r2, r3
 8000356:	793b      	ldrb	r3, [r7, #4]
 8000358:	005b      	lsls	r3, r3, #1
 800035a:	fa02 f303 	lsl.w	r3, r2, r3
 800035e:	61fb      	str	r3, [r7, #28]
	GPIOBtn.pGPIOx->OSPEEDR &=~(0x3<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000360:	683b      	ldr	r3, [r7, #0]
 8000362:	689a      	ldr	r2, [r3, #8]
 8000364:	793b      	ldrb	r3, [r7, #4]
 8000366:	4619      	mov	r1, r3
 8000368:	2303      	movs	r3, #3
 800036a:	408b      	lsls	r3, r1
 800036c:	43db      	mvns	r3, r3
 800036e:	4619      	mov	r1, r3
 8000370:	683b      	ldr	r3, [r7, #0]
 8000372:	400a      	ands	r2, r1
 8000374:	609a      	str	r2, [r3, #8]
	GPIOBtn.pGPIOx->OSPEEDR |=temp;
 8000376:	683b      	ldr	r3, [r7, #0]
 8000378:	6899      	ldr	r1, [r3, #8]
 800037a:	683b      	ldr	r3, [r7, #0]
 800037c:	69fa      	ldr	r2, [r7, #28]
 800037e:	430a      	orrs	r2, r1
 8000380:	609a      	str	r2, [r3, #8]
	temp=0;
 8000382:	2300      	movs	r3, #0
 8000384:	61fb      	str	r3, [r7, #28]
	//3.configure the pudp setting
	temp=(GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GPIOBtn.GPIO_PinConfig.GPIO_PinNumber));
 8000386:	7cfb      	ldrb	r3, [r7, #19]
 8000388:	461a      	mov	r2, r3
 800038a:	793b      	ldrb	r3, [r7, #4]
 800038c:	005b      	lsls	r3, r3, #1
 800038e:	fa02 f303 	lsl.w	r3, r2, r3
 8000392:	61fb      	str	r3, [r7, #28]
	GPIOBtn.pGPIOx->PUPDR &=~(0x3<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 8000394:	683b      	ldr	r3, [r7, #0]
 8000396:	68da      	ldr	r2, [r3, #12]
 8000398:	793b      	ldrb	r3, [r7, #4]
 800039a:	4619      	mov	r1, r3
 800039c:	2303      	movs	r3, #3
 800039e:	408b      	lsls	r3, r1
 80003a0:	43db      	mvns	r3, r3
 80003a2:	4619      	mov	r1, r3
 80003a4:	683b      	ldr	r3, [r7, #0]
 80003a6:	400a      	ands	r2, r1
 80003a8:	60da      	str	r2, [r3, #12]
	GPIOBtn.pGPIOx->PUPDR |=temp;
 80003aa:	683b      	ldr	r3, [r7, #0]
 80003ac:	68d9      	ldr	r1, [r3, #12]
 80003ae:	683b      	ldr	r3, [r7, #0]
 80003b0:	69fa      	ldr	r2, [r7, #28]
 80003b2:	430a      	orrs	r2, r1
 80003b4:	60da      	str	r2, [r3, #12]
	temp=0;
 80003b6:	2300      	movs	r3, #0
 80003b8:	61fb      	str	r3, [r7, #28]
	//4. configure the optype
	temp=(GPIOBtn.GPIO_PinConfig.GPIO_PinOPType<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);
 80003ba:	7a3b      	ldrb	r3, [r7, #8]
 80003bc:	461a      	mov	r2, r3
 80003be:	793b      	ldrb	r3, [r7, #4]
 80003c0:	fa02 f303 	lsl.w	r3, r2, r3
 80003c4:	61fb      	str	r3, [r7, #28]
	GPIOBtn.pGPIOx->OTYPER &=~(0x1<<GPIOBtn.GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80003c6:	683b      	ldr	r3, [r7, #0]
 80003c8:	685a      	ldr	r2, [r3, #4]
 80003ca:	793b      	ldrb	r3, [r7, #4]
 80003cc:	4619      	mov	r1, r3
 80003ce:	2301      	movs	r3, #1
 80003d0:	408b      	lsls	r3, r1
 80003d2:	43db      	mvns	r3, r3
 80003d4:	4619      	mov	r1, r3
 80003d6:	683b      	ldr	r3, [r7, #0]
 80003d8:	400a      	ands	r2, r1
 80003da:	605a      	str	r2, [r3, #4]
	GPIOBtn.pGPIOx->OTYPER |=temp;
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	6859      	ldr	r1, [r3, #4]
 80003e0:	683b      	ldr	r3, [r7, #0]
 80003e2:	69fa      	ldr	r2, [r7, #28]
 80003e4:	430a      	orrs	r2, r1
 80003e6:	605a      	str	r2, [r3, #4]

//	GPIO_WriteToOutPin(GPIOA,GPIO_PIN_NO_5,GPIO_PIN_RESET);//GPIO_PIN_SET//GPIO_PIN_RESET

	//write 1 to the output data register at the bit field corresponding to the pin number
	GPIOBtn.pGPIOx->ODR &= ~( 1 << GPIO_PIN_NO_5);
 80003e8:	683b      	ldr	r3, [r7, #0]
 80003ea:	695a      	ldr	r2, [r3, #20]
 80003ec:	683b      	ldr	r3, [r7, #0]
 80003ee:	f022 0220 	bic.w	r2, r2, #32
 80003f2:	615a      	str	r2, [r3, #20]

	//IRQ configurations
//	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
	//1. first lets find out the ipr register
	uint8_t iprx=IRQ_NO_EXTI15_10/4;				//выесняем какой регистр IPRX
 80003f4:	230a      	movs	r3, #10
 80003f6:	76fb      	strb	r3, [r7, #27]
	uint8_t iprx_section=IRQ_NO_EXTI15_10 %4;		//выесняем какиая из 4 секций
 80003f8:	2300      	movs	r3, #0
 80003fa:	76bb      	strb	r3, [r7, #26]
	uint8_t shift_ammount=(8*iprx_section)+(8-NO_PR_BITS_IMPLEMENTED);
 80003fc:	7ebb      	ldrb	r3, [r7, #26]
 80003fe:	00db      	lsls	r3, r3, #3
 8000400:	b2db      	uxtb	r3, r3
 8000402:	3304      	adds	r3, #4
 8000404:	767b      	strb	r3, [r7, #25]
	*(NVIC_PR_BASE_ADDR +iprx) |= (NVIC_IRQ_PRI15 <<shift_ammount);	/*(8*iprx_section)	 не умножаем на 4 так как арифметика указателей
 8000406:	7efb      	ldrb	r3, [r7, #27]
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800040e:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000412:	681a      	ldr	r2, [r3, #0]
 8000414:	7e7b      	ldrb	r3, [r7, #25]
 8000416:	210f      	movs	r1, #15
 8000418:	fa01 f303 	lsl.w	r3, r1, r3
 800041c:	4619      	mov	r1, r3
 800041e:	7efb      	ldrb	r3, [r7, #27]
 8000420:	009b      	lsls	r3, r3, #2
 8000422:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000426:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800042a:	430a      	orrs	r2, r1
 800042c:	601a      	str	r2, [r3, #0]
	не работает так как мы задумали на 4 потому что следуюший адрес регистра находится через 4 адреса */


//	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,ENABLE);
	//program ISER0 resgister
	*NVIC_ISER1 |=(1<<(IRQ_NO_EXTI15_10 %32));
 800042e:	4b05      	ldr	r3, [pc, #20]	; (8000444 <main+0x240>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a04      	ldr	r2, [pc, #16]	; (8000444 <main+0x240>)
 8000434:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000438:	6013      	str	r3, [r2, #0]

	while(1);
 800043a:	e7fe      	b.n	800043a <main+0x236>
 800043c:	40020000 	.word	0x40020000
 8000440:	40023800 	.word	0x40023800
 8000444:	e000e104 	.word	0xe000e104

08000448 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000448:	480d      	ldr	r0, [pc, #52]	; (8000480 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800044a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800044c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000450:	480c      	ldr	r0, [pc, #48]	; (8000484 <LoopForever+0x6>)
  ldr r1, =_edata
 8000452:	490d      	ldr	r1, [pc, #52]	; (8000488 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000454:	4a0d      	ldr	r2, [pc, #52]	; (800048c <LoopForever+0xe>)
  movs r3, #0
 8000456:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000458:	e002      	b.n	8000460 <LoopCopyDataInit>

0800045a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800045a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800045c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800045e:	3304      	adds	r3, #4

08000460 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000460:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000462:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000464:	d3f9      	bcc.n	800045a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000466:	4a0a      	ldr	r2, [pc, #40]	; (8000490 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000468:	4c0a      	ldr	r4, [pc, #40]	; (8000494 <LoopForever+0x16>)
  movs r3, #0
 800046a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800046c:	e001      	b.n	8000472 <LoopFillZerobss>

0800046e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800046e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000470:	3204      	adds	r2, #4

08000472 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000472:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000474:	d3fb      	bcc.n	800046e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000476:	f000 f811 	bl	800049c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800047a:	f7ff fec3 	bl	8000204 <main>

0800047e <LoopForever>:

LoopForever:
    b LoopForever
 800047e:	e7fe      	b.n	800047e <LoopForever>
  ldr   r0, =_estack
 8000480:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000484:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000488:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800048c:	08000514 	.word	0x08000514
  ldr r2, =_sbss
 8000490:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000494:	2000001c 	.word	0x2000001c

08000498 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000498:	e7fe      	b.n	8000498 <ADC_IRQHandler>
	...

0800049c <__libc_init_array>:
 800049c:	b570      	push	{r4, r5, r6, lr}
 800049e:	4d0d      	ldr	r5, [pc, #52]	; (80004d4 <__libc_init_array+0x38>)
 80004a0:	4c0d      	ldr	r4, [pc, #52]	; (80004d8 <__libc_init_array+0x3c>)
 80004a2:	1b64      	subs	r4, r4, r5
 80004a4:	10a4      	asrs	r4, r4, #2
 80004a6:	2600      	movs	r6, #0
 80004a8:	42a6      	cmp	r6, r4
 80004aa:	d109      	bne.n	80004c0 <__libc_init_array+0x24>
 80004ac:	4d0b      	ldr	r5, [pc, #44]	; (80004dc <__libc_init_array+0x40>)
 80004ae:	4c0c      	ldr	r4, [pc, #48]	; (80004e0 <__libc_init_array+0x44>)
 80004b0:	f000 f820 	bl	80004f4 <_init>
 80004b4:	1b64      	subs	r4, r4, r5
 80004b6:	10a4      	asrs	r4, r4, #2
 80004b8:	2600      	movs	r6, #0
 80004ba:	42a6      	cmp	r6, r4
 80004bc:	d105      	bne.n	80004ca <__libc_init_array+0x2e>
 80004be:	bd70      	pop	{r4, r5, r6, pc}
 80004c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80004c4:	4798      	blx	r3
 80004c6:	3601      	adds	r6, #1
 80004c8:	e7ee      	b.n	80004a8 <__libc_init_array+0xc>
 80004ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80004ce:	4798      	blx	r3
 80004d0:	3601      	adds	r6, #1
 80004d2:	e7f2      	b.n	80004ba <__libc_init_array+0x1e>
 80004d4:	0800050c 	.word	0x0800050c
 80004d8:	0800050c 	.word	0x0800050c
 80004dc:	0800050c 	.word	0x0800050c
 80004e0:	08000510 	.word	0x08000510

080004e4 <memset>:
 80004e4:	4402      	add	r2, r0
 80004e6:	4603      	mov	r3, r0
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d100      	bne.n	80004ee <memset+0xa>
 80004ec:	4770      	bx	lr
 80004ee:	f803 1b01 	strb.w	r1, [r3], #1
 80004f2:	e7f9      	b.n	80004e8 <memset+0x4>

080004f4 <_init>:
 80004f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004f6:	bf00      	nop
 80004f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004fa:	bc08      	pop	{r3}
 80004fc:	469e      	mov	lr, r3
 80004fe:	4770      	bx	lr

08000500 <_fini>:
 8000500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000502:	bf00      	nop
 8000504:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000506:	bc08      	pop	{r3}
 8000508:	469e      	mov	lr, r3
 800050a:	4770      	bx	lr
