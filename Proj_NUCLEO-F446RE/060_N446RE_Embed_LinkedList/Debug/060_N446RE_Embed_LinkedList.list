
060_N446RE_Embed_LinkedList.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001434  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000011c  08001604  08001604  00011604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001720  08001720  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001720  08001720  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001720  08001720  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001720  08001720  00011720  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001724  08001724  00011724  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001728  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  0800178c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  0800178c  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000010dc  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000405  00000000  00000000  0002116a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00021570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00021688  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002abd  00000000  00000000  00021768  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001354  00000000  00000000  00024225  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009635  00000000  00000000  00025579  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002ebae  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ba0  00000000  00000000  0002ec00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080015ec 	.word	0x080015ec

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080015ec 	.word	0x080015ec

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include <stdlib.h>


/***************************MAIN*******************/
int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	printf("Hello\n");	fflush(stdout);
 80002b6:	482b      	ldr	r0, [pc, #172]	; (8000364 <main+0xb4>)
 80002b8:	f000 fcb6 	bl	8000c28 <puts>
 80002bc:	4b2a      	ldr	r3, [pc, #168]	; (8000368 <main+0xb8>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	689b      	ldr	r3, [r3, #8]
 80002c2:	4618      	mov	r0, r3
 80002c4:	f000 fa14 	bl	80006f0 <fflush>

	uint32_t *pPointer=(uint32_t *) 0x20000008;
 80002c8:	4b28      	ldr	r3, [pc, #160]	; (800036c <main+0xbc>)
 80002ca:	603b      	str	r3, [r7, #0]

	uint32_t pointAddresVariable=*pPointer;	//эта опереация называется разыменование указателя
 80002cc:	683b      	ldr	r3, [r7, #0]
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	607b      	str	r3, [r7, #4]

	printf("\r\n");		fflush(stdout);
 80002d2:	4827      	ldr	r0, [pc, #156]	; (8000370 <main+0xc0>)
 80002d4:	f000 fca8 	bl	8000c28 <puts>
 80002d8:	4b23      	ldr	r3, [pc, #140]	; (8000368 <main+0xb8>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	689b      	ldr	r3, [r3, #8]
 80002de:	4618      	mov	r0, r3
 80002e0:	f000 fa06 	bl	80006f0 <fflush>

	printf("pPointer address (location)=%x\n",&pPointer);	fflush(stdout);
 80002e4:	463b      	mov	r3, r7
 80002e6:	4619      	mov	r1, r3
 80002e8:	4822      	ldr	r0, [pc, #136]	; (8000374 <main+0xc4>)
 80002ea:	f000 fc17 	bl	8000b1c <iprintf>
 80002ee:	4b1e      	ldr	r3, [pc, #120]	; (8000368 <main+0xb8>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	689b      	ldr	r3, [r3, #8]
 80002f4:	4618      	mov	r0, r3
 80002f6:	f000 f9fb 	bl	80006f0 <fflush>

	printf("pPointer value=%p\n",pPointer);	fflush(stdout);
 80002fa:	683b      	ldr	r3, [r7, #0]
 80002fc:	4619      	mov	r1, r3
 80002fe:	481e      	ldr	r0, [pc, #120]	; (8000378 <main+0xc8>)
 8000300:	f000 fc0c 	bl	8000b1c <iprintf>
 8000304:	4b18      	ldr	r3, [pc, #96]	; (8000368 <main+0xb8>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	689b      	ldr	r3, [r3, #8]
 800030a:	4618      	mov	r0, r3
 800030c:	f000 f9f0 	bl	80006f0 <fflush>

	printf("pointAddresVariable value=%x\n",pointAddresVariable);	fflush(stdout); //печатаем содержание на котром указывает указатель
 8000310:	6879      	ldr	r1, [r7, #4]
 8000312:	481a      	ldr	r0, [pc, #104]	; (800037c <main+0xcc>)
 8000314:	f000 fc02 	bl	8000b1c <iprintf>
 8000318:	4b13      	ldr	r3, [pc, #76]	; (8000368 <main+0xb8>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	689b      	ldr	r3, [r3, #8]
 800031e:	4618      	mov	r0, r3
 8000320:	f000 f9e6 	bl	80006f0 <fflush>

	printf("dereferencing value=%x\n",*pPointer);				fflush(stdout); //печатаем содержание на котром указывает указатель
 8000324:	683b      	ldr	r3, [r7, #0]
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4619      	mov	r1, r3
 800032a:	4815      	ldr	r0, [pc, #84]	; (8000380 <main+0xd0>)
 800032c:	f000 fbf6 	bl	8000b1c <iprintf>
 8000330:	4b0d      	ldr	r3, [pc, #52]	; (8000368 <main+0xb8>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	4618      	mov	r0, r3
 8000338:	f000 f9da 	bl	80006f0 <fflush>

	printf("adr = %08x\n", &pPointer);
 800033c:	463b      	mov	r3, r7
 800033e:	4619      	mov	r1, r3
 8000340:	4810      	ldr	r0, [pc, #64]	; (8000384 <main+0xd4>)
 8000342:	f000 fbeb 	bl	8000b1c <iprintf>

	printf("\r\n");		fflush(stdout);
 8000346:	480a      	ldr	r0, [pc, #40]	; (8000370 <main+0xc0>)
 8000348:	f000 fc6e 	bl	8000c28 <puts>
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <main+0xb8>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	689b      	ldr	r3, [r3, #8]
 8000352:	4618      	mov	r0, r3
 8000354:	f000 f9cc 	bl	80006f0 <fflush>
 8000358:	2300      	movs	r3, #0


}//END MAIN
 800035a:	4618      	mov	r0, r3
 800035c:	3708      	adds	r7, #8
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}
 8000362:	bf00      	nop
 8000364:	08001604 	.word	0x08001604
 8000368:	20000000 	.word	0x20000000
 800036c:	20000008 	.word	0x20000008
 8000370:	0800160c 	.word	0x0800160c
 8000374:	08001610 	.word	0x08001610
 8000378:	08001630 	.word	0x08001630
 800037c:	08001644 	.word	0x08001644
 8000380:	08001664 	.word	0x08001664
 8000384:	0800167c 	.word	0x0800167c

08000388 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000388:	b480      	push	{r7}
 800038a:	b083      	sub	sp, #12
 800038c:	af00      	add	r7, sp, #0
 800038e:	4603      	mov	r3, r0
 8000390:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000392:	4b0e      	ldr	r3, [pc, #56]	; (80003cc <ITM_SendChar+0x44>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	4a0d      	ldr	r2, [pc, #52]	; (80003cc <ITM_SendChar+0x44>)
 8000398:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800039c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800039e:	4b0c      	ldr	r3, [pc, #48]	; (80003d0 <ITM_SendChar+0x48>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	4a0b      	ldr	r2, [pc, #44]	; (80003d0 <ITM_SendChar+0x48>)
 80003a4:	f043 0301 	orr.w	r3, r3, #1
 80003a8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003aa:	bf00      	nop
 80003ac:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	f003 0301 	and.w	r3, r3, #1
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d0f8      	beq.n	80003ac <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003ba:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003be:	79fb      	ldrb	r3, [r7, #7]
 80003c0:	6013      	str	r3, [r2, #0]
}
 80003c2:	bf00      	nop
 80003c4:	370c      	adds	r7, #12
 80003c6:	46bd      	mov	sp, r7
 80003c8:	bc80      	pop	{r7}
 80003ca:	4770      	bx	lr
 80003cc:	e000edfc 	.word	0xe000edfc
 80003d0:	e0000e00 	.word	0xe0000e00

080003d4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b086      	sub	sp, #24
 80003d8:	af00      	add	r7, sp, #0
 80003da:	60f8      	str	r0, [r7, #12]
 80003dc:	60b9      	str	r1, [r7, #8]
 80003de:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e0:	2300      	movs	r3, #0
 80003e2:	617b      	str	r3, [r7, #20]
 80003e4:	e00a      	b.n	80003fc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003e6:	f3af 8000 	nop.w
 80003ea:	4601      	mov	r1, r0
 80003ec:	68bb      	ldr	r3, [r7, #8]
 80003ee:	1c5a      	adds	r2, r3, #1
 80003f0:	60ba      	str	r2, [r7, #8]
 80003f2:	b2ca      	uxtb	r2, r1
 80003f4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f6:	697b      	ldr	r3, [r7, #20]
 80003f8:	3301      	adds	r3, #1
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	697a      	ldr	r2, [r7, #20]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	429a      	cmp	r2, r3
 8000402:	dbf0      	blt.n	80003e6 <_read+0x12>
	}

return len;
 8000404:	687b      	ldr	r3, [r7, #4]
}
 8000406:	4618      	mov	r0, r3
 8000408:	3718      	adds	r7, #24
 800040a:	46bd      	mov	sp, r7
 800040c:	bd80      	pop	{r7, pc}

0800040e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800040e:	b580      	push	{r7, lr}
 8000410:	b086      	sub	sp, #24
 8000412:	af00      	add	r7, sp, #0
 8000414:	60f8      	str	r0, [r7, #12]
 8000416:	60b9      	str	r1, [r7, #8]
 8000418:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041a:	2300      	movs	r3, #0
 800041c:	617b      	str	r3, [r7, #20]
 800041e:	e009      	b.n	8000434 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000420:	68bb      	ldr	r3, [r7, #8]
 8000422:	1c5a      	adds	r2, r3, #1
 8000424:	60ba      	str	r2, [r7, #8]
 8000426:	781b      	ldrb	r3, [r3, #0]
 8000428:	4618      	mov	r0, r3
 800042a:	f7ff ffad 	bl	8000388 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042e:	697b      	ldr	r3, [r7, #20]
 8000430:	3301      	adds	r3, #1
 8000432:	617b      	str	r3, [r7, #20]
 8000434:	697a      	ldr	r2, [r7, #20]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	429a      	cmp	r2, r3
 800043a:	dbf1      	blt.n	8000420 <_write+0x12>
	}
	return len;
 800043c:	687b      	ldr	r3, [r7, #4]
}
 800043e:	4618      	mov	r0, r3
 8000440:	3718      	adds	r7, #24
 8000442:	46bd      	mov	sp, r7
 8000444:	bd80      	pop	{r7, pc}

08000446 <_close>:

int _close(int file)
{
 8000446:	b480      	push	{r7}
 8000448:	b083      	sub	sp, #12
 800044a:	af00      	add	r7, sp, #0
 800044c:	6078      	str	r0, [r7, #4]
	return -1;
 800044e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000452:	4618      	mov	r0, r3
 8000454:	370c      	adds	r7, #12
 8000456:	46bd      	mov	sp, r7
 8000458:	bc80      	pop	{r7}
 800045a:	4770      	bx	lr

0800045c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800045c:	b480      	push	{r7}
 800045e:	b083      	sub	sp, #12
 8000460:	af00      	add	r7, sp, #0
 8000462:	6078      	str	r0, [r7, #4]
 8000464:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000466:	683b      	ldr	r3, [r7, #0]
 8000468:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800046c:	605a      	str	r2, [r3, #4]
	return 0;
 800046e:	2300      	movs	r3, #0
}
 8000470:	4618      	mov	r0, r3
 8000472:	370c      	adds	r7, #12
 8000474:	46bd      	mov	sp, r7
 8000476:	bc80      	pop	{r7}
 8000478:	4770      	bx	lr

0800047a <_isatty>:

int _isatty(int file)
{
 800047a:	b480      	push	{r7}
 800047c:	b083      	sub	sp, #12
 800047e:	af00      	add	r7, sp, #0
 8000480:	6078      	str	r0, [r7, #4]
	return 1;
 8000482:	2301      	movs	r3, #1
}
 8000484:	4618      	mov	r0, r3
 8000486:	370c      	adds	r7, #12
 8000488:	46bd      	mov	sp, r7
 800048a:	bc80      	pop	{r7}
 800048c:	4770      	bx	lr

0800048e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800048e:	b480      	push	{r7}
 8000490:	b085      	sub	sp, #20
 8000492:	af00      	add	r7, sp, #0
 8000494:	60f8      	str	r0, [r7, #12]
 8000496:	60b9      	str	r1, [r7, #8]
 8000498:	607a      	str	r2, [r7, #4]
	return 0;
 800049a:	2300      	movs	r3, #0
}
 800049c:	4618      	mov	r0, r3
 800049e:	3714      	adds	r7, #20
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bc80      	pop	{r7}
 80004a4:	4770      	bx	lr
	...

080004a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a8:	b580      	push	{r7, lr}
 80004aa:	b086      	sub	sp, #24
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004b0:	4a14      	ldr	r2, [pc, #80]	; (8000504 <_sbrk+0x5c>)
 80004b2:	4b15      	ldr	r3, [pc, #84]	; (8000508 <_sbrk+0x60>)
 80004b4:	1ad3      	subs	r3, r2, r3
 80004b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b8:	697b      	ldr	r3, [r7, #20]
 80004ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004bc:	4b13      	ldr	r3, [pc, #76]	; (800050c <_sbrk+0x64>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	2b00      	cmp	r3, #0
 80004c2:	d102      	bne.n	80004ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c4:	4b11      	ldr	r3, [pc, #68]	; (800050c <_sbrk+0x64>)
 80004c6:	4a12      	ldr	r2, [pc, #72]	; (8000510 <_sbrk+0x68>)
 80004c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ca:	4b10      	ldr	r3, [pc, #64]	; (800050c <_sbrk+0x64>)
 80004cc:	681a      	ldr	r2, [r3, #0]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	4413      	add	r3, r2
 80004d2:	693a      	ldr	r2, [r7, #16]
 80004d4:	429a      	cmp	r2, r3
 80004d6:	d207      	bcs.n	80004e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d8:	f000 f846 	bl	8000568 <__errno>
 80004dc:	4603      	mov	r3, r0
 80004de:	220c      	movs	r2, #12
 80004e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004e2:	f04f 33ff 	mov.w	r3, #4294967295
 80004e6:	e009      	b.n	80004fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e8:	4b08      	ldr	r3, [pc, #32]	; (800050c <_sbrk+0x64>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ee:	4b07      	ldr	r3, [pc, #28]	; (800050c <_sbrk+0x64>)
 80004f0:	681a      	ldr	r2, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	4413      	add	r3, r2
 80004f6:	4a05      	ldr	r2, [pc, #20]	; (800050c <_sbrk+0x64>)
 80004f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004fa:	68fb      	ldr	r3, [r7, #12]
}
 80004fc:	4618      	mov	r0, r3
 80004fe:	3718      	adds	r7, #24
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}
 8000504:	20020000 	.word	0x20020000
 8000508:	00000400 	.word	0x00000400
 800050c:	20000080 	.word	0x20000080
 8000510:	20000098 	.word	0x20000098

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	; (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	; (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	; (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	; (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	; (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	; (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 f9dd 	bl	8000900 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff feb3 	bl	80002b0 <main>

0800054a <LoopForever>:

LoopForever:
    b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000558:	08001728 	.word	0x08001728
  ldr r2, =_sbss
 800055c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000560:	20000094 	.word	0x20000094

08000564 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC_IRQHandler>
	...

08000568 <__errno>:
 8000568:	4b01      	ldr	r3, [pc, #4]	; (8000570 <__errno+0x8>)
 800056a:	6818      	ldr	r0, [r3, #0]
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop
 8000570:	20000000 	.word	0x20000000

08000574 <__sflush_r>:
 8000574:	898a      	ldrh	r2, [r1, #12]
 8000576:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000578:	4605      	mov	r5, r0
 800057a:	0710      	lsls	r0, r2, #28
 800057c:	460c      	mov	r4, r1
 800057e:	d457      	bmi.n	8000630 <__sflush_r+0xbc>
 8000580:	684b      	ldr	r3, [r1, #4]
 8000582:	2b00      	cmp	r3, #0
 8000584:	dc04      	bgt.n	8000590 <__sflush_r+0x1c>
 8000586:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000588:	2b00      	cmp	r3, #0
 800058a:	dc01      	bgt.n	8000590 <__sflush_r+0x1c>
 800058c:	2000      	movs	r0, #0
 800058e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000590:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000592:	2e00      	cmp	r6, #0
 8000594:	d0fa      	beq.n	800058c <__sflush_r+0x18>
 8000596:	2300      	movs	r3, #0
 8000598:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800059c:	682f      	ldr	r7, [r5, #0]
 800059e:	602b      	str	r3, [r5, #0]
 80005a0:	d032      	beq.n	8000608 <__sflush_r+0x94>
 80005a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80005a4:	89a3      	ldrh	r3, [r4, #12]
 80005a6:	075a      	lsls	r2, r3, #29
 80005a8:	d505      	bpl.n	80005b6 <__sflush_r+0x42>
 80005aa:	6863      	ldr	r3, [r4, #4]
 80005ac:	1ac0      	subs	r0, r0, r3
 80005ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80005b0:	b10b      	cbz	r3, 80005b6 <__sflush_r+0x42>
 80005b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80005b4:	1ac0      	subs	r0, r0, r3
 80005b6:	2300      	movs	r3, #0
 80005b8:	4602      	mov	r2, r0
 80005ba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005bc:	6a21      	ldr	r1, [r4, #32]
 80005be:	4628      	mov	r0, r5
 80005c0:	47b0      	blx	r6
 80005c2:	1c43      	adds	r3, r0, #1
 80005c4:	89a3      	ldrh	r3, [r4, #12]
 80005c6:	d106      	bne.n	80005d6 <__sflush_r+0x62>
 80005c8:	6829      	ldr	r1, [r5, #0]
 80005ca:	291d      	cmp	r1, #29
 80005cc:	d82c      	bhi.n	8000628 <__sflush_r+0xb4>
 80005ce:	4a29      	ldr	r2, [pc, #164]	; (8000674 <__sflush_r+0x100>)
 80005d0:	40ca      	lsrs	r2, r1
 80005d2:	07d6      	lsls	r6, r2, #31
 80005d4:	d528      	bpl.n	8000628 <__sflush_r+0xb4>
 80005d6:	2200      	movs	r2, #0
 80005d8:	6062      	str	r2, [r4, #4]
 80005da:	04d9      	lsls	r1, r3, #19
 80005dc:	6922      	ldr	r2, [r4, #16]
 80005de:	6022      	str	r2, [r4, #0]
 80005e0:	d504      	bpl.n	80005ec <__sflush_r+0x78>
 80005e2:	1c42      	adds	r2, r0, #1
 80005e4:	d101      	bne.n	80005ea <__sflush_r+0x76>
 80005e6:	682b      	ldr	r3, [r5, #0]
 80005e8:	b903      	cbnz	r3, 80005ec <__sflush_r+0x78>
 80005ea:	6560      	str	r0, [r4, #84]	; 0x54
 80005ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005ee:	602f      	str	r7, [r5, #0]
 80005f0:	2900      	cmp	r1, #0
 80005f2:	d0cb      	beq.n	800058c <__sflush_r+0x18>
 80005f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005f8:	4299      	cmp	r1, r3
 80005fa:	d002      	beq.n	8000602 <__sflush_r+0x8e>
 80005fc:	4628      	mov	r0, r5
 80005fe:	f000 f9af 	bl	8000960 <_free_r>
 8000602:	2000      	movs	r0, #0
 8000604:	6360      	str	r0, [r4, #52]	; 0x34
 8000606:	e7c2      	b.n	800058e <__sflush_r+0x1a>
 8000608:	6a21      	ldr	r1, [r4, #32]
 800060a:	2301      	movs	r3, #1
 800060c:	4628      	mov	r0, r5
 800060e:	47b0      	blx	r6
 8000610:	1c41      	adds	r1, r0, #1
 8000612:	d1c7      	bne.n	80005a4 <__sflush_r+0x30>
 8000614:	682b      	ldr	r3, [r5, #0]
 8000616:	2b00      	cmp	r3, #0
 8000618:	d0c4      	beq.n	80005a4 <__sflush_r+0x30>
 800061a:	2b1d      	cmp	r3, #29
 800061c:	d001      	beq.n	8000622 <__sflush_r+0xae>
 800061e:	2b16      	cmp	r3, #22
 8000620:	d101      	bne.n	8000626 <__sflush_r+0xb2>
 8000622:	602f      	str	r7, [r5, #0]
 8000624:	e7b2      	b.n	800058c <__sflush_r+0x18>
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800062c:	81a3      	strh	r3, [r4, #12]
 800062e:	e7ae      	b.n	800058e <__sflush_r+0x1a>
 8000630:	690f      	ldr	r7, [r1, #16]
 8000632:	2f00      	cmp	r7, #0
 8000634:	d0aa      	beq.n	800058c <__sflush_r+0x18>
 8000636:	0793      	lsls	r3, r2, #30
 8000638:	680e      	ldr	r6, [r1, #0]
 800063a:	bf08      	it	eq
 800063c:	694b      	ldreq	r3, [r1, #20]
 800063e:	600f      	str	r7, [r1, #0]
 8000640:	bf18      	it	ne
 8000642:	2300      	movne	r3, #0
 8000644:	1bf6      	subs	r6, r6, r7
 8000646:	608b      	str	r3, [r1, #8]
 8000648:	2e00      	cmp	r6, #0
 800064a:	dd9f      	ble.n	800058c <__sflush_r+0x18>
 800064c:	6a21      	ldr	r1, [r4, #32]
 800064e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000652:	4633      	mov	r3, r6
 8000654:	463a      	mov	r2, r7
 8000656:	4628      	mov	r0, r5
 8000658:	47e0      	blx	ip
 800065a:	2800      	cmp	r0, #0
 800065c:	dc06      	bgt.n	800066c <__sflush_r+0xf8>
 800065e:	89a3      	ldrh	r3, [r4, #12]
 8000660:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000664:	81a3      	strh	r3, [r4, #12]
 8000666:	f04f 30ff 	mov.w	r0, #4294967295
 800066a:	e790      	b.n	800058e <__sflush_r+0x1a>
 800066c:	4407      	add	r7, r0
 800066e:	1a36      	subs	r6, r6, r0
 8000670:	e7ea      	b.n	8000648 <__sflush_r+0xd4>
 8000672:	bf00      	nop
 8000674:	20400001 	.word	0x20400001

08000678 <_fflush_r>:
 8000678:	b538      	push	{r3, r4, r5, lr}
 800067a:	690b      	ldr	r3, [r1, #16]
 800067c:	4605      	mov	r5, r0
 800067e:	460c      	mov	r4, r1
 8000680:	b913      	cbnz	r3, 8000688 <_fflush_r+0x10>
 8000682:	2500      	movs	r5, #0
 8000684:	4628      	mov	r0, r5
 8000686:	bd38      	pop	{r3, r4, r5, pc}
 8000688:	b118      	cbz	r0, 8000692 <_fflush_r+0x1a>
 800068a:	6983      	ldr	r3, [r0, #24]
 800068c:	b90b      	cbnz	r3, 8000692 <_fflush_r+0x1a>
 800068e:	f000 f899 	bl	80007c4 <__sinit>
 8000692:	4b14      	ldr	r3, [pc, #80]	; (80006e4 <_fflush_r+0x6c>)
 8000694:	429c      	cmp	r4, r3
 8000696:	d11b      	bne.n	80006d0 <_fflush_r+0x58>
 8000698:	686c      	ldr	r4, [r5, #4]
 800069a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800069e:	2b00      	cmp	r3, #0
 80006a0:	d0ef      	beq.n	8000682 <_fflush_r+0xa>
 80006a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80006a4:	07d0      	lsls	r0, r2, #31
 80006a6:	d404      	bmi.n	80006b2 <_fflush_r+0x3a>
 80006a8:	0599      	lsls	r1, r3, #22
 80006aa:	d402      	bmi.n	80006b2 <_fflush_r+0x3a>
 80006ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ae:	f000 f94c 	bl	800094a <__retarget_lock_acquire_recursive>
 80006b2:	4628      	mov	r0, r5
 80006b4:	4621      	mov	r1, r4
 80006b6:	f7ff ff5d 	bl	8000574 <__sflush_r>
 80006ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006bc:	07da      	lsls	r2, r3, #31
 80006be:	4605      	mov	r5, r0
 80006c0:	d4e0      	bmi.n	8000684 <_fflush_r+0xc>
 80006c2:	89a3      	ldrh	r3, [r4, #12]
 80006c4:	059b      	lsls	r3, r3, #22
 80006c6:	d4dd      	bmi.n	8000684 <_fflush_r+0xc>
 80006c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ca:	f000 f93f 	bl	800094c <__retarget_lock_release_recursive>
 80006ce:	e7d9      	b.n	8000684 <_fflush_r+0xc>
 80006d0:	4b05      	ldr	r3, [pc, #20]	; (80006e8 <_fflush_r+0x70>)
 80006d2:	429c      	cmp	r4, r3
 80006d4:	d101      	bne.n	80006da <_fflush_r+0x62>
 80006d6:	68ac      	ldr	r4, [r5, #8]
 80006d8:	e7df      	b.n	800069a <_fflush_r+0x22>
 80006da:	4b04      	ldr	r3, [pc, #16]	; (80006ec <_fflush_r+0x74>)
 80006dc:	429c      	cmp	r4, r3
 80006de:	bf08      	it	eq
 80006e0:	68ec      	ldreq	r4, [r5, #12]
 80006e2:	e7da      	b.n	800069a <_fflush_r+0x22>
 80006e4:	080016a8 	.word	0x080016a8
 80006e8:	080016c8 	.word	0x080016c8
 80006ec:	08001688 	.word	0x08001688

080006f0 <fflush>:
 80006f0:	4601      	mov	r1, r0
 80006f2:	b920      	cbnz	r0, 80006fe <fflush+0xe>
 80006f4:	4b04      	ldr	r3, [pc, #16]	; (8000708 <fflush+0x18>)
 80006f6:	4905      	ldr	r1, [pc, #20]	; (800070c <fflush+0x1c>)
 80006f8:	6818      	ldr	r0, [r3, #0]
 80006fa:	f000 b8e1 	b.w	80008c0 <_fwalk_reent>
 80006fe:	4b04      	ldr	r3, [pc, #16]	; (8000710 <fflush+0x20>)
 8000700:	6818      	ldr	r0, [r3, #0]
 8000702:	f7ff bfb9 	b.w	8000678 <_fflush_r>
 8000706:	bf00      	nop
 8000708:	080016e8 	.word	0x080016e8
 800070c:	08000679 	.word	0x08000679
 8000710:	20000000 	.word	0x20000000

08000714 <std>:
 8000714:	2300      	movs	r3, #0
 8000716:	b510      	push	{r4, lr}
 8000718:	4604      	mov	r4, r0
 800071a:	e9c0 3300 	strd	r3, r3, [r0]
 800071e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000722:	6083      	str	r3, [r0, #8]
 8000724:	8181      	strh	r1, [r0, #12]
 8000726:	6643      	str	r3, [r0, #100]	; 0x64
 8000728:	81c2      	strh	r2, [r0, #14]
 800072a:	6183      	str	r3, [r0, #24]
 800072c:	4619      	mov	r1, r3
 800072e:	2208      	movs	r2, #8
 8000730:	305c      	adds	r0, #92	; 0x5c
 8000732:	f000 f90c 	bl	800094e <memset>
 8000736:	4b05      	ldr	r3, [pc, #20]	; (800074c <std+0x38>)
 8000738:	6263      	str	r3, [r4, #36]	; 0x24
 800073a:	4b05      	ldr	r3, [pc, #20]	; (8000750 <std+0x3c>)
 800073c:	62a3      	str	r3, [r4, #40]	; 0x28
 800073e:	4b05      	ldr	r3, [pc, #20]	; (8000754 <std+0x40>)
 8000740:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000742:	4b05      	ldr	r3, [pc, #20]	; (8000758 <std+0x44>)
 8000744:	6224      	str	r4, [r4, #32]
 8000746:	6323      	str	r3, [r4, #48]	; 0x30
 8000748:	bd10      	pop	{r4, pc}
 800074a:	bf00      	nop
 800074c:	08000c59 	.word	0x08000c59
 8000750:	08000c7b 	.word	0x08000c7b
 8000754:	08000cb3 	.word	0x08000cb3
 8000758:	08000cd7 	.word	0x08000cd7

0800075c <_cleanup_r>:
 800075c:	4901      	ldr	r1, [pc, #4]	; (8000764 <_cleanup_r+0x8>)
 800075e:	f000 b8af 	b.w	80008c0 <_fwalk_reent>
 8000762:	bf00      	nop
 8000764:	08000679 	.word	0x08000679

08000768 <__sfmoreglue>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	2268      	movs	r2, #104	; 0x68
 800076c:	1e4d      	subs	r5, r1, #1
 800076e:	4355      	muls	r5, r2
 8000770:	460e      	mov	r6, r1
 8000772:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000776:	f000 f95d 	bl	8000a34 <_malloc_r>
 800077a:	4604      	mov	r4, r0
 800077c:	b140      	cbz	r0, 8000790 <__sfmoreglue+0x28>
 800077e:	2100      	movs	r1, #0
 8000780:	e9c0 1600 	strd	r1, r6, [r0]
 8000784:	300c      	adds	r0, #12
 8000786:	60a0      	str	r0, [r4, #8]
 8000788:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800078c:	f000 f8df 	bl	800094e <memset>
 8000790:	4620      	mov	r0, r4
 8000792:	bd70      	pop	{r4, r5, r6, pc}

08000794 <__sfp_lock_acquire>:
 8000794:	4801      	ldr	r0, [pc, #4]	; (800079c <__sfp_lock_acquire+0x8>)
 8000796:	f000 b8d8 	b.w	800094a <__retarget_lock_acquire_recursive>
 800079a:	bf00      	nop
 800079c:	20000085 	.word	0x20000085

080007a0 <__sfp_lock_release>:
 80007a0:	4801      	ldr	r0, [pc, #4]	; (80007a8 <__sfp_lock_release+0x8>)
 80007a2:	f000 b8d3 	b.w	800094c <__retarget_lock_release_recursive>
 80007a6:	bf00      	nop
 80007a8:	20000085 	.word	0x20000085

080007ac <__sinit_lock_acquire>:
 80007ac:	4801      	ldr	r0, [pc, #4]	; (80007b4 <__sinit_lock_acquire+0x8>)
 80007ae:	f000 b8cc 	b.w	800094a <__retarget_lock_acquire_recursive>
 80007b2:	bf00      	nop
 80007b4:	20000086 	.word	0x20000086

080007b8 <__sinit_lock_release>:
 80007b8:	4801      	ldr	r0, [pc, #4]	; (80007c0 <__sinit_lock_release+0x8>)
 80007ba:	f000 b8c7 	b.w	800094c <__retarget_lock_release_recursive>
 80007be:	bf00      	nop
 80007c0:	20000086 	.word	0x20000086

080007c4 <__sinit>:
 80007c4:	b510      	push	{r4, lr}
 80007c6:	4604      	mov	r4, r0
 80007c8:	f7ff fff0 	bl	80007ac <__sinit_lock_acquire>
 80007cc:	69a3      	ldr	r3, [r4, #24]
 80007ce:	b11b      	cbz	r3, 80007d8 <__sinit+0x14>
 80007d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007d4:	f7ff bff0 	b.w	80007b8 <__sinit_lock_release>
 80007d8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007dc:	6523      	str	r3, [r4, #80]	; 0x50
 80007de:	4b13      	ldr	r3, [pc, #76]	; (800082c <__sinit+0x68>)
 80007e0:	4a13      	ldr	r2, [pc, #76]	; (8000830 <__sinit+0x6c>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	62a2      	str	r2, [r4, #40]	; 0x28
 80007e6:	42a3      	cmp	r3, r4
 80007e8:	bf04      	itt	eq
 80007ea:	2301      	moveq	r3, #1
 80007ec:	61a3      	streq	r3, [r4, #24]
 80007ee:	4620      	mov	r0, r4
 80007f0:	f000 f820 	bl	8000834 <__sfp>
 80007f4:	6060      	str	r0, [r4, #4]
 80007f6:	4620      	mov	r0, r4
 80007f8:	f000 f81c 	bl	8000834 <__sfp>
 80007fc:	60a0      	str	r0, [r4, #8]
 80007fe:	4620      	mov	r0, r4
 8000800:	f000 f818 	bl	8000834 <__sfp>
 8000804:	2200      	movs	r2, #0
 8000806:	60e0      	str	r0, [r4, #12]
 8000808:	2104      	movs	r1, #4
 800080a:	6860      	ldr	r0, [r4, #4]
 800080c:	f7ff ff82 	bl	8000714 <std>
 8000810:	68a0      	ldr	r0, [r4, #8]
 8000812:	2201      	movs	r2, #1
 8000814:	2109      	movs	r1, #9
 8000816:	f7ff ff7d 	bl	8000714 <std>
 800081a:	68e0      	ldr	r0, [r4, #12]
 800081c:	2202      	movs	r2, #2
 800081e:	2112      	movs	r1, #18
 8000820:	f7ff ff78 	bl	8000714 <std>
 8000824:	2301      	movs	r3, #1
 8000826:	61a3      	str	r3, [r4, #24]
 8000828:	e7d2      	b.n	80007d0 <__sinit+0xc>
 800082a:	bf00      	nop
 800082c:	080016e8 	.word	0x080016e8
 8000830:	0800075d 	.word	0x0800075d

08000834 <__sfp>:
 8000834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000836:	4607      	mov	r7, r0
 8000838:	f7ff ffac 	bl	8000794 <__sfp_lock_acquire>
 800083c:	4b1e      	ldr	r3, [pc, #120]	; (80008b8 <__sfp+0x84>)
 800083e:	681e      	ldr	r6, [r3, #0]
 8000840:	69b3      	ldr	r3, [r6, #24]
 8000842:	b913      	cbnz	r3, 800084a <__sfp+0x16>
 8000844:	4630      	mov	r0, r6
 8000846:	f7ff ffbd 	bl	80007c4 <__sinit>
 800084a:	3648      	adds	r6, #72	; 0x48
 800084c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000850:	3b01      	subs	r3, #1
 8000852:	d503      	bpl.n	800085c <__sfp+0x28>
 8000854:	6833      	ldr	r3, [r6, #0]
 8000856:	b30b      	cbz	r3, 800089c <__sfp+0x68>
 8000858:	6836      	ldr	r6, [r6, #0]
 800085a:	e7f7      	b.n	800084c <__sfp+0x18>
 800085c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000860:	b9d5      	cbnz	r5, 8000898 <__sfp+0x64>
 8000862:	4b16      	ldr	r3, [pc, #88]	; (80008bc <__sfp+0x88>)
 8000864:	60e3      	str	r3, [r4, #12]
 8000866:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800086a:	6665      	str	r5, [r4, #100]	; 0x64
 800086c:	f000 f86c 	bl	8000948 <__retarget_lock_init_recursive>
 8000870:	f7ff ff96 	bl	80007a0 <__sfp_lock_release>
 8000874:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000878:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800087c:	6025      	str	r5, [r4, #0]
 800087e:	61a5      	str	r5, [r4, #24]
 8000880:	2208      	movs	r2, #8
 8000882:	4629      	mov	r1, r5
 8000884:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000888:	f000 f861 	bl	800094e <memset>
 800088c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000890:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000894:	4620      	mov	r0, r4
 8000896:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000898:	3468      	adds	r4, #104	; 0x68
 800089a:	e7d9      	b.n	8000850 <__sfp+0x1c>
 800089c:	2104      	movs	r1, #4
 800089e:	4638      	mov	r0, r7
 80008a0:	f7ff ff62 	bl	8000768 <__sfmoreglue>
 80008a4:	4604      	mov	r4, r0
 80008a6:	6030      	str	r0, [r6, #0]
 80008a8:	2800      	cmp	r0, #0
 80008aa:	d1d5      	bne.n	8000858 <__sfp+0x24>
 80008ac:	f7ff ff78 	bl	80007a0 <__sfp_lock_release>
 80008b0:	230c      	movs	r3, #12
 80008b2:	603b      	str	r3, [r7, #0]
 80008b4:	e7ee      	b.n	8000894 <__sfp+0x60>
 80008b6:	bf00      	nop
 80008b8:	080016e8 	.word	0x080016e8
 80008bc:	ffff0001 	.word	0xffff0001

080008c0 <_fwalk_reent>:
 80008c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008c4:	4606      	mov	r6, r0
 80008c6:	4688      	mov	r8, r1
 80008c8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008cc:	2700      	movs	r7, #0
 80008ce:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008d2:	f1b9 0901 	subs.w	r9, r9, #1
 80008d6:	d505      	bpl.n	80008e4 <_fwalk_reent+0x24>
 80008d8:	6824      	ldr	r4, [r4, #0]
 80008da:	2c00      	cmp	r4, #0
 80008dc:	d1f7      	bne.n	80008ce <_fwalk_reent+0xe>
 80008de:	4638      	mov	r0, r7
 80008e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008e4:	89ab      	ldrh	r3, [r5, #12]
 80008e6:	2b01      	cmp	r3, #1
 80008e8:	d907      	bls.n	80008fa <_fwalk_reent+0x3a>
 80008ea:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008ee:	3301      	adds	r3, #1
 80008f0:	d003      	beq.n	80008fa <_fwalk_reent+0x3a>
 80008f2:	4629      	mov	r1, r5
 80008f4:	4630      	mov	r0, r6
 80008f6:	47c0      	blx	r8
 80008f8:	4307      	orrs	r7, r0
 80008fa:	3568      	adds	r5, #104	; 0x68
 80008fc:	e7e9      	b.n	80008d2 <_fwalk_reent+0x12>
	...

08000900 <__libc_init_array>:
 8000900:	b570      	push	{r4, r5, r6, lr}
 8000902:	4d0d      	ldr	r5, [pc, #52]	; (8000938 <__libc_init_array+0x38>)
 8000904:	4c0d      	ldr	r4, [pc, #52]	; (800093c <__libc_init_array+0x3c>)
 8000906:	1b64      	subs	r4, r4, r5
 8000908:	10a4      	asrs	r4, r4, #2
 800090a:	2600      	movs	r6, #0
 800090c:	42a6      	cmp	r6, r4
 800090e:	d109      	bne.n	8000924 <__libc_init_array+0x24>
 8000910:	4d0b      	ldr	r5, [pc, #44]	; (8000940 <__libc_init_array+0x40>)
 8000912:	4c0c      	ldr	r4, [pc, #48]	; (8000944 <__libc_init_array+0x44>)
 8000914:	f000 fe6a 	bl	80015ec <_init>
 8000918:	1b64      	subs	r4, r4, r5
 800091a:	10a4      	asrs	r4, r4, #2
 800091c:	2600      	movs	r6, #0
 800091e:	42a6      	cmp	r6, r4
 8000920:	d105      	bne.n	800092e <__libc_init_array+0x2e>
 8000922:	bd70      	pop	{r4, r5, r6, pc}
 8000924:	f855 3b04 	ldr.w	r3, [r5], #4
 8000928:	4798      	blx	r3
 800092a:	3601      	adds	r6, #1
 800092c:	e7ee      	b.n	800090c <__libc_init_array+0xc>
 800092e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000932:	4798      	blx	r3
 8000934:	3601      	adds	r6, #1
 8000936:	e7f2      	b.n	800091e <__libc_init_array+0x1e>
 8000938:	08001720 	.word	0x08001720
 800093c:	08001720 	.word	0x08001720
 8000940:	08001720 	.word	0x08001720
 8000944:	08001724 	.word	0x08001724

08000948 <__retarget_lock_init_recursive>:
 8000948:	4770      	bx	lr

0800094a <__retarget_lock_acquire_recursive>:
 800094a:	4770      	bx	lr

0800094c <__retarget_lock_release_recursive>:
 800094c:	4770      	bx	lr

0800094e <memset>:
 800094e:	4402      	add	r2, r0
 8000950:	4603      	mov	r3, r0
 8000952:	4293      	cmp	r3, r2
 8000954:	d100      	bne.n	8000958 <memset+0xa>
 8000956:	4770      	bx	lr
 8000958:	f803 1b01 	strb.w	r1, [r3], #1
 800095c:	e7f9      	b.n	8000952 <memset+0x4>
	...

08000960 <_free_r>:
 8000960:	b538      	push	{r3, r4, r5, lr}
 8000962:	4605      	mov	r5, r0
 8000964:	2900      	cmp	r1, #0
 8000966:	d041      	beq.n	80009ec <_free_r+0x8c>
 8000968:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800096c:	1f0c      	subs	r4, r1, #4
 800096e:	2b00      	cmp	r3, #0
 8000970:	bfb8      	it	lt
 8000972:	18e4      	addlt	r4, r4, r3
 8000974:	f000 fb0e 	bl	8000f94 <__malloc_lock>
 8000978:	4a1d      	ldr	r2, [pc, #116]	; (80009f0 <_free_r+0x90>)
 800097a:	6813      	ldr	r3, [r2, #0]
 800097c:	b933      	cbnz	r3, 800098c <_free_r+0x2c>
 800097e:	6063      	str	r3, [r4, #4]
 8000980:	6014      	str	r4, [r2, #0]
 8000982:	4628      	mov	r0, r5
 8000984:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000988:	f000 bb0a 	b.w	8000fa0 <__malloc_unlock>
 800098c:	42a3      	cmp	r3, r4
 800098e:	d908      	bls.n	80009a2 <_free_r+0x42>
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	1821      	adds	r1, r4, r0
 8000994:	428b      	cmp	r3, r1
 8000996:	bf01      	itttt	eq
 8000998:	6819      	ldreq	r1, [r3, #0]
 800099a:	685b      	ldreq	r3, [r3, #4]
 800099c:	1809      	addeq	r1, r1, r0
 800099e:	6021      	streq	r1, [r4, #0]
 80009a0:	e7ed      	b.n	800097e <_free_r+0x1e>
 80009a2:	461a      	mov	r2, r3
 80009a4:	685b      	ldr	r3, [r3, #4]
 80009a6:	b10b      	cbz	r3, 80009ac <_free_r+0x4c>
 80009a8:	42a3      	cmp	r3, r4
 80009aa:	d9fa      	bls.n	80009a2 <_free_r+0x42>
 80009ac:	6811      	ldr	r1, [r2, #0]
 80009ae:	1850      	adds	r0, r2, r1
 80009b0:	42a0      	cmp	r0, r4
 80009b2:	d10b      	bne.n	80009cc <_free_r+0x6c>
 80009b4:	6820      	ldr	r0, [r4, #0]
 80009b6:	4401      	add	r1, r0
 80009b8:	1850      	adds	r0, r2, r1
 80009ba:	4283      	cmp	r3, r0
 80009bc:	6011      	str	r1, [r2, #0]
 80009be:	d1e0      	bne.n	8000982 <_free_r+0x22>
 80009c0:	6818      	ldr	r0, [r3, #0]
 80009c2:	685b      	ldr	r3, [r3, #4]
 80009c4:	6053      	str	r3, [r2, #4]
 80009c6:	4401      	add	r1, r0
 80009c8:	6011      	str	r1, [r2, #0]
 80009ca:	e7da      	b.n	8000982 <_free_r+0x22>
 80009cc:	d902      	bls.n	80009d4 <_free_r+0x74>
 80009ce:	230c      	movs	r3, #12
 80009d0:	602b      	str	r3, [r5, #0]
 80009d2:	e7d6      	b.n	8000982 <_free_r+0x22>
 80009d4:	6820      	ldr	r0, [r4, #0]
 80009d6:	1821      	adds	r1, r4, r0
 80009d8:	428b      	cmp	r3, r1
 80009da:	bf04      	itt	eq
 80009dc:	6819      	ldreq	r1, [r3, #0]
 80009de:	685b      	ldreq	r3, [r3, #4]
 80009e0:	6063      	str	r3, [r4, #4]
 80009e2:	bf04      	itt	eq
 80009e4:	1809      	addeq	r1, r1, r0
 80009e6:	6021      	streq	r1, [r4, #0]
 80009e8:	6054      	str	r4, [r2, #4]
 80009ea:	e7ca      	b.n	8000982 <_free_r+0x22>
 80009ec:	bd38      	pop	{r3, r4, r5, pc}
 80009ee:	bf00      	nop
 80009f0:	20000088 	.word	0x20000088

080009f4 <sbrk_aligned>:
 80009f4:	b570      	push	{r4, r5, r6, lr}
 80009f6:	4e0e      	ldr	r6, [pc, #56]	; (8000a30 <sbrk_aligned+0x3c>)
 80009f8:	460c      	mov	r4, r1
 80009fa:	6831      	ldr	r1, [r6, #0]
 80009fc:	4605      	mov	r5, r0
 80009fe:	b911      	cbnz	r1, 8000a06 <sbrk_aligned+0x12>
 8000a00:	f000 f91a 	bl	8000c38 <_sbrk_r>
 8000a04:	6030      	str	r0, [r6, #0]
 8000a06:	4621      	mov	r1, r4
 8000a08:	4628      	mov	r0, r5
 8000a0a:	f000 f915 	bl	8000c38 <_sbrk_r>
 8000a0e:	1c43      	adds	r3, r0, #1
 8000a10:	d00a      	beq.n	8000a28 <sbrk_aligned+0x34>
 8000a12:	1cc4      	adds	r4, r0, #3
 8000a14:	f024 0403 	bic.w	r4, r4, #3
 8000a18:	42a0      	cmp	r0, r4
 8000a1a:	d007      	beq.n	8000a2c <sbrk_aligned+0x38>
 8000a1c:	1a21      	subs	r1, r4, r0
 8000a1e:	4628      	mov	r0, r5
 8000a20:	f000 f90a 	bl	8000c38 <_sbrk_r>
 8000a24:	3001      	adds	r0, #1
 8000a26:	d101      	bne.n	8000a2c <sbrk_aligned+0x38>
 8000a28:	f04f 34ff 	mov.w	r4, #4294967295
 8000a2c:	4620      	mov	r0, r4
 8000a2e:	bd70      	pop	{r4, r5, r6, pc}
 8000a30:	2000008c 	.word	0x2000008c

08000a34 <_malloc_r>:
 8000a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a38:	1ccd      	adds	r5, r1, #3
 8000a3a:	f025 0503 	bic.w	r5, r5, #3
 8000a3e:	3508      	adds	r5, #8
 8000a40:	2d0c      	cmp	r5, #12
 8000a42:	bf38      	it	cc
 8000a44:	250c      	movcc	r5, #12
 8000a46:	2d00      	cmp	r5, #0
 8000a48:	4607      	mov	r7, r0
 8000a4a:	db01      	blt.n	8000a50 <_malloc_r+0x1c>
 8000a4c:	42a9      	cmp	r1, r5
 8000a4e:	d905      	bls.n	8000a5c <_malloc_r+0x28>
 8000a50:	230c      	movs	r3, #12
 8000a52:	603b      	str	r3, [r7, #0]
 8000a54:	2600      	movs	r6, #0
 8000a56:	4630      	mov	r0, r6
 8000a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a5c:	4e2e      	ldr	r6, [pc, #184]	; (8000b18 <_malloc_r+0xe4>)
 8000a5e:	f000 fa99 	bl	8000f94 <__malloc_lock>
 8000a62:	6833      	ldr	r3, [r6, #0]
 8000a64:	461c      	mov	r4, r3
 8000a66:	bb34      	cbnz	r4, 8000ab6 <_malloc_r+0x82>
 8000a68:	4629      	mov	r1, r5
 8000a6a:	4638      	mov	r0, r7
 8000a6c:	f7ff ffc2 	bl	80009f4 <sbrk_aligned>
 8000a70:	1c43      	adds	r3, r0, #1
 8000a72:	4604      	mov	r4, r0
 8000a74:	d14d      	bne.n	8000b12 <_malloc_r+0xde>
 8000a76:	6834      	ldr	r4, [r6, #0]
 8000a78:	4626      	mov	r6, r4
 8000a7a:	2e00      	cmp	r6, #0
 8000a7c:	d140      	bne.n	8000b00 <_malloc_r+0xcc>
 8000a7e:	6823      	ldr	r3, [r4, #0]
 8000a80:	4631      	mov	r1, r6
 8000a82:	4638      	mov	r0, r7
 8000a84:	eb04 0803 	add.w	r8, r4, r3
 8000a88:	f000 f8d6 	bl	8000c38 <_sbrk_r>
 8000a8c:	4580      	cmp	r8, r0
 8000a8e:	d13a      	bne.n	8000b06 <_malloc_r+0xd2>
 8000a90:	6821      	ldr	r1, [r4, #0]
 8000a92:	3503      	adds	r5, #3
 8000a94:	1a6d      	subs	r5, r5, r1
 8000a96:	f025 0503 	bic.w	r5, r5, #3
 8000a9a:	3508      	adds	r5, #8
 8000a9c:	2d0c      	cmp	r5, #12
 8000a9e:	bf38      	it	cc
 8000aa0:	250c      	movcc	r5, #12
 8000aa2:	4629      	mov	r1, r5
 8000aa4:	4638      	mov	r0, r7
 8000aa6:	f7ff ffa5 	bl	80009f4 <sbrk_aligned>
 8000aaa:	3001      	adds	r0, #1
 8000aac:	d02b      	beq.n	8000b06 <_malloc_r+0xd2>
 8000aae:	6823      	ldr	r3, [r4, #0]
 8000ab0:	442b      	add	r3, r5
 8000ab2:	6023      	str	r3, [r4, #0]
 8000ab4:	e00e      	b.n	8000ad4 <_malloc_r+0xa0>
 8000ab6:	6822      	ldr	r2, [r4, #0]
 8000ab8:	1b52      	subs	r2, r2, r5
 8000aba:	d41e      	bmi.n	8000afa <_malloc_r+0xc6>
 8000abc:	2a0b      	cmp	r2, #11
 8000abe:	d916      	bls.n	8000aee <_malloc_r+0xba>
 8000ac0:	1961      	adds	r1, r4, r5
 8000ac2:	42a3      	cmp	r3, r4
 8000ac4:	6025      	str	r5, [r4, #0]
 8000ac6:	bf18      	it	ne
 8000ac8:	6059      	strne	r1, [r3, #4]
 8000aca:	6863      	ldr	r3, [r4, #4]
 8000acc:	bf08      	it	eq
 8000ace:	6031      	streq	r1, [r6, #0]
 8000ad0:	5162      	str	r2, [r4, r5]
 8000ad2:	604b      	str	r3, [r1, #4]
 8000ad4:	4638      	mov	r0, r7
 8000ad6:	f104 060b 	add.w	r6, r4, #11
 8000ada:	f000 fa61 	bl	8000fa0 <__malloc_unlock>
 8000ade:	f026 0607 	bic.w	r6, r6, #7
 8000ae2:	1d23      	adds	r3, r4, #4
 8000ae4:	1af2      	subs	r2, r6, r3
 8000ae6:	d0b6      	beq.n	8000a56 <_malloc_r+0x22>
 8000ae8:	1b9b      	subs	r3, r3, r6
 8000aea:	50a3      	str	r3, [r4, r2]
 8000aec:	e7b3      	b.n	8000a56 <_malloc_r+0x22>
 8000aee:	6862      	ldr	r2, [r4, #4]
 8000af0:	42a3      	cmp	r3, r4
 8000af2:	bf0c      	ite	eq
 8000af4:	6032      	streq	r2, [r6, #0]
 8000af6:	605a      	strne	r2, [r3, #4]
 8000af8:	e7ec      	b.n	8000ad4 <_malloc_r+0xa0>
 8000afa:	4623      	mov	r3, r4
 8000afc:	6864      	ldr	r4, [r4, #4]
 8000afe:	e7b2      	b.n	8000a66 <_malloc_r+0x32>
 8000b00:	4634      	mov	r4, r6
 8000b02:	6876      	ldr	r6, [r6, #4]
 8000b04:	e7b9      	b.n	8000a7a <_malloc_r+0x46>
 8000b06:	230c      	movs	r3, #12
 8000b08:	603b      	str	r3, [r7, #0]
 8000b0a:	4638      	mov	r0, r7
 8000b0c:	f000 fa48 	bl	8000fa0 <__malloc_unlock>
 8000b10:	e7a1      	b.n	8000a56 <_malloc_r+0x22>
 8000b12:	6025      	str	r5, [r4, #0]
 8000b14:	e7de      	b.n	8000ad4 <_malloc_r+0xa0>
 8000b16:	bf00      	nop
 8000b18:	20000088 	.word	0x20000088

08000b1c <iprintf>:
 8000b1c:	b40f      	push	{r0, r1, r2, r3}
 8000b1e:	4b0a      	ldr	r3, [pc, #40]	; (8000b48 <iprintf+0x2c>)
 8000b20:	b513      	push	{r0, r1, r4, lr}
 8000b22:	681c      	ldr	r4, [r3, #0]
 8000b24:	b124      	cbz	r4, 8000b30 <iprintf+0x14>
 8000b26:	69a3      	ldr	r3, [r4, #24]
 8000b28:	b913      	cbnz	r3, 8000b30 <iprintf+0x14>
 8000b2a:	4620      	mov	r0, r4
 8000b2c:	f7ff fe4a 	bl	80007c4 <__sinit>
 8000b30:	ab05      	add	r3, sp, #20
 8000b32:	9a04      	ldr	r2, [sp, #16]
 8000b34:	68a1      	ldr	r1, [r4, #8]
 8000b36:	9301      	str	r3, [sp, #4]
 8000b38:	4620      	mov	r0, r4
 8000b3a:	f000 fa5f 	bl	8000ffc <_vfiprintf_r>
 8000b3e:	b002      	add	sp, #8
 8000b40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b44:	b004      	add	sp, #16
 8000b46:	4770      	bx	lr
 8000b48:	20000000 	.word	0x20000000

08000b4c <_puts_r>:
 8000b4c:	b570      	push	{r4, r5, r6, lr}
 8000b4e:	460e      	mov	r6, r1
 8000b50:	4605      	mov	r5, r0
 8000b52:	b118      	cbz	r0, 8000b5c <_puts_r+0x10>
 8000b54:	6983      	ldr	r3, [r0, #24]
 8000b56:	b90b      	cbnz	r3, 8000b5c <_puts_r+0x10>
 8000b58:	f7ff fe34 	bl	80007c4 <__sinit>
 8000b5c:	69ab      	ldr	r3, [r5, #24]
 8000b5e:	68ac      	ldr	r4, [r5, #8]
 8000b60:	b913      	cbnz	r3, 8000b68 <_puts_r+0x1c>
 8000b62:	4628      	mov	r0, r5
 8000b64:	f7ff fe2e 	bl	80007c4 <__sinit>
 8000b68:	4b2c      	ldr	r3, [pc, #176]	; (8000c1c <_puts_r+0xd0>)
 8000b6a:	429c      	cmp	r4, r3
 8000b6c:	d120      	bne.n	8000bb0 <_puts_r+0x64>
 8000b6e:	686c      	ldr	r4, [r5, #4]
 8000b70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b72:	07db      	lsls	r3, r3, #31
 8000b74:	d405      	bmi.n	8000b82 <_puts_r+0x36>
 8000b76:	89a3      	ldrh	r3, [r4, #12]
 8000b78:	0598      	lsls	r0, r3, #22
 8000b7a:	d402      	bmi.n	8000b82 <_puts_r+0x36>
 8000b7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b7e:	f7ff fee4 	bl	800094a <__retarget_lock_acquire_recursive>
 8000b82:	89a3      	ldrh	r3, [r4, #12]
 8000b84:	0719      	lsls	r1, r3, #28
 8000b86:	d51d      	bpl.n	8000bc4 <_puts_r+0x78>
 8000b88:	6923      	ldr	r3, [r4, #16]
 8000b8a:	b1db      	cbz	r3, 8000bc4 <_puts_r+0x78>
 8000b8c:	3e01      	subs	r6, #1
 8000b8e:	68a3      	ldr	r3, [r4, #8]
 8000b90:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000b94:	3b01      	subs	r3, #1
 8000b96:	60a3      	str	r3, [r4, #8]
 8000b98:	bb39      	cbnz	r1, 8000bea <_puts_r+0x9e>
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	da38      	bge.n	8000c10 <_puts_r+0xc4>
 8000b9e:	4622      	mov	r2, r4
 8000ba0:	210a      	movs	r1, #10
 8000ba2:	4628      	mov	r0, r5
 8000ba4:	f000 f89c 	bl	8000ce0 <__swbuf_r>
 8000ba8:	3001      	adds	r0, #1
 8000baa:	d011      	beq.n	8000bd0 <_puts_r+0x84>
 8000bac:	250a      	movs	r5, #10
 8000bae:	e011      	b.n	8000bd4 <_puts_r+0x88>
 8000bb0:	4b1b      	ldr	r3, [pc, #108]	; (8000c20 <_puts_r+0xd4>)
 8000bb2:	429c      	cmp	r4, r3
 8000bb4:	d101      	bne.n	8000bba <_puts_r+0x6e>
 8000bb6:	68ac      	ldr	r4, [r5, #8]
 8000bb8:	e7da      	b.n	8000b70 <_puts_r+0x24>
 8000bba:	4b1a      	ldr	r3, [pc, #104]	; (8000c24 <_puts_r+0xd8>)
 8000bbc:	429c      	cmp	r4, r3
 8000bbe:	bf08      	it	eq
 8000bc0:	68ec      	ldreq	r4, [r5, #12]
 8000bc2:	e7d5      	b.n	8000b70 <_puts_r+0x24>
 8000bc4:	4621      	mov	r1, r4
 8000bc6:	4628      	mov	r0, r5
 8000bc8:	f000 f8ee 	bl	8000da8 <__swsetup_r>
 8000bcc:	2800      	cmp	r0, #0
 8000bce:	d0dd      	beq.n	8000b8c <_puts_r+0x40>
 8000bd0:	f04f 35ff 	mov.w	r5, #4294967295
 8000bd4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bd6:	07da      	lsls	r2, r3, #31
 8000bd8:	d405      	bmi.n	8000be6 <_puts_r+0x9a>
 8000bda:	89a3      	ldrh	r3, [r4, #12]
 8000bdc:	059b      	lsls	r3, r3, #22
 8000bde:	d402      	bmi.n	8000be6 <_puts_r+0x9a>
 8000be0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000be2:	f7ff feb3 	bl	800094c <__retarget_lock_release_recursive>
 8000be6:	4628      	mov	r0, r5
 8000be8:	bd70      	pop	{r4, r5, r6, pc}
 8000bea:	2b00      	cmp	r3, #0
 8000bec:	da04      	bge.n	8000bf8 <_puts_r+0xac>
 8000bee:	69a2      	ldr	r2, [r4, #24]
 8000bf0:	429a      	cmp	r2, r3
 8000bf2:	dc06      	bgt.n	8000c02 <_puts_r+0xb6>
 8000bf4:	290a      	cmp	r1, #10
 8000bf6:	d004      	beq.n	8000c02 <_puts_r+0xb6>
 8000bf8:	6823      	ldr	r3, [r4, #0]
 8000bfa:	1c5a      	adds	r2, r3, #1
 8000bfc:	6022      	str	r2, [r4, #0]
 8000bfe:	7019      	strb	r1, [r3, #0]
 8000c00:	e7c5      	b.n	8000b8e <_puts_r+0x42>
 8000c02:	4622      	mov	r2, r4
 8000c04:	4628      	mov	r0, r5
 8000c06:	f000 f86b 	bl	8000ce0 <__swbuf_r>
 8000c0a:	3001      	adds	r0, #1
 8000c0c:	d1bf      	bne.n	8000b8e <_puts_r+0x42>
 8000c0e:	e7df      	b.n	8000bd0 <_puts_r+0x84>
 8000c10:	6823      	ldr	r3, [r4, #0]
 8000c12:	250a      	movs	r5, #10
 8000c14:	1c5a      	adds	r2, r3, #1
 8000c16:	6022      	str	r2, [r4, #0]
 8000c18:	701d      	strb	r5, [r3, #0]
 8000c1a:	e7db      	b.n	8000bd4 <_puts_r+0x88>
 8000c1c:	080016a8 	.word	0x080016a8
 8000c20:	080016c8 	.word	0x080016c8
 8000c24:	08001688 	.word	0x08001688

08000c28 <puts>:
 8000c28:	4b02      	ldr	r3, [pc, #8]	; (8000c34 <puts+0xc>)
 8000c2a:	4601      	mov	r1, r0
 8000c2c:	6818      	ldr	r0, [r3, #0]
 8000c2e:	f7ff bf8d 	b.w	8000b4c <_puts_r>
 8000c32:	bf00      	nop
 8000c34:	20000000 	.word	0x20000000

08000c38 <_sbrk_r>:
 8000c38:	b538      	push	{r3, r4, r5, lr}
 8000c3a:	4d06      	ldr	r5, [pc, #24]	; (8000c54 <_sbrk_r+0x1c>)
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	4604      	mov	r4, r0
 8000c40:	4608      	mov	r0, r1
 8000c42:	602b      	str	r3, [r5, #0]
 8000c44:	f7ff fc30 	bl	80004a8 <_sbrk>
 8000c48:	1c43      	adds	r3, r0, #1
 8000c4a:	d102      	bne.n	8000c52 <_sbrk_r+0x1a>
 8000c4c:	682b      	ldr	r3, [r5, #0]
 8000c4e:	b103      	cbz	r3, 8000c52 <_sbrk_r+0x1a>
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	bd38      	pop	{r3, r4, r5, pc}
 8000c54:	20000090 	.word	0x20000090

08000c58 <__sread>:
 8000c58:	b510      	push	{r4, lr}
 8000c5a:	460c      	mov	r4, r1
 8000c5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c60:	f000 fc90 	bl	8001584 <_read_r>
 8000c64:	2800      	cmp	r0, #0
 8000c66:	bfab      	itete	ge
 8000c68:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c6a:	89a3      	ldrhlt	r3, [r4, #12]
 8000c6c:	181b      	addge	r3, r3, r0
 8000c6e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c72:	bfac      	ite	ge
 8000c74:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c76:	81a3      	strhlt	r3, [r4, #12]
 8000c78:	bd10      	pop	{r4, pc}

08000c7a <__swrite>:
 8000c7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c7e:	461f      	mov	r7, r3
 8000c80:	898b      	ldrh	r3, [r1, #12]
 8000c82:	05db      	lsls	r3, r3, #23
 8000c84:	4605      	mov	r5, r0
 8000c86:	460c      	mov	r4, r1
 8000c88:	4616      	mov	r6, r2
 8000c8a:	d505      	bpl.n	8000c98 <__swrite+0x1e>
 8000c8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c90:	2302      	movs	r3, #2
 8000c92:	2200      	movs	r2, #0
 8000c94:	f000 f906 	bl	8000ea4 <_lseek_r>
 8000c98:	89a3      	ldrh	r3, [r4, #12]
 8000c9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ca2:	81a3      	strh	r3, [r4, #12]
 8000ca4:	4632      	mov	r2, r6
 8000ca6:	463b      	mov	r3, r7
 8000ca8:	4628      	mov	r0, r5
 8000caa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cae:	f000 b869 	b.w	8000d84 <_write_r>

08000cb2 <__sseek>:
 8000cb2:	b510      	push	{r4, lr}
 8000cb4:	460c      	mov	r4, r1
 8000cb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cba:	f000 f8f3 	bl	8000ea4 <_lseek_r>
 8000cbe:	1c43      	adds	r3, r0, #1
 8000cc0:	89a3      	ldrh	r3, [r4, #12]
 8000cc2:	bf15      	itete	ne
 8000cc4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cc6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cce:	81a3      	strheq	r3, [r4, #12]
 8000cd0:	bf18      	it	ne
 8000cd2:	81a3      	strhne	r3, [r4, #12]
 8000cd4:	bd10      	pop	{r4, pc}

08000cd6 <__sclose>:
 8000cd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cda:	f000 b8d3 	b.w	8000e84 <_close_r>
	...

08000ce0 <__swbuf_r>:
 8000ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ce2:	460e      	mov	r6, r1
 8000ce4:	4614      	mov	r4, r2
 8000ce6:	4605      	mov	r5, r0
 8000ce8:	b118      	cbz	r0, 8000cf2 <__swbuf_r+0x12>
 8000cea:	6983      	ldr	r3, [r0, #24]
 8000cec:	b90b      	cbnz	r3, 8000cf2 <__swbuf_r+0x12>
 8000cee:	f7ff fd69 	bl	80007c4 <__sinit>
 8000cf2:	4b21      	ldr	r3, [pc, #132]	; (8000d78 <__swbuf_r+0x98>)
 8000cf4:	429c      	cmp	r4, r3
 8000cf6:	d12b      	bne.n	8000d50 <__swbuf_r+0x70>
 8000cf8:	686c      	ldr	r4, [r5, #4]
 8000cfa:	69a3      	ldr	r3, [r4, #24]
 8000cfc:	60a3      	str	r3, [r4, #8]
 8000cfe:	89a3      	ldrh	r3, [r4, #12]
 8000d00:	071a      	lsls	r2, r3, #28
 8000d02:	d52f      	bpl.n	8000d64 <__swbuf_r+0x84>
 8000d04:	6923      	ldr	r3, [r4, #16]
 8000d06:	b36b      	cbz	r3, 8000d64 <__swbuf_r+0x84>
 8000d08:	6923      	ldr	r3, [r4, #16]
 8000d0a:	6820      	ldr	r0, [r4, #0]
 8000d0c:	1ac0      	subs	r0, r0, r3
 8000d0e:	6963      	ldr	r3, [r4, #20]
 8000d10:	b2f6      	uxtb	r6, r6
 8000d12:	4283      	cmp	r3, r0
 8000d14:	4637      	mov	r7, r6
 8000d16:	dc04      	bgt.n	8000d22 <__swbuf_r+0x42>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	4628      	mov	r0, r5
 8000d1c:	f7ff fcac 	bl	8000678 <_fflush_r>
 8000d20:	bb30      	cbnz	r0, 8000d70 <__swbuf_r+0x90>
 8000d22:	68a3      	ldr	r3, [r4, #8]
 8000d24:	3b01      	subs	r3, #1
 8000d26:	60a3      	str	r3, [r4, #8]
 8000d28:	6823      	ldr	r3, [r4, #0]
 8000d2a:	1c5a      	adds	r2, r3, #1
 8000d2c:	6022      	str	r2, [r4, #0]
 8000d2e:	701e      	strb	r6, [r3, #0]
 8000d30:	6963      	ldr	r3, [r4, #20]
 8000d32:	3001      	adds	r0, #1
 8000d34:	4283      	cmp	r3, r0
 8000d36:	d004      	beq.n	8000d42 <__swbuf_r+0x62>
 8000d38:	89a3      	ldrh	r3, [r4, #12]
 8000d3a:	07db      	lsls	r3, r3, #31
 8000d3c:	d506      	bpl.n	8000d4c <__swbuf_r+0x6c>
 8000d3e:	2e0a      	cmp	r6, #10
 8000d40:	d104      	bne.n	8000d4c <__swbuf_r+0x6c>
 8000d42:	4621      	mov	r1, r4
 8000d44:	4628      	mov	r0, r5
 8000d46:	f7ff fc97 	bl	8000678 <_fflush_r>
 8000d4a:	b988      	cbnz	r0, 8000d70 <__swbuf_r+0x90>
 8000d4c:	4638      	mov	r0, r7
 8000d4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d50:	4b0a      	ldr	r3, [pc, #40]	; (8000d7c <__swbuf_r+0x9c>)
 8000d52:	429c      	cmp	r4, r3
 8000d54:	d101      	bne.n	8000d5a <__swbuf_r+0x7a>
 8000d56:	68ac      	ldr	r4, [r5, #8]
 8000d58:	e7cf      	b.n	8000cfa <__swbuf_r+0x1a>
 8000d5a:	4b09      	ldr	r3, [pc, #36]	; (8000d80 <__swbuf_r+0xa0>)
 8000d5c:	429c      	cmp	r4, r3
 8000d5e:	bf08      	it	eq
 8000d60:	68ec      	ldreq	r4, [r5, #12]
 8000d62:	e7ca      	b.n	8000cfa <__swbuf_r+0x1a>
 8000d64:	4621      	mov	r1, r4
 8000d66:	4628      	mov	r0, r5
 8000d68:	f000 f81e 	bl	8000da8 <__swsetup_r>
 8000d6c:	2800      	cmp	r0, #0
 8000d6e:	d0cb      	beq.n	8000d08 <__swbuf_r+0x28>
 8000d70:	f04f 37ff 	mov.w	r7, #4294967295
 8000d74:	e7ea      	b.n	8000d4c <__swbuf_r+0x6c>
 8000d76:	bf00      	nop
 8000d78:	080016a8 	.word	0x080016a8
 8000d7c:	080016c8 	.word	0x080016c8
 8000d80:	08001688 	.word	0x08001688

08000d84 <_write_r>:
 8000d84:	b538      	push	{r3, r4, r5, lr}
 8000d86:	4d07      	ldr	r5, [pc, #28]	; (8000da4 <_write_r+0x20>)
 8000d88:	4604      	mov	r4, r0
 8000d8a:	4608      	mov	r0, r1
 8000d8c:	4611      	mov	r1, r2
 8000d8e:	2200      	movs	r2, #0
 8000d90:	602a      	str	r2, [r5, #0]
 8000d92:	461a      	mov	r2, r3
 8000d94:	f7ff fb3b 	bl	800040e <_write>
 8000d98:	1c43      	adds	r3, r0, #1
 8000d9a:	d102      	bne.n	8000da2 <_write_r+0x1e>
 8000d9c:	682b      	ldr	r3, [r5, #0]
 8000d9e:	b103      	cbz	r3, 8000da2 <_write_r+0x1e>
 8000da0:	6023      	str	r3, [r4, #0]
 8000da2:	bd38      	pop	{r3, r4, r5, pc}
 8000da4:	20000090 	.word	0x20000090

08000da8 <__swsetup_r>:
 8000da8:	4b32      	ldr	r3, [pc, #200]	; (8000e74 <__swsetup_r+0xcc>)
 8000daa:	b570      	push	{r4, r5, r6, lr}
 8000dac:	681d      	ldr	r5, [r3, #0]
 8000dae:	4606      	mov	r6, r0
 8000db0:	460c      	mov	r4, r1
 8000db2:	b125      	cbz	r5, 8000dbe <__swsetup_r+0x16>
 8000db4:	69ab      	ldr	r3, [r5, #24]
 8000db6:	b913      	cbnz	r3, 8000dbe <__swsetup_r+0x16>
 8000db8:	4628      	mov	r0, r5
 8000dba:	f7ff fd03 	bl	80007c4 <__sinit>
 8000dbe:	4b2e      	ldr	r3, [pc, #184]	; (8000e78 <__swsetup_r+0xd0>)
 8000dc0:	429c      	cmp	r4, r3
 8000dc2:	d10f      	bne.n	8000de4 <__swsetup_r+0x3c>
 8000dc4:	686c      	ldr	r4, [r5, #4]
 8000dc6:	89a3      	ldrh	r3, [r4, #12]
 8000dc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000dcc:	0719      	lsls	r1, r3, #28
 8000dce:	d42c      	bmi.n	8000e2a <__swsetup_r+0x82>
 8000dd0:	06dd      	lsls	r5, r3, #27
 8000dd2:	d411      	bmi.n	8000df8 <__swsetup_r+0x50>
 8000dd4:	2309      	movs	r3, #9
 8000dd6:	6033      	str	r3, [r6, #0]
 8000dd8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000ddc:	81a3      	strh	r3, [r4, #12]
 8000dde:	f04f 30ff 	mov.w	r0, #4294967295
 8000de2:	e03e      	b.n	8000e62 <__swsetup_r+0xba>
 8000de4:	4b25      	ldr	r3, [pc, #148]	; (8000e7c <__swsetup_r+0xd4>)
 8000de6:	429c      	cmp	r4, r3
 8000de8:	d101      	bne.n	8000dee <__swsetup_r+0x46>
 8000dea:	68ac      	ldr	r4, [r5, #8]
 8000dec:	e7eb      	b.n	8000dc6 <__swsetup_r+0x1e>
 8000dee:	4b24      	ldr	r3, [pc, #144]	; (8000e80 <__swsetup_r+0xd8>)
 8000df0:	429c      	cmp	r4, r3
 8000df2:	bf08      	it	eq
 8000df4:	68ec      	ldreq	r4, [r5, #12]
 8000df6:	e7e6      	b.n	8000dc6 <__swsetup_r+0x1e>
 8000df8:	0758      	lsls	r0, r3, #29
 8000dfa:	d512      	bpl.n	8000e22 <__swsetup_r+0x7a>
 8000dfc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dfe:	b141      	cbz	r1, 8000e12 <__swsetup_r+0x6a>
 8000e00:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e04:	4299      	cmp	r1, r3
 8000e06:	d002      	beq.n	8000e0e <__swsetup_r+0x66>
 8000e08:	4630      	mov	r0, r6
 8000e0a:	f7ff fda9 	bl	8000960 <_free_r>
 8000e0e:	2300      	movs	r3, #0
 8000e10:	6363      	str	r3, [r4, #52]	; 0x34
 8000e12:	89a3      	ldrh	r3, [r4, #12]
 8000e14:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000e18:	81a3      	strh	r3, [r4, #12]
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	6063      	str	r3, [r4, #4]
 8000e1e:	6923      	ldr	r3, [r4, #16]
 8000e20:	6023      	str	r3, [r4, #0]
 8000e22:	89a3      	ldrh	r3, [r4, #12]
 8000e24:	f043 0308 	orr.w	r3, r3, #8
 8000e28:	81a3      	strh	r3, [r4, #12]
 8000e2a:	6923      	ldr	r3, [r4, #16]
 8000e2c:	b94b      	cbnz	r3, 8000e42 <__swsetup_r+0x9a>
 8000e2e:	89a3      	ldrh	r3, [r4, #12]
 8000e30:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000e34:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000e38:	d003      	beq.n	8000e42 <__swsetup_r+0x9a>
 8000e3a:	4621      	mov	r1, r4
 8000e3c:	4630      	mov	r0, r6
 8000e3e:	f000 f869 	bl	8000f14 <__smakebuf_r>
 8000e42:	89a0      	ldrh	r0, [r4, #12]
 8000e44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e48:	f010 0301 	ands.w	r3, r0, #1
 8000e4c:	d00a      	beq.n	8000e64 <__swsetup_r+0xbc>
 8000e4e:	2300      	movs	r3, #0
 8000e50:	60a3      	str	r3, [r4, #8]
 8000e52:	6963      	ldr	r3, [r4, #20]
 8000e54:	425b      	negs	r3, r3
 8000e56:	61a3      	str	r3, [r4, #24]
 8000e58:	6923      	ldr	r3, [r4, #16]
 8000e5a:	b943      	cbnz	r3, 8000e6e <__swsetup_r+0xc6>
 8000e5c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e60:	d1ba      	bne.n	8000dd8 <__swsetup_r+0x30>
 8000e62:	bd70      	pop	{r4, r5, r6, pc}
 8000e64:	0781      	lsls	r1, r0, #30
 8000e66:	bf58      	it	pl
 8000e68:	6963      	ldrpl	r3, [r4, #20]
 8000e6a:	60a3      	str	r3, [r4, #8]
 8000e6c:	e7f4      	b.n	8000e58 <__swsetup_r+0xb0>
 8000e6e:	2000      	movs	r0, #0
 8000e70:	e7f7      	b.n	8000e62 <__swsetup_r+0xba>
 8000e72:	bf00      	nop
 8000e74:	20000000 	.word	0x20000000
 8000e78:	080016a8 	.word	0x080016a8
 8000e7c:	080016c8 	.word	0x080016c8
 8000e80:	08001688 	.word	0x08001688

08000e84 <_close_r>:
 8000e84:	b538      	push	{r3, r4, r5, lr}
 8000e86:	4d06      	ldr	r5, [pc, #24]	; (8000ea0 <_close_r+0x1c>)
 8000e88:	2300      	movs	r3, #0
 8000e8a:	4604      	mov	r4, r0
 8000e8c:	4608      	mov	r0, r1
 8000e8e:	602b      	str	r3, [r5, #0]
 8000e90:	f7ff fad9 	bl	8000446 <_close>
 8000e94:	1c43      	adds	r3, r0, #1
 8000e96:	d102      	bne.n	8000e9e <_close_r+0x1a>
 8000e98:	682b      	ldr	r3, [r5, #0]
 8000e9a:	b103      	cbz	r3, 8000e9e <_close_r+0x1a>
 8000e9c:	6023      	str	r3, [r4, #0]
 8000e9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ea0:	20000090 	.word	0x20000090

08000ea4 <_lseek_r>:
 8000ea4:	b538      	push	{r3, r4, r5, lr}
 8000ea6:	4d07      	ldr	r5, [pc, #28]	; (8000ec4 <_lseek_r+0x20>)
 8000ea8:	4604      	mov	r4, r0
 8000eaa:	4608      	mov	r0, r1
 8000eac:	4611      	mov	r1, r2
 8000eae:	2200      	movs	r2, #0
 8000eb0:	602a      	str	r2, [r5, #0]
 8000eb2:	461a      	mov	r2, r3
 8000eb4:	f7ff faeb 	bl	800048e <_lseek>
 8000eb8:	1c43      	adds	r3, r0, #1
 8000eba:	d102      	bne.n	8000ec2 <_lseek_r+0x1e>
 8000ebc:	682b      	ldr	r3, [r5, #0]
 8000ebe:	b103      	cbz	r3, 8000ec2 <_lseek_r+0x1e>
 8000ec0:	6023      	str	r3, [r4, #0]
 8000ec2:	bd38      	pop	{r3, r4, r5, pc}
 8000ec4:	20000090 	.word	0x20000090

08000ec8 <__swhatbuf_r>:
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460e      	mov	r6, r1
 8000ecc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ed0:	2900      	cmp	r1, #0
 8000ed2:	b096      	sub	sp, #88	; 0x58
 8000ed4:	4614      	mov	r4, r2
 8000ed6:	461d      	mov	r5, r3
 8000ed8:	da08      	bge.n	8000eec <__swhatbuf_r+0x24>
 8000eda:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000ede:	2200      	movs	r2, #0
 8000ee0:	602a      	str	r2, [r5, #0]
 8000ee2:	061a      	lsls	r2, r3, #24
 8000ee4:	d410      	bmi.n	8000f08 <__swhatbuf_r+0x40>
 8000ee6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000eea:	e00e      	b.n	8000f0a <__swhatbuf_r+0x42>
 8000eec:	466a      	mov	r2, sp
 8000eee:	f000 fb5b 	bl	80015a8 <_fstat_r>
 8000ef2:	2800      	cmp	r0, #0
 8000ef4:	dbf1      	blt.n	8000eda <__swhatbuf_r+0x12>
 8000ef6:	9a01      	ldr	r2, [sp, #4]
 8000ef8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000efc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000f00:	425a      	negs	r2, r3
 8000f02:	415a      	adcs	r2, r3
 8000f04:	602a      	str	r2, [r5, #0]
 8000f06:	e7ee      	b.n	8000ee6 <__swhatbuf_r+0x1e>
 8000f08:	2340      	movs	r3, #64	; 0x40
 8000f0a:	2000      	movs	r0, #0
 8000f0c:	6023      	str	r3, [r4, #0]
 8000f0e:	b016      	add	sp, #88	; 0x58
 8000f10:	bd70      	pop	{r4, r5, r6, pc}
	...

08000f14 <__smakebuf_r>:
 8000f14:	898b      	ldrh	r3, [r1, #12]
 8000f16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000f18:	079d      	lsls	r5, r3, #30
 8000f1a:	4606      	mov	r6, r0
 8000f1c:	460c      	mov	r4, r1
 8000f1e:	d507      	bpl.n	8000f30 <__smakebuf_r+0x1c>
 8000f20:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000f24:	6023      	str	r3, [r4, #0]
 8000f26:	6123      	str	r3, [r4, #16]
 8000f28:	2301      	movs	r3, #1
 8000f2a:	6163      	str	r3, [r4, #20]
 8000f2c:	b002      	add	sp, #8
 8000f2e:	bd70      	pop	{r4, r5, r6, pc}
 8000f30:	ab01      	add	r3, sp, #4
 8000f32:	466a      	mov	r2, sp
 8000f34:	f7ff ffc8 	bl	8000ec8 <__swhatbuf_r>
 8000f38:	9900      	ldr	r1, [sp, #0]
 8000f3a:	4605      	mov	r5, r0
 8000f3c:	4630      	mov	r0, r6
 8000f3e:	f7ff fd79 	bl	8000a34 <_malloc_r>
 8000f42:	b948      	cbnz	r0, 8000f58 <__smakebuf_r+0x44>
 8000f44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f48:	059a      	lsls	r2, r3, #22
 8000f4a:	d4ef      	bmi.n	8000f2c <__smakebuf_r+0x18>
 8000f4c:	f023 0303 	bic.w	r3, r3, #3
 8000f50:	f043 0302 	orr.w	r3, r3, #2
 8000f54:	81a3      	strh	r3, [r4, #12]
 8000f56:	e7e3      	b.n	8000f20 <__smakebuf_r+0xc>
 8000f58:	4b0d      	ldr	r3, [pc, #52]	; (8000f90 <__smakebuf_r+0x7c>)
 8000f5a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000f5c:	89a3      	ldrh	r3, [r4, #12]
 8000f5e:	6020      	str	r0, [r4, #0]
 8000f60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f64:	81a3      	strh	r3, [r4, #12]
 8000f66:	9b00      	ldr	r3, [sp, #0]
 8000f68:	6163      	str	r3, [r4, #20]
 8000f6a:	9b01      	ldr	r3, [sp, #4]
 8000f6c:	6120      	str	r0, [r4, #16]
 8000f6e:	b15b      	cbz	r3, 8000f88 <__smakebuf_r+0x74>
 8000f70:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f74:	4630      	mov	r0, r6
 8000f76:	f000 fb29 	bl	80015cc <_isatty_r>
 8000f7a:	b128      	cbz	r0, 8000f88 <__smakebuf_r+0x74>
 8000f7c:	89a3      	ldrh	r3, [r4, #12]
 8000f7e:	f023 0303 	bic.w	r3, r3, #3
 8000f82:	f043 0301 	orr.w	r3, r3, #1
 8000f86:	81a3      	strh	r3, [r4, #12]
 8000f88:	89a0      	ldrh	r0, [r4, #12]
 8000f8a:	4305      	orrs	r5, r0
 8000f8c:	81a5      	strh	r5, [r4, #12]
 8000f8e:	e7cd      	b.n	8000f2c <__smakebuf_r+0x18>
 8000f90:	0800075d 	.word	0x0800075d

08000f94 <__malloc_lock>:
 8000f94:	4801      	ldr	r0, [pc, #4]	; (8000f9c <__malloc_lock+0x8>)
 8000f96:	f7ff bcd8 	b.w	800094a <__retarget_lock_acquire_recursive>
 8000f9a:	bf00      	nop
 8000f9c:	20000084 	.word	0x20000084

08000fa0 <__malloc_unlock>:
 8000fa0:	4801      	ldr	r0, [pc, #4]	; (8000fa8 <__malloc_unlock+0x8>)
 8000fa2:	f7ff bcd3 	b.w	800094c <__retarget_lock_release_recursive>
 8000fa6:	bf00      	nop
 8000fa8:	20000084 	.word	0x20000084

08000fac <__sfputc_r>:
 8000fac:	6893      	ldr	r3, [r2, #8]
 8000fae:	3b01      	subs	r3, #1
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	b410      	push	{r4}
 8000fb4:	6093      	str	r3, [r2, #8]
 8000fb6:	da07      	bge.n	8000fc8 <__sfputc_r+0x1c>
 8000fb8:	6994      	ldr	r4, [r2, #24]
 8000fba:	42a3      	cmp	r3, r4
 8000fbc:	db01      	blt.n	8000fc2 <__sfputc_r+0x16>
 8000fbe:	290a      	cmp	r1, #10
 8000fc0:	d102      	bne.n	8000fc8 <__sfputc_r+0x1c>
 8000fc2:	bc10      	pop	{r4}
 8000fc4:	f7ff be8c 	b.w	8000ce0 <__swbuf_r>
 8000fc8:	6813      	ldr	r3, [r2, #0]
 8000fca:	1c58      	adds	r0, r3, #1
 8000fcc:	6010      	str	r0, [r2, #0]
 8000fce:	7019      	strb	r1, [r3, #0]
 8000fd0:	4608      	mov	r0, r1
 8000fd2:	bc10      	pop	{r4}
 8000fd4:	4770      	bx	lr

08000fd6 <__sfputs_r>:
 8000fd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fd8:	4606      	mov	r6, r0
 8000fda:	460f      	mov	r7, r1
 8000fdc:	4614      	mov	r4, r2
 8000fde:	18d5      	adds	r5, r2, r3
 8000fe0:	42ac      	cmp	r4, r5
 8000fe2:	d101      	bne.n	8000fe8 <__sfputs_r+0x12>
 8000fe4:	2000      	movs	r0, #0
 8000fe6:	e007      	b.n	8000ff8 <__sfputs_r+0x22>
 8000fe8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fec:	463a      	mov	r2, r7
 8000fee:	4630      	mov	r0, r6
 8000ff0:	f7ff ffdc 	bl	8000fac <__sfputc_r>
 8000ff4:	1c43      	adds	r3, r0, #1
 8000ff6:	d1f3      	bne.n	8000fe0 <__sfputs_r+0xa>
 8000ff8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ffc <_vfiprintf_r>:
 8000ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001000:	460d      	mov	r5, r1
 8001002:	b09d      	sub	sp, #116	; 0x74
 8001004:	4614      	mov	r4, r2
 8001006:	4698      	mov	r8, r3
 8001008:	4606      	mov	r6, r0
 800100a:	b118      	cbz	r0, 8001014 <_vfiprintf_r+0x18>
 800100c:	6983      	ldr	r3, [r0, #24]
 800100e:	b90b      	cbnz	r3, 8001014 <_vfiprintf_r+0x18>
 8001010:	f7ff fbd8 	bl	80007c4 <__sinit>
 8001014:	4b89      	ldr	r3, [pc, #548]	; (800123c <_vfiprintf_r+0x240>)
 8001016:	429d      	cmp	r5, r3
 8001018:	d11b      	bne.n	8001052 <_vfiprintf_r+0x56>
 800101a:	6875      	ldr	r5, [r6, #4]
 800101c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800101e:	07d9      	lsls	r1, r3, #31
 8001020:	d405      	bmi.n	800102e <_vfiprintf_r+0x32>
 8001022:	89ab      	ldrh	r3, [r5, #12]
 8001024:	059a      	lsls	r2, r3, #22
 8001026:	d402      	bmi.n	800102e <_vfiprintf_r+0x32>
 8001028:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800102a:	f7ff fc8e 	bl	800094a <__retarget_lock_acquire_recursive>
 800102e:	89ab      	ldrh	r3, [r5, #12]
 8001030:	071b      	lsls	r3, r3, #28
 8001032:	d501      	bpl.n	8001038 <_vfiprintf_r+0x3c>
 8001034:	692b      	ldr	r3, [r5, #16]
 8001036:	b9eb      	cbnz	r3, 8001074 <_vfiprintf_r+0x78>
 8001038:	4629      	mov	r1, r5
 800103a:	4630      	mov	r0, r6
 800103c:	f7ff feb4 	bl	8000da8 <__swsetup_r>
 8001040:	b1c0      	cbz	r0, 8001074 <_vfiprintf_r+0x78>
 8001042:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001044:	07dc      	lsls	r4, r3, #31
 8001046:	d50e      	bpl.n	8001066 <_vfiprintf_r+0x6a>
 8001048:	f04f 30ff 	mov.w	r0, #4294967295
 800104c:	b01d      	add	sp, #116	; 0x74
 800104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001052:	4b7b      	ldr	r3, [pc, #492]	; (8001240 <_vfiprintf_r+0x244>)
 8001054:	429d      	cmp	r5, r3
 8001056:	d101      	bne.n	800105c <_vfiprintf_r+0x60>
 8001058:	68b5      	ldr	r5, [r6, #8]
 800105a:	e7df      	b.n	800101c <_vfiprintf_r+0x20>
 800105c:	4b79      	ldr	r3, [pc, #484]	; (8001244 <_vfiprintf_r+0x248>)
 800105e:	429d      	cmp	r5, r3
 8001060:	bf08      	it	eq
 8001062:	68f5      	ldreq	r5, [r6, #12]
 8001064:	e7da      	b.n	800101c <_vfiprintf_r+0x20>
 8001066:	89ab      	ldrh	r3, [r5, #12]
 8001068:	0598      	lsls	r0, r3, #22
 800106a:	d4ed      	bmi.n	8001048 <_vfiprintf_r+0x4c>
 800106c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800106e:	f7ff fc6d 	bl	800094c <__retarget_lock_release_recursive>
 8001072:	e7e9      	b.n	8001048 <_vfiprintf_r+0x4c>
 8001074:	2300      	movs	r3, #0
 8001076:	9309      	str	r3, [sp, #36]	; 0x24
 8001078:	2320      	movs	r3, #32
 800107a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800107e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001082:	2330      	movs	r3, #48	; 0x30
 8001084:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001248 <_vfiprintf_r+0x24c>
 8001088:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800108c:	f04f 0901 	mov.w	r9, #1
 8001090:	4623      	mov	r3, r4
 8001092:	469a      	mov	sl, r3
 8001094:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001098:	b10a      	cbz	r2, 800109e <_vfiprintf_r+0xa2>
 800109a:	2a25      	cmp	r2, #37	; 0x25
 800109c:	d1f9      	bne.n	8001092 <_vfiprintf_r+0x96>
 800109e:	ebba 0b04 	subs.w	fp, sl, r4
 80010a2:	d00b      	beq.n	80010bc <_vfiprintf_r+0xc0>
 80010a4:	465b      	mov	r3, fp
 80010a6:	4622      	mov	r2, r4
 80010a8:	4629      	mov	r1, r5
 80010aa:	4630      	mov	r0, r6
 80010ac:	f7ff ff93 	bl	8000fd6 <__sfputs_r>
 80010b0:	3001      	adds	r0, #1
 80010b2:	f000 80aa 	beq.w	800120a <_vfiprintf_r+0x20e>
 80010b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80010b8:	445a      	add	r2, fp
 80010ba:	9209      	str	r2, [sp, #36]	; 0x24
 80010bc:	f89a 3000 	ldrb.w	r3, [sl]
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	f000 80a2 	beq.w	800120a <_vfiprintf_r+0x20e>
 80010c6:	2300      	movs	r3, #0
 80010c8:	f04f 32ff 	mov.w	r2, #4294967295
 80010cc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80010d0:	f10a 0a01 	add.w	sl, sl, #1
 80010d4:	9304      	str	r3, [sp, #16]
 80010d6:	9307      	str	r3, [sp, #28]
 80010d8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80010dc:	931a      	str	r3, [sp, #104]	; 0x68
 80010de:	4654      	mov	r4, sl
 80010e0:	2205      	movs	r2, #5
 80010e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80010e6:	4858      	ldr	r0, [pc, #352]	; (8001248 <_vfiprintf_r+0x24c>)
 80010e8:	f7ff f892 	bl	8000210 <memchr>
 80010ec:	9a04      	ldr	r2, [sp, #16]
 80010ee:	b9d8      	cbnz	r0, 8001128 <_vfiprintf_r+0x12c>
 80010f0:	06d1      	lsls	r1, r2, #27
 80010f2:	bf44      	itt	mi
 80010f4:	2320      	movmi	r3, #32
 80010f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80010fa:	0713      	lsls	r3, r2, #28
 80010fc:	bf44      	itt	mi
 80010fe:	232b      	movmi	r3, #43	; 0x2b
 8001100:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001104:	f89a 3000 	ldrb.w	r3, [sl]
 8001108:	2b2a      	cmp	r3, #42	; 0x2a
 800110a:	d015      	beq.n	8001138 <_vfiprintf_r+0x13c>
 800110c:	9a07      	ldr	r2, [sp, #28]
 800110e:	4654      	mov	r4, sl
 8001110:	2000      	movs	r0, #0
 8001112:	f04f 0c0a 	mov.w	ip, #10
 8001116:	4621      	mov	r1, r4
 8001118:	f811 3b01 	ldrb.w	r3, [r1], #1
 800111c:	3b30      	subs	r3, #48	; 0x30
 800111e:	2b09      	cmp	r3, #9
 8001120:	d94e      	bls.n	80011c0 <_vfiprintf_r+0x1c4>
 8001122:	b1b0      	cbz	r0, 8001152 <_vfiprintf_r+0x156>
 8001124:	9207      	str	r2, [sp, #28]
 8001126:	e014      	b.n	8001152 <_vfiprintf_r+0x156>
 8001128:	eba0 0308 	sub.w	r3, r0, r8
 800112c:	fa09 f303 	lsl.w	r3, r9, r3
 8001130:	4313      	orrs	r3, r2
 8001132:	9304      	str	r3, [sp, #16]
 8001134:	46a2      	mov	sl, r4
 8001136:	e7d2      	b.n	80010de <_vfiprintf_r+0xe2>
 8001138:	9b03      	ldr	r3, [sp, #12]
 800113a:	1d19      	adds	r1, r3, #4
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	9103      	str	r1, [sp, #12]
 8001140:	2b00      	cmp	r3, #0
 8001142:	bfbb      	ittet	lt
 8001144:	425b      	neglt	r3, r3
 8001146:	f042 0202 	orrlt.w	r2, r2, #2
 800114a:	9307      	strge	r3, [sp, #28]
 800114c:	9307      	strlt	r3, [sp, #28]
 800114e:	bfb8      	it	lt
 8001150:	9204      	strlt	r2, [sp, #16]
 8001152:	7823      	ldrb	r3, [r4, #0]
 8001154:	2b2e      	cmp	r3, #46	; 0x2e
 8001156:	d10c      	bne.n	8001172 <_vfiprintf_r+0x176>
 8001158:	7863      	ldrb	r3, [r4, #1]
 800115a:	2b2a      	cmp	r3, #42	; 0x2a
 800115c:	d135      	bne.n	80011ca <_vfiprintf_r+0x1ce>
 800115e:	9b03      	ldr	r3, [sp, #12]
 8001160:	1d1a      	adds	r2, r3, #4
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	9203      	str	r2, [sp, #12]
 8001166:	2b00      	cmp	r3, #0
 8001168:	bfb8      	it	lt
 800116a:	f04f 33ff 	movlt.w	r3, #4294967295
 800116e:	3402      	adds	r4, #2
 8001170:	9305      	str	r3, [sp, #20]
 8001172:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800124c <_vfiprintf_r+0x250>
 8001176:	7821      	ldrb	r1, [r4, #0]
 8001178:	2203      	movs	r2, #3
 800117a:	4650      	mov	r0, sl
 800117c:	f7ff f848 	bl	8000210 <memchr>
 8001180:	b140      	cbz	r0, 8001194 <_vfiprintf_r+0x198>
 8001182:	2340      	movs	r3, #64	; 0x40
 8001184:	eba0 000a 	sub.w	r0, r0, sl
 8001188:	fa03 f000 	lsl.w	r0, r3, r0
 800118c:	9b04      	ldr	r3, [sp, #16]
 800118e:	4303      	orrs	r3, r0
 8001190:	3401      	adds	r4, #1
 8001192:	9304      	str	r3, [sp, #16]
 8001194:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001198:	482d      	ldr	r0, [pc, #180]	; (8001250 <_vfiprintf_r+0x254>)
 800119a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800119e:	2206      	movs	r2, #6
 80011a0:	f7ff f836 	bl	8000210 <memchr>
 80011a4:	2800      	cmp	r0, #0
 80011a6:	d03f      	beq.n	8001228 <_vfiprintf_r+0x22c>
 80011a8:	4b2a      	ldr	r3, [pc, #168]	; (8001254 <_vfiprintf_r+0x258>)
 80011aa:	bb1b      	cbnz	r3, 80011f4 <_vfiprintf_r+0x1f8>
 80011ac:	9b03      	ldr	r3, [sp, #12]
 80011ae:	3307      	adds	r3, #7
 80011b0:	f023 0307 	bic.w	r3, r3, #7
 80011b4:	3308      	adds	r3, #8
 80011b6:	9303      	str	r3, [sp, #12]
 80011b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80011ba:	443b      	add	r3, r7
 80011bc:	9309      	str	r3, [sp, #36]	; 0x24
 80011be:	e767      	b.n	8001090 <_vfiprintf_r+0x94>
 80011c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80011c4:	460c      	mov	r4, r1
 80011c6:	2001      	movs	r0, #1
 80011c8:	e7a5      	b.n	8001116 <_vfiprintf_r+0x11a>
 80011ca:	2300      	movs	r3, #0
 80011cc:	3401      	adds	r4, #1
 80011ce:	9305      	str	r3, [sp, #20]
 80011d0:	4619      	mov	r1, r3
 80011d2:	f04f 0c0a 	mov.w	ip, #10
 80011d6:	4620      	mov	r0, r4
 80011d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80011dc:	3a30      	subs	r2, #48	; 0x30
 80011de:	2a09      	cmp	r2, #9
 80011e0:	d903      	bls.n	80011ea <_vfiprintf_r+0x1ee>
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d0c5      	beq.n	8001172 <_vfiprintf_r+0x176>
 80011e6:	9105      	str	r1, [sp, #20]
 80011e8:	e7c3      	b.n	8001172 <_vfiprintf_r+0x176>
 80011ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80011ee:	4604      	mov	r4, r0
 80011f0:	2301      	movs	r3, #1
 80011f2:	e7f0      	b.n	80011d6 <_vfiprintf_r+0x1da>
 80011f4:	ab03      	add	r3, sp, #12
 80011f6:	9300      	str	r3, [sp, #0]
 80011f8:	462a      	mov	r2, r5
 80011fa:	4b17      	ldr	r3, [pc, #92]	; (8001258 <_vfiprintf_r+0x25c>)
 80011fc:	a904      	add	r1, sp, #16
 80011fe:	4630      	mov	r0, r6
 8001200:	f3af 8000 	nop.w
 8001204:	4607      	mov	r7, r0
 8001206:	1c78      	adds	r0, r7, #1
 8001208:	d1d6      	bne.n	80011b8 <_vfiprintf_r+0x1bc>
 800120a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800120c:	07d9      	lsls	r1, r3, #31
 800120e:	d405      	bmi.n	800121c <_vfiprintf_r+0x220>
 8001210:	89ab      	ldrh	r3, [r5, #12]
 8001212:	059a      	lsls	r2, r3, #22
 8001214:	d402      	bmi.n	800121c <_vfiprintf_r+0x220>
 8001216:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001218:	f7ff fb98 	bl	800094c <__retarget_lock_release_recursive>
 800121c:	89ab      	ldrh	r3, [r5, #12]
 800121e:	065b      	lsls	r3, r3, #25
 8001220:	f53f af12 	bmi.w	8001048 <_vfiprintf_r+0x4c>
 8001224:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001226:	e711      	b.n	800104c <_vfiprintf_r+0x50>
 8001228:	ab03      	add	r3, sp, #12
 800122a:	9300      	str	r3, [sp, #0]
 800122c:	462a      	mov	r2, r5
 800122e:	4b0a      	ldr	r3, [pc, #40]	; (8001258 <_vfiprintf_r+0x25c>)
 8001230:	a904      	add	r1, sp, #16
 8001232:	4630      	mov	r0, r6
 8001234:	f000 f880 	bl	8001338 <_printf_i>
 8001238:	e7e4      	b.n	8001204 <_vfiprintf_r+0x208>
 800123a:	bf00      	nop
 800123c:	080016a8 	.word	0x080016a8
 8001240:	080016c8 	.word	0x080016c8
 8001244:	08001688 	.word	0x08001688
 8001248:	080016ec 	.word	0x080016ec
 800124c:	080016f2 	.word	0x080016f2
 8001250:	080016f6 	.word	0x080016f6
 8001254:	00000000 	.word	0x00000000
 8001258:	08000fd7 	.word	0x08000fd7

0800125c <_printf_common>:
 800125c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001260:	4616      	mov	r6, r2
 8001262:	4699      	mov	r9, r3
 8001264:	688a      	ldr	r2, [r1, #8]
 8001266:	690b      	ldr	r3, [r1, #16]
 8001268:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800126c:	4293      	cmp	r3, r2
 800126e:	bfb8      	it	lt
 8001270:	4613      	movlt	r3, r2
 8001272:	6033      	str	r3, [r6, #0]
 8001274:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001278:	4607      	mov	r7, r0
 800127a:	460c      	mov	r4, r1
 800127c:	b10a      	cbz	r2, 8001282 <_printf_common+0x26>
 800127e:	3301      	adds	r3, #1
 8001280:	6033      	str	r3, [r6, #0]
 8001282:	6823      	ldr	r3, [r4, #0]
 8001284:	0699      	lsls	r1, r3, #26
 8001286:	bf42      	ittt	mi
 8001288:	6833      	ldrmi	r3, [r6, #0]
 800128a:	3302      	addmi	r3, #2
 800128c:	6033      	strmi	r3, [r6, #0]
 800128e:	6825      	ldr	r5, [r4, #0]
 8001290:	f015 0506 	ands.w	r5, r5, #6
 8001294:	d106      	bne.n	80012a4 <_printf_common+0x48>
 8001296:	f104 0a19 	add.w	sl, r4, #25
 800129a:	68e3      	ldr	r3, [r4, #12]
 800129c:	6832      	ldr	r2, [r6, #0]
 800129e:	1a9b      	subs	r3, r3, r2
 80012a0:	42ab      	cmp	r3, r5
 80012a2:	dc26      	bgt.n	80012f2 <_printf_common+0x96>
 80012a4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80012a8:	1e13      	subs	r3, r2, #0
 80012aa:	6822      	ldr	r2, [r4, #0]
 80012ac:	bf18      	it	ne
 80012ae:	2301      	movne	r3, #1
 80012b0:	0692      	lsls	r2, r2, #26
 80012b2:	d42b      	bmi.n	800130c <_printf_common+0xb0>
 80012b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80012b8:	4649      	mov	r1, r9
 80012ba:	4638      	mov	r0, r7
 80012bc:	47c0      	blx	r8
 80012be:	3001      	adds	r0, #1
 80012c0:	d01e      	beq.n	8001300 <_printf_common+0xa4>
 80012c2:	6823      	ldr	r3, [r4, #0]
 80012c4:	68e5      	ldr	r5, [r4, #12]
 80012c6:	6832      	ldr	r2, [r6, #0]
 80012c8:	f003 0306 	and.w	r3, r3, #6
 80012cc:	2b04      	cmp	r3, #4
 80012ce:	bf08      	it	eq
 80012d0:	1aad      	subeq	r5, r5, r2
 80012d2:	68a3      	ldr	r3, [r4, #8]
 80012d4:	6922      	ldr	r2, [r4, #16]
 80012d6:	bf0c      	ite	eq
 80012d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80012dc:	2500      	movne	r5, #0
 80012de:	4293      	cmp	r3, r2
 80012e0:	bfc4      	itt	gt
 80012e2:	1a9b      	subgt	r3, r3, r2
 80012e4:	18ed      	addgt	r5, r5, r3
 80012e6:	2600      	movs	r6, #0
 80012e8:	341a      	adds	r4, #26
 80012ea:	42b5      	cmp	r5, r6
 80012ec:	d11a      	bne.n	8001324 <_printf_common+0xc8>
 80012ee:	2000      	movs	r0, #0
 80012f0:	e008      	b.n	8001304 <_printf_common+0xa8>
 80012f2:	2301      	movs	r3, #1
 80012f4:	4652      	mov	r2, sl
 80012f6:	4649      	mov	r1, r9
 80012f8:	4638      	mov	r0, r7
 80012fa:	47c0      	blx	r8
 80012fc:	3001      	adds	r0, #1
 80012fe:	d103      	bne.n	8001308 <_printf_common+0xac>
 8001300:	f04f 30ff 	mov.w	r0, #4294967295
 8001304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001308:	3501      	adds	r5, #1
 800130a:	e7c6      	b.n	800129a <_printf_common+0x3e>
 800130c:	18e1      	adds	r1, r4, r3
 800130e:	1c5a      	adds	r2, r3, #1
 8001310:	2030      	movs	r0, #48	; 0x30
 8001312:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001316:	4422      	add	r2, r4
 8001318:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800131c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001320:	3302      	adds	r3, #2
 8001322:	e7c7      	b.n	80012b4 <_printf_common+0x58>
 8001324:	2301      	movs	r3, #1
 8001326:	4622      	mov	r2, r4
 8001328:	4649      	mov	r1, r9
 800132a:	4638      	mov	r0, r7
 800132c:	47c0      	blx	r8
 800132e:	3001      	adds	r0, #1
 8001330:	d0e6      	beq.n	8001300 <_printf_common+0xa4>
 8001332:	3601      	adds	r6, #1
 8001334:	e7d9      	b.n	80012ea <_printf_common+0x8e>
	...

08001338 <_printf_i>:
 8001338:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800133c:	7e0f      	ldrb	r7, [r1, #24]
 800133e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001340:	2f78      	cmp	r7, #120	; 0x78
 8001342:	4691      	mov	r9, r2
 8001344:	4680      	mov	r8, r0
 8001346:	460c      	mov	r4, r1
 8001348:	469a      	mov	sl, r3
 800134a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800134e:	d807      	bhi.n	8001360 <_printf_i+0x28>
 8001350:	2f62      	cmp	r7, #98	; 0x62
 8001352:	d80a      	bhi.n	800136a <_printf_i+0x32>
 8001354:	2f00      	cmp	r7, #0
 8001356:	f000 80d8 	beq.w	800150a <_printf_i+0x1d2>
 800135a:	2f58      	cmp	r7, #88	; 0x58
 800135c:	f000 80a3 	beq.w	80014a6 <_printf_i+0x16e>
 8001360:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001364:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001368:	e03a      	b.n	80013e0 <_printf_i+0xa8>
 800136a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800136e:	2b15      	cmp	r3, #21
 8001370:	d8f6      	bhi.n	8001360 <_printf_i+0x28>
 8001372:	a101      	add	r1, pc, #4	; (adr r1, 8001378 <_printf_i+0x40>)
 8001374:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001378:	080013d1 	.word	0x080013d1
 800137c:	080013e5 	.word	0x080013e5
 8001380:	08001361 	.word	0x08001361
 8001384:	08001361 	.word	0x08001361
 8001388:	08001361 	.word	0x08001361
 800138c:	08001361 	.word	0x08001361
 8001390:	080013e5 	.word	0x080013e5
 8001394:	08001361 	.word	0x08001361
 8001398:	08001361 	.word	0x08001361
 800139c:	08001361 	.word	0x08001361
 80013a0:	08001361 	.word	0x08001361
 80013a4:	080014f1 	.word	0x080014f1
 80013a8:	08001415 	.word	0x08001415
 80013ac:	080014d3 	.word	0x080014d3
 80013b0:	08001361 	.word	0x08001361
 80013b4:	08001361 	.word	0x08001361
 80013b8:	08001513 	.word	0x08001513
 80013bc:	08001361 	.word	0x08001361
 80013c0:	08001415 	.word	0x08001415
 80013c4:	08001361 	.word	0x08001361
 80013c8:	08001361 	.word	0x08001361
 80013cc:	080014db 	.word	0x080014db
 80013d0:	682b      	ldr	r3, [r5, #0]
 80013d2:	1d1a      	adds	r2, r3, #4
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	602a      	str	r2, [r5, #0]
 80013d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80013dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80013e0:	2301      	movs	r3, #1
 80013e2:	e0a3      	b.n	800152c <_printf_i+0x1f4>
 80013e4:	6820      	ldr	r0, [r4, #0]
 80013e6:	6829      	ldr	r1, [r5, #0]
 80013e8:	0606      	lsls	r6, r0, #24
 80013ea:	f101 0304 	add.w	r3, r1, #4
 80013ee:	d50a      	bpl.n	8001406 <_printf_i+0xce>
 80013f0:	680e      	ldr	r6, [r1, #0]
 80013f2:	602b      	str	r3, [r5, #0]
 80013f4:	2e00      	cmp	r6, #0
 80013f6:	da03      	bge.n	8001400 <_printf_i+0xc8>
 80013f8:	232d      	movs	r3, #45	; 0x2d
 80013fa:	4276      	negs	r6, r6
 80013fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001400:	485e      	ldr	r0, [pc, #376]	; (800157c <_printf_i+0x244>)
 8001402:	230a      	movs	r3, #10
 8001404:	e019      	b.n	800143a <_printf_i+0x102>
 8001406:	680e      	ldr	r6, [r1, #0]
 8001408:	602b      	str	r3, [r5, #0]
 800140a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800140e:	bf18      	it	ne
 8001410:	b236      	sxthne	r6, r6
 8001412:	e7ef      	b.n	80013f4 <_printf_i+0xbc>
 8001414:	682b      	ldr	r3, [r5, #0]
 8001416:	6820      	ldr	r0, [r4, #0]
 8001418:	1d19      	adds	r1, r3, #4
 800141a:	6029      	str	r1, [r5, #0]
 800141c:	0601      	lsls	r1, r0, #24
 800141e:	d501      	bpl.n	8001424 <_printf_i+0xec>
 8001420:	681e      	ldr	r6, [r3, #0]
 8001422:	e002      	b.n	800142a <_printf_i+0xf2>
 8001424:	0646      	lsls	r6, r0, #25
 8001426:	d5fb      	bpl.n	8001420 <_printf_i+0xe8>
 8001428:	881e      	ldrh	r6, [r3, #0]
 800142a:	4854      	ldr	r0, [pc, #336]	; (800157c <_printf_i+0x244>)
 800142c:	2f6f      	cmp	r7, #111	; 0x6f
 800142e:	bf0c      	ite	eq
 8001430:	2308      	moveq	r3, #8
 8001432:	230a      	movne	r3, #10
 8001434:	2100      	movs	r1, #0
 8001436:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800143a:	6865      	ldr	r5, [r4, #4]
 800143c:	60a5      	str	r5, [r4, #8]
 800143e:	2d00      	cmp	r5, #0
 8001440:	bfa2      	ittt	ge
 8001442:	6821      	ldrge	r1, [r4, #0]
 8001444:	f021 0104 	bicge.w	r1, r1, #4
 8001448:	6021      	strge	r1, [r4, #0]
 800144a:	b90e      	cbnz	r6, 8001450 <_printf_i+0x118>
 800144c:	2d00      	cmp	r5, #0
 800144e:	d04d      	beq.n	80014ec <_printf_i+0x1b4>
 8001450:	4615      	mov	r5, r2
 8001452:	fbb6 f1f3 	udiv	r1, r6, r3
 8001456:	fb03 6711 	mls	r7, r3, r1, r6
 800145a:	5dc7      	ldrb	r7, [r0, r7]
 800145c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001460:	4637      	mov	r7, r6
 8001462:	42bb      	cmp	r3, r7
 8001464:	460e      	mov	r6, r1
 8001466:	d9f4      	bls.n	8001452 <_printf_i+0x11a>
 8001468:	2b08      	cmp	r3, #8
 800146a:	d10b      	bne.n	8001484 <_printf_i+0x14c>
 800146c:	6823      	ldr	r3, [r4, #0]
 800146e:	07de      	lsls	r6, r3, #31
 8001470:	d508      	bpl.n	8001484 <_printf_i+0x14c>
 8001472:	6923      	ldr	r3, [r4, #16]
 8001474:	6861      	ldr	r1, [r4, #4]
 8001476:	4299      	cmp	r1, r3
 8001478:	bfde      	ittt	le
 800147a:	2330      	movle	r3, #48	; 0x30
 800147c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001480:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001484:	1b52      	subs	r2, r2, r5
 8001486:	6122      	str	r2, [r4, #16]
 8001488:	f8cd a000 	str.w	sl, [sp]
 800148c:	464b      	mov	r3, r9
 800148e:	aa03      	add	r2, sp, #12
 8001490:	4621      	mov	r1, r4
 8001492:	4640      	mov	r0, r8
 8001494:	f7ff fee2 	bl	800125c <_printf_common>
 8001498:	3001      	adds	r0, #1
 800149a:	d14c      	bne.n	8001536 <_printf_i+0x1fe>
 800149c:	f04f 30ff 	mov.w	r0, #4294967295
 80014a0:	b004      	add	sp, #16
 80014a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014a6:	4835      	ldr	r0, [pc, #212]	; (800157c <_printf_i+0x244>)
 80014a8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80014ac:	6829      	ldr	r1, [r5, #0]
 80014ae:	6823      	ldr	r3, [r4, #0]
 80014b0:	f851 6b04 	ldr.w	r6, [r1], #4
 80014b4:	6029      	str	r1, [r5, #0]
 80014b6:	061d      	lsls	r5, r3, #24
 80014b8:	d514      	bpl.n	80014e4 <_printf_i+0x1ac>
 80014ba:	07df      	lsls	r7, r3, #31
 80014bc:	bf44      	itt	mi
 80014be:	f043 0320 	orrmi.w	r3, r3, #32
 80014c2:	6023      	strmi	r3, [r4, #0]
 80014c4:	b91e      	cbnz	r6, 80014ce <_printf_i+0x196>
 80014c6:	6823      	ldr	r3, [r4, #0]
 80014c8:	f023 0320 	bic.w	r3, r3, #32
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	2310      	movs	r3, #16
 80014d0:	e7b0      	b.n	8001434 <_printf_i+0xfc>
 80014d2:	6823      	ldr	r3, [r4, #0]
 80014d4:	f043 0320 	orr.w	r3, r3, #32
 80014d8:	6023      	str	r3, [r4, #0]
 80014da:	2378      	movs	r3, #120	; 0x78
 80014dc:	4828      	ldr	r0, [pc, #160]	; (8001580 <_printf_i+0x248>)
 80014de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80014e2:	e7e3      	b.n	80014ac <_printf_i+0x174>
 80014e4:	0659      	lsls	r1, r3, #25
 80014e6:	bf48      	it	mi
 80014e8:	b2b6      	uxthmi	r6, r6
 80014ea:	e7e6      	b.n	80014ba <_printf_i+0x182>
 80014ec:	4615      	mov	r5, r2
 80014ee:	e7bb      	b.n	8001468 <_printf_i+0x130>
 80014f0:	682b      	ldr	r3, [r5, #0]
 80014f2:	6826      	ldr	r6, [r4, #0]
 80014f4:	6961      	ldr	r1, [r4, #20]
 80014f6:	1d18      	adds	r0, r3, #4
 80014f8:	6028      	str	r0, [r5, #0]
 80014fa:	0635      	lsls	r5, r6, #24
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	d501      	bpl.n	8001504 <_printf_i+0x1cc>
 8001500:	6019      	str	r1, [r3, #0]
 8001502:	e002      	b.n	800150a <_printf_i+0x1d2>
 8001504:	0670      	lsls	r0, r6, #25
 8001506:	d5fb      	bpl.n	8001500 <_printf_i+0x1c8>
 8001508:	8019      	strh	r1, [r3, #0]
 800150a:	2300      	movs	r3, #0
 800150c:	6123      	str	r3, [r4, #16]
 800150e:	4615      	mov	r5, r2
 8001510:	e7ba      	b.n	8001488 <_printf_i+0x150>
 8001512:	682b      	ldr	r3, [r5, #0]
 8001514:	1d1a      	adds	r2, r3, #4
 8001516:	602a      	str	r2, [r5, #0]
 8001518:	681d      	ldr	r5, [r3, #0]
 800151a:	6862      	ldr	r2, [r4, #4]
 800151c:	2100      	movs	r1, #0
 800151e:	4628      	mov	r0, r5
 8001520:	f7fe fe76 	bl	8000210 <memchr>
 8001524:	b108      	cbz	r0, 800152a <_printf_i+0x1f2>
 8001526:	1b40      	subs	r0, r0, r5
 8001528:	6060      	str	r0, [r4, #4]
 800152a:	6863      	ldr	r3, [r4, #4]
 800152c:	6123      	str	r3, [r4, #16]
 800152e:	2300      	movs	r3, #0
 8001530:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001534:	e7a8      	b.n	8001488 <_printf_i+0x150>
 8001536:	6923      	ldr	r3, [r4, #16]
 8001538:	462a      	mov	r2, r5
 800153a:	4649      	mov	r1, r9
 800153c:	4640      	mov	r0, r8
 800153e:	47d0      	blx	sl
 8001540:	3001      	adds	r0, #1
 8001542:	d0ab      	beq.n	800149c <_printf_i+0x164>
 8001544:	6823      	ldr	r3, [r4, #0]
 8001546:	079b      	lsls	r3, r3, #30
 8001548:	d413      	bmi.n	8001572 <_printf_i+0x23a>
 800154a:	68e0      	ldr	r0, [r4, #12]
 800154c:	9b03      	ldr	r3, [sp, #12]
 800154e:	4298      	cmp	r0, r3
 8001550:	bfb8      	it	lt
 8001552:	4618      	movlt	r0, r3
 8001554:	e7a4      	b.n	80014a0 <_printf_i+0x168>
 8001556:	2301      	movs	r3, #1
 8001558:	4632      	mov	r2, r6
 800155a:	4649      	mov	r1, r9
 800155c:	4640      	mov	r0, r8
 800155e:	47d0      	blx	sl
 8001560:	3001      	adds	r0, #1
 8001562:	d09b      	beq.n	800149c <_printf_i+0x164>
 8001564:	3501      	adds	r5, #1
 8001566:	68e3      	ldr	r3, [r4, #12]
 8001568:	9903      	ldr	r1, [sp, #12]
 800156a:	1a5b      	subs	r3, r3, r1
 800156c:	42ab      	cmp	r3, r5
 800156e:	dcf2      	bgt.n	8001556 <_printf_i+0x21e>
 8001570:	e7eb      	b.n	800154a <_printf_i+0x212>
 8001572:	2500      	movs	r5, #0
 8001574:	f104 0619 	add.w	r6, r4, #25
 8001578:	e7f5      	b.n	8001566 <_printf_i+0x22e>
 800157a:	bf00      	nop
 800157c:	080016fd 	.word	0x080016fd
 8001580:	0800170e 	.word	0x0800170e

08001584 <_read_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4d07      	ldr	r5, [pc, #28]	; (80015a4 <_read_r+0x20>)
 8001588:	4604      	mov	r4, r0
 800158a:	4608      	mov	r0, r1
 800158c:	4611      	mov	r1, r2
 800158e:	2200      	movs	r2, #0
 8001590:	602a      	str	r2, [r5, #0]
 8001592:	461a      	mov	r2, r3
 8001594:	f7fe ff1e 	bl	80003d4 <_read>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_read_r+0x1e>
 800159c:	682b      	ldr	r3, [r5, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_read_r+0x1e>
 80015a0:	6023      	str	r3, [r4, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	20000090 	.word	0x20000090

080015a8 <_fstat_r>:
 80015a8:	b538      	push	{r3, r4, r5, lr}
 80015aa:	4d07      	ldr	r5, [pc, #28]	; (80015c8 <_fstat_r+0x20>)
 80015ac:	2300      	movs	r3, #0
 80015ae:	4604      	mov	r4, r0
 80015b0:	4608      	mov	r0, r1
 80015b2:	4611      	mov	r1, r2
 80015b4:	602b      	str	r3, [r5, #0]
 80015b6:	f7fe ff51 	bl	800045c <_fstat>
 80015ba:	1c43      	adds	r3, r0, #1
 80015bc:	d102      	bne.n	80015c4 <_fstat_r+0x1c>
 80015be:	682b      	ldr	r3, [r5, #0]
 80015c0:	b103      	cbz	r3, 80015c4 <_fstat_r+0x1c>
 80015c2:	6023      	str	r3, [r4, #0]
 80015c4:	bd38      	pop	{r3, r4, r5, pc}
 80015c6:	bf00      	nop
 80015c8:	20000090 	.word	0x20000090

080015cc <_isatty_r>:
 80015cc:	b538      	push	{r3, r4, r5, lr}
 80015ce:	4d06      	ldr	r5, [pc, #24]	; (80015e8 <_isatty_r+0x1c>)
 80015d0:	2300      	movs	r3, #0
 80015d2:	4604      	mov	r4, r0
 80015d4:	4608      	mov	r0, r1
 80015d6:	602b      	str	r3, [r5, #0]
 80015d8:	f7fe ff4f 	bl	800047a <_isatty>
 80015dc:	1c43      	adds	r3, r0, #1
 80015de:	d102      	bne.n	80015e6 <_isatty_r+0x1a>
 80015e0:	682b      	ldr	r3, [r5, #0]
 80015e2:	b103      	cbz	r3, 80015e6 <_isatty_r+0x1a>
 80015e4:	6023      	str	r3, [r4, #0]
 80015e6:	bd38      	pop	{r3, r4, r5, pc}
 80015e8:	20000090 	.word	0x20000090

080015ec <_init>:
 80015ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ee:	bf00      	nop
 80015f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015f2:	bc08      	pop	{r3}
 80015f4:	469e      	mov	lr, r3
 80015f6:	4770      	bx	lr

080015f8 <_fini>:
 80015f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015fa:	bf00      	nop
 80015fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015fe:	bc08      	pop	{r3}
 8001600:	469e      	mov	lr, r3
 8001602:	4770      	bx	lr
