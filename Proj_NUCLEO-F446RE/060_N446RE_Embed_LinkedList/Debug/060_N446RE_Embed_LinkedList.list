
060_N446RE_Embed_LinkedList.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001450  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08001620  08001620  00011620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016d4  080016d4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016d4  080016d4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016d4  080016d4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016d4  080016d4  000116d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016d8  080016d8  000116d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001740  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001740  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001172  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000453  00000000  00000000  00021200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00021658  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  00021778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002abd  00000000  00000000  00021860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013aa  00000000  00000000  0002431d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000963d  00000000  00000000  000256c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002ed04  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bc4  00000000  00000000  0002ed54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001608 	.word	0x08001608

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001608 	.word	0x08001608

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:

void array_display(uint8_t const *const pArray, uint32_t nItems);

/***************************MAIN*******************/
int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b086      	sub	sp, #24
 80002b4:	af00      	add	r7, sp, #0
	printf("Begin\n");	fflush(stdout);
 80002b6:	4823      	ldr	r0, [pc, #140]	; (8000344 <main+0x94>)
 80002b8:	f000 fcc4 	bl	8000c44 <puts>
 80002bc:	4b22      	ldr	r3, [pc, #136]	; (8000348 <main+0x98>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	689b      	ldr	r3, [r3, #8]
 80002c2:	4618      	mov	r0, r3
 80002c4:	f000 fa22 	bl	800070c <fflush>

	uint8_t someData[10]={0xaa, 0xab, 0xba, 0xbb, 0xac, 0xca, 0xcc, 0xad, 0xda,0xdd};
 80002c8:	4a20      	ldr	r2, [pc, #128]	; (800034c <main+0x9c>)
 80002ca:	1d3b      	adds	r3, r7, #4
 80002cc:	ca07      	ldmia	r2, {r0, r1, r2}
 80002ce:	c303      	stmia	r3!, {r0, r1}
 80002d0:	801a      	strh	r2, [r3, #0]

	for(uint8_t i=0; i<10; i++)
 80002d2:	2300      	movs	r3, #0
 80002d4:	75fb      	strb	r3, [r7, #23]
 80002d6:	e011      	b.n	80002fc <main+0x4c>
	{
		printf("%x\t",someData[i]);			fflush(stdout);
 80002d8:	7dfb      	ldrb	r3, [r7, #23]
 80002da:	3318      	adds	r3, #24
 80002dc:	443b      	add	r3, r7
 80002de:	f813 3c14 	ldrb.w	r3, [r3, #-20]
 80002e2:	4619      	mov	r1, r3
 80002e4:	481a      	ldr	r0, [pc, #104]	; (8000350 <main+0xa0>)
 80002e6:	f000 fc27 	bl	8000b38 <iprintf>
 80002ea:	4b17      	ldr	r3, [pc, #92]	; (8000348 <main+0x98>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	689b      	ldr	r3, [r3, #8]
 80002f0:	4618      	mov	r0, r3
 80002f2:	f000 fa0b 	bl	800070c <fflush>
	for(uint8_t i=0; i<10; i++)
 80002f6:	7dfb      	ldrb	r3, [r7, #23]
 80002f8:	3301      	adds	r3, #1
 80002fa:	75fb      	strb	r3, [r7, #23]
 80002fc:	7dfb      	ldrb	r3, [r7, #23]
 80002fe:	2b09      	cmp	r3, #9
 8000300:	d9ea      	bls.n	80002d8 <main+0x28>
	}
	printf("\r\n");		fflush(stdout);
 8000302:	4814      	ldr	r0, [pc, #80]	; (8000354 <main+0xa4>)
 8000304:	f000 fc9e 	bl	8000c44 <puts>
 8000308:	4b0f      	ldr	r3, [pc, #60]	; (8000348 <main+0x98>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	689b      	ldr	r3, [r3, #8]
 800030e:	4618      	mov	r0, r3
 8000310:	f000 f9fc 	bl	800070c <fflush>


	uint32_t nItems = sizeof(someData) / sizeof(uint8_t);
 8000314:	230a      	movs	r3, #10
 8000316:	613b      	str	r3, [r7, #16]

	array_display(someData+2, nItems-2);
 8000318:	1d3b      	adds	r3, r7, #4
 800031a:	3302      	adds	r3, #2
 800031c:	693a      	ldr	r2, [r7, #16]
 800031e:	3a02      	subs	r2, #2
 8000320:	4611      	mov	r1, r2
 8000322:	4618      	mov	r0, r3
 8000324:	f000 f818 	bl	8000358 <array_display>

	printf("\r\n");		fflush(stdout);
 8000328:	480a      	ldr	r0, [pc, #40]	; (8000354 <main+0xa4>)
 800032a:	f000 fc8b 	bl	8000c44 <puts>
 800032e:	4b06      	ldr	r3, [pc, #24]	; (8000348 <main+0x98>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	689b      	ldr	r3, [r3, #8]
 8000334:	4618      	mov	r0, r3
 8000336:	f000 f9e9 	bl	800070c <fflush>

return 0;
 800033a:	2300      	movs	r3, #0
}//END MAIN
 800033c:	4618      	mov	r0, r3
 800033e:	3718      	adds	r7, #24
 8000340:	46bd      	mov	sp, r7
 8000342:	bd80      	pop	{r7, pc}
 8000344:	08001620 	.word	0x08001620
 8000348:	20000000 	.word	0x20000000
 800034c:	08001630 	.word	0x08001630
 8000350:	08001628 	.word	0x08001628
 8000354:	0800162c 	.word	0x0800162c

08000358 <array_display>:

void array_display(uint8_t const *const pArray, uint32_t nItems)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b084      	sub	sp, #16
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
 8000360:	6039      	str	r1, [r7, #0]
	//lets diplay the conmtent of the received
	for(uint8_t i=0; i<nItems; i++)
 8000362:	2300      	movs	r3, #0
 8000364:	73fb      	strb	r3, [r7, #15]
 8000366:	e010      	b.n	800038a <array_display+0x32>
	{
	//	both statements are identical
	//	printf("%x\t", *(pArray+i));			fflush(stdout);
		printf("%x\t", pArray[i]);			fflush(stdout);
 8000368:	7bfb      	ldrb	r3, [r7, #15]
 800036a:	687a      	ldr	r2, [r7, #4]
 800036c:	4413      	add	r3, r2
 800036e:	781b      	ldrb	r3, [r3, #0]
 8000370:	4619      	mov	r1, r3
 8000372:	480a      	ldr	r0, [pc, #40]	; (800039c <array_display+0x44>)
 8000374:	f000 fbe0 	bl	8000b38 <iprintf>
 8000378:	4b09      	ldr	r3, [pc, #36]	; (80003a0 <array_display+0x48>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	689b      	ldr	r3, [r3, #8]
 800037e:	4618      	mov	r0, r3
 8000380:	f000 f9c4 	bl	800070c <fflush>
	for(uint8_t i=0; i<nItems; i++)
 8000384:	7bfb      	ldrb	r3, [r7, #15]
 8000386:	3301      	adds	r3, #1
 8000388:	73fb      	strb	r3, [r7, #15]
 800038a:	7bfb      	ldrb	r3, [r7, #15]
 800038c:	683a      	ldr	r2, [r7, #0]
 800038e:	429a      	cmp	r2, r3
 8000390:	d8ea      	bhi.n	8000368 <array_display+0x10>
	}
}
 8000392:	bf00      	nop
 8000394:	bf00      	nop
 8000396:	3710      	adds	r7, #16
 8000398:	46bd      	mov	sp, r7
 800039a:	bd80      	pop	{r7, pc}
 800039c:	08001628 	.word	0x08001628
 80003a0:	20000000 	.word	0x20000000

080003a4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b083      	sub	sp, #12
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	4603      	mov	r3, r0
 80003ac:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003ae:	4b0e      	ldr	r3, [pc, #56]	; (80003e8 <ITM_SendChar+0x44>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a0d      	ldr	r2, [pc, #52]	; (80003e8 <ITM_SendChar+0x44>)
 80003b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003b8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003ba:	4b0c      	ldr	r3, [pc, #48]	; (80003ec <ITM_SendChar+0x48>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	4a0b      	ldr	r2, [pc, #44]	; (80003ec <ITM_SendChar+0x48>)
 80003c0:	f043 0301 	orr.w	r3, r3, #1
 80003c4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003c6:	bf00      	nop
 80003c8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	f003 0301 	and.w	r3, r3, #1
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d0f8      	beq.n	80003c8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003da:	79fb      	ldrb	r3, [r7, #7]
 80003dc:	6013      	str	r3, [r2, #0]
}
 80003de:	bf00      	nop
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	bc80      	pop	{r7}
 80003e6:	4770      	bx	lr
 80003e8:	e000edfc 	.word	0xe000edfc
 80003ec:	e0000e00 	.word	0xe0000e00

080003f0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003f0:	b580      	push	{r7, lr}
 80003f2:	b086      	sub	sp, #24
 80003f4:	af00      	add	r7, sp, #0
 80003f6:	60f8      	str	r0, [r7, #12]
 80003f8:	60b9      	str	r1, [r7, #8]
 80003fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fc:	2300      	movs	r3, #0
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	e00a      	b.n	8000418 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000402:	f3af 8000 	nop.w
 8000406:	4601      	mov	r1, r0
 8000408:	68bb      	ldr	r3, [r7, #8]
 800040a:	1c5a      	adds	r2, r3, #1
 800040c:	60ba      	str	r2, [r7, #8]
 800040e:	b2ca      	uxtb	r2, r1
 8000410:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000412:	697b      	ldr	r3, [r7, #20]
 8000414:	3301      	adds	r3, #1
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	697a      	ldr	r2, [r7, #20]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	429a      	cmp	r2, r3
 800041e:	dbf0      	blt.n	8000402 <_read+0x12>
	}

return len;
 8000420:	687b      	ldr	r3, [r7, #4]
}
 8000422:	4618      	mov	r0, r3
 8000424:	3718      	adds	r7, #24
 8000426:	46bd      	mov	sp, r7
 8000428:	bd80      	pop	{r7, pc}

0800042a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800042a:	b580      	push	{r7, lr}
 800042c:	b086      	sub	sp, #24
 800042e:	af00      	add	r7, sp, #0
 8000430:	60f8      	str	r0, [r7, #12]
 8000432:	60b9      	str	r1, [r7, #8]
 8000434:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	2300      	movs	r3, #0
 8000438:	617b      	str	r3, [r7, #20]
 800043a:	e009      	b.n	8000450 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 800043c:	68bb      	ldr	r3, [r7, #8]
 800043e:	1c5a      	adds	r2, r3, #1
 8000440:	60ba      	str	r2, [r7, #8]
 8000442:	781b      	ldrb	r3, [r3, #0]
 8000444:	4618      	mov	r0, r3
 8000446:	f7ff ffad 	bl	80003a4 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044a:	697b      	ldr	r3, [r7, #20]
 800044c:	3301      	adds	r3, #1
 800044e:	617b      	str	r3, [r7, #20]
 8000450:	697a      	ldr	r2, [r7, #20]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	429a      	cmp	r2, r3
 8000456:	dbf1      	blt.n	800043c <_write+0x12>
	}
	return len;
 8000458:	687b      	ldr	r3, [r7, #4]
}
 800045a:	4618      	mov	r0, r3
 800045c:	3718      	adds	r7, #24
 800045e:	46bd      	mov	sp, r7
 8000460:	bd80      	pop	{r7, pc}

08000462 <_close>:

int _close(int file)
{
 8000462:	b480      	push	{r7}
 8000464:	b083      	sub	sp, #12
 8000466:	af00      	add	r7, sp, #0
 8000468:	6078      	str	r0, [r7, #4]
	return -1;
 800046a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800046e:	4618      	mov	r0, r3
 8000470:	370c      	adds	r7, #12
 8000472:	46bd      	mov	sp, r7
 8000474:	bc80      	pop	{r7}
 8000476:	4770      	bx	lr

08000478 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000478:	b480      	push	{r7}
 800047a:	b083      	sub	sp, #12
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
 8000480:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000482:	683b      	ldr	r3, [r7, #0]
 8000484:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000488:	605a      	str	r2, [r3, #4]
	return 0;
 800048a:	2300      	movs	r3, #0
}
 800048c:	4618      	mov	r0, r3
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	bc80      	pop	{r7}
 8000494:	4770      	bx	lr

08000496 <_isatty>:

int _isatty(int file)
{
 8000496:	b480      	push	{r7}
 8000498:	b083      	sub	sp, #12
 800049a:	af00      	add	r7, sp, #0
 800049c:	6078      	str	r0, [r7, #4]
	return 1;
 800049e:	2301      	movs	r3, #1
}
 80004a0:	4618      	mov	r0, r3
 80004a2:	370c      	adds	r7, #12
 80004a4:	46bd      	mov	sp, r7
 80004a6:	bc80      	pop	{r7}
 80004a8:	4770      	bx	lr

080004aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004aa:	b480      	push	{r7}
 80004ac:	b085      	sub	sp, #20
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	60f8      	str	r0, [r7, #12]
 80004b2:	60b9      	str	r1, [r7, #8]
 80004b4:	607a      	str	r2, [r7, #4]
	return 0;
 80004b6:	2300      	movs	r3, #0
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	3714      	adds	r7, #20
 80004bc:	46bd      	mov	sp, r7
 80004be:	bc80      	pop	{r7}
 80004c0:	4770      	bx	lr
	...

080004c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b086      	sub	sp, #24
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004cc:	4a14      	ldr	r2, [pc, #80]	; (8000520 <_sbrk+0x5c>)
 80004ce:	4b15      	ldr	r3, [pc, #84]	; (8000524 <_sbrk+0x60>)
 80004d0:	1ad3      	subs	r3, r2, r3
 80004d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d4:	697b      	ldr	r3, [r7, #20]
 80004d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004d8:	4b13      	ldr	r3, [pc, #76]	; (8000528 <_sbrk+0x64>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d102      	bne.n	80004e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004e0:	4b11      	ldr	r3, [pc, #68]	; (8000528 <_sbrk+0x64>)
 80004e2:	4a12      	ldr	r2, [pc, #72]	; (800052c <_sbrk+0x68>)
 80004e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004e6:	4b10      	ldr	r3, [pc, #64]	; (8000528 <_sbrk+0x64>)
 80004e8:	681a      	ldr	r2, [r3, #0]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4413      	add	r3, r2
 80004ee:	693a      	ldr	r2, [r7, #16]
 80004f0:	429a      	cmp	r2, r3
 80004f2:	d207      	bcs.n	8000504 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f4:	f000 f846 	bl	8000584 <__errno>
 80004f8:	4603      	mov	r3, r0
 80004fa:	220c      	movs	r2, #12
 80004fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004fe:	f04f 33ff 	mov.w	r3, #4294967295
 8000502:	e009      	b.n	8000518 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000504:	4b08      	ldr	r3, [pc, #32]	; (8000528 <_sbrk+0x64>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800050a:	4b07      	ldr	r3, [pc, #28]	; (8000528 <_sbrk+0x64>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	4413      	add	r3, r2
 8000512:	4a05      	ldr	r2, [pc, #20]	; (8000528 <_sbrk+0x64>)
 8000514:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000516:	68fb      	ldr	r3, [r7, #12]
}
 8000518:	4618      	mov	r0, r3
 800051a:	3718      	adds	r7, #24
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}
 8000520:	20020000 	.word	0x20020000
 8000524:	00000400 	.word	0x00000400
 8000528:	20000080 	.word	0x20000080
 800052c:	20000098 	.word	0x20000098

08000530 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000530:	480d      	ldr	r0, [pc, #52]	; (8000568 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000532:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000534:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000538:	480c      	ldr	r0, [pc, #48]	; (800056c <LoopForever+0x6>)
  ldr r1, =_edata
 800053a:	490d      	ldr	r1, [pc, #52]	; (8000570 <LoopForever+0xa>)
  ldr r2, =_sidata
 800053c:	4a0d      	ldr	r2, [pc, #52]	; (8000574 <LoopForever+0xe>)
  movs r3, #0
 800053e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000540:	e002      	b.n	8000548 <LoopCopyDataInit>

08000542 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000542:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000544:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000546:	3304      	adds	r3, #4

08000548 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000548:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800054c:	d3f9      	bcc.n	8000542 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800054e:	4a0a      	ldr	r2, [pc, #40]	; (8000578 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000550:	4c0a      	ldr	r4, [pc, #40]	; (800057c <LoopForever+0x16>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000554:	e001      	b.n	800055a <LoopFillZerobss>

08000556 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000556:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000558:	3204      	adds	r2, #4

0800055a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800055c:	d3fb      	bcc.n	8000556 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800055e:	f000 f9dd 	bl	800091c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000562:	f7ff fea5 	bl	80002b0 <main>

08000566 <LoopForever>:

LoopForever:
    b LoopForever
 8000566:	e7fe      	b.n	8000566 <LoopForever>
  ldr   r0, =_estack
 8000568:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800056c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000570:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000574:	080016dc 	.word	0x080016dc
  ldr r2, =_sbss
 8000578:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800057c:	20000094 	.word	0x20000094

08000580 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000580:	e7fe      	b.n	8000580 <ADC_IRQHandler>
	...

08000584 <__errno>:
 8000584:	4b01      	ldr	r3, [pc, #4]	; (800058c <__errno+0x8>)
 8000586:	6818      	ldr	r0, [r3, #0]
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	20000000 	.word	0x20000000

08000590 <__sflush_r>:
 8000590:	898a      	ldrh	r2, [r1, #12]
 8000592:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000594:	4605      	mov	r5, r0
 8000596:	0710      	lsls	r0, r2, #28
 8000598:	460c      	mov	r4, r1
 800059a:	d457      	bmi.n	800064c <__sflush_r+0xbc>
 800059c:	684b      	ldr	r3, [r1, #4]
 800059e:	2b00      	cmp	r3, #0
 80005a0:	dc04      	bgt.n	80005ac <__sflush_r+0x1c>
 80005a2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80005a4:	2b00      	cmp	r3, #0
 80005a6:	dc01      	bgt.n	80005ac <__sflush_r+0x1c>
 80005a8:	2000      	movs	r0, #0
 80005aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005ae:	2e00      	cmp	r6, #0
 80005b0:	d0fa      	beq.n	80005a8 <__sflush_r+0x18>
 80005b2:	2300      	movs	r3, #0
 80005b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80005b8:	682f      	ldr	r7, [r5, #0]
 80005ba:	602b      	str	r3, [r5, #0]
 80005bc:	d032      	beq.n	8000624 <__sflush_r+0x94>
 80005be:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80005c0:	89a3      	ldrh	r3, [r4, #12]
 80005c2:	075a      	lsls	r2, r3, #29
 80005c4:	d505      	bpl.n	80005d2 <__sflush_r+0x42>
 80005c6:	6863      	ldr	r3, [r4, #4]
 80005c8:	1ac0      	subs	r0, r0, r3
 80005ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80005cc:	b10b      	cbz	r3, 80005d2 <__sflush_r+0x42>
 80005ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80005d0:	1ac0      	subs	r0, r0, r3
 80005d2:	2300      	movs	r3, #0
 80005d4:	4602      	mov	r2, r0
 80005d6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005d8:	6a21      	ldr	r1, [r4, #32]
 80005da:	4628      	mov	r0, r5
 80005dc:	47b0      	blx	r6
 80005de:	1c43      	adds	r3, r0, #1
 80005e0:	89a3      	ldrh	r3, [r4, #12]
 80005e2:	d106      	bne.n	80005f2 <__sflush_r+0x62>
 80005e4:	6829      	ldr	r1, [r5, #0]
 80005e6:	291d      	cmp	r1, #29
 80005e8:	d82c      	bhi.n	8000644 <__sflush_r+0xb4>
 80005ea:	4a29      	ldr	r2, [pc, #164]	; (8000690 <__sflush_r+0x100>)
 80005ec:	40ca      	lsrs	r2, r1
 80005ee:	07d6      	lsls	r6, r2, #31
 80005f0:	d528      	bpl.n	8000644 <__sflush_r+0xb4>
 80005f2:	2200      	movs	r2, #0
 80005f4:	6062      	str	r2, [r4, #4]
 80005f6:	04d9      	lsls	r1, r3, #19
 80005f8:	6922      	ldr	r2, [r4, #16]
 80005fa:	6022      	str	r2, [r4, #0]
 80005fc:	d504      	bpl.n	8000608 <__sflush_r+0x78>
 80005fe:	1c42      	adds	r2, r0, #1
 8000600:	d101      	bne.n	8000606 <__sflush_r+0x76>
 8000602:	682b      	ldr	r3, [r5, #0]
 8000604:	b903      	cbnz	r3, 8000608 <__sflush_r+0x78>
 8000606:	6560      	str	r0, [r4, #84]	; 0x54
 8000608:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800060a:	602f      	str	r7, [r5, #0]
 800060c:	2900      	cmp	r1, #0
 800060e:	d0cb      	beq.n	80005a8 <__sflush_r+0x18>
 8000610:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000614:	4299      	cmp	r1, r3
 8000616:	d002      	beq.n	800061e <__sflush_r+0x8e>
 8000618:	4628      	mov	r0, r5
 800061a:	f000 f9af 	bl	800097c <_free_r>
 800061e:	2000      	movs	r0, #0
 8000620:	6360      	str	r0, [r4, #52]	; 0x34
 8000622:	e7c2      	b.n	80005aa <__sflush_r+0x1a>
 8000624:	6a21      	ldr	r1, [r4, #32]
 8000626:	2301      	movs	r3, #1
 8000628:	4628      	mov	r0, r5
 800062a:	47b0      	blx	r6
 800062c:	1c41      	adds	r1, r0, #1
 800062e:	d1c7      	bne.n	80005c0 <__sflush_r+0x30>
 8000630:	682b      	ldr	r3, [r5, #0]
 8000632:	2b00      	cmp	r3, #0
 8000634:	d0c4      	beq.n	80005c0 <__sflush_r+0x30>
 8000636:	2b1d      	cmp	r3, #29
 8000638:	d001      	beq.n	800063e <__sflush_r+0xae>
 800063a:	2b16      	cmp	r3, #22
 800063c:	d101      	bne.n	8000642 <__sflush_r+0xb2>
 800063e:	602f      	str	r7, [r5, #0]
 8000640:	e7b2      	b.n	80005a8 <__sflush_r+0x18>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000648:	81a3      	strh	r3, [r4, #12]
 800064a:	e7ae      	b.n	80005aa <__sflush_r+0x1a>
 800064c:	690f      	ldr	r7, [r1, #16]
 800064e:	2f00      	cmp	r7, #0
 8000650:	d0aa      	beq.n	80005a8 <__sflush_r+0x18>
 8000652:	0793      	lsls	r3, r2, #30
 8000654:	680e      	ldr	r6, [r1, #0]
 8000656:	bf08      	it	eq
 8000658:	694b      	ldreq	r3, [r1, #20]
 800065a:	600f      	str	r7, [r1, #0]
 800065c:	bf18      	it	ne
 800065e:	2300      	movne	r3, #0
 8000660:	1bf6      	subs	r6, r6, r7
 8000662:	608b      	str	r3, [r1, #8]
 8000664:	2e00      	cmp	r6, #0
 8000666:	dd9f      	ble.n	80005a8 <__sflush_r+0x18>
 8000668:	6a21      	ldr	r1, [r4, #32]
 800066a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800066e:	4633      	mov	r3, r6
 8000670:	463a      	mov	r2, r7
 8000672:	4628      	mov	r0, r5
 8000674:	47e0      	blx	ip
 8000676:	2800      	cmp	r0, #0
 8000678:	dc06      	bgt.n	8000688 <__sflush_r+0xf8>
 800067a:	89a3      	ldrh	r3, [r4, #12]
 800067c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000680:	81a3      	strh	r3, [r4, #12]
 8000682:	f04f 30ff 	mov.w	r0, #4294967295
 8000686:	e790      	b.n	80005aa <__sflush_r+0x1a>
 8000688:	4407      	add	r7, r0
 800068a:	1a36      	subs	r6, r6, r0
 800068c:	e7ea      	b.n	8000664 <__sflush_r+0xd4>
 800068e:	bf00      	nop
 8000690:	20400001 	.word	0x20400001

08000694 <_fflush_r>:
 8000694:	b538      	push	{r3, r4, r5, lr}
 8000696:	690b      	ldr	r3, [r1, #16]
 8000698:	4605      	mov	r5, r0
 800069a:	460c      	mov	r4, r1
 800069c:	b913      	cbnz	r3, 80006a4 <_fflush_r+0x10>
 800069e:	2500      	movs	r5, #0
 80006a0:	4628      	mov	r0, r5
 80006a2:	bd38      	pop	{r3, r4, r5, pc}
 80006a4:	b118      	cbz	r0, 80006ae <_fflush_r+0x1a>
 80006a6:	6983      	ldr	r3, [r0, #24]
 80006a8:	b90b      	cbnz	r3, 80006ae <_fflush_r+0x1a>
 80006aa:	f000 f899 	bl	80007e0 <__sinit>
 80006ae:	4b14      	ldr	r3, [pc, #80]	; (8000700 <_fflush_r+0x6c>)
 80006b0:	429c      	cmp	r4, r3
 80006b2:	d11b      	bne.n	80006ec <_fflush_r+0x58>
 80006b4:	686c      	ldr	r4, [r5, #4]
 80006b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d0ef      	beq.n	800069e <_fflush_r+0xa>
 80006be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80006c0:	07d0      	lsls	r0, r2, #31
 80006c2:	d404      	bmi.n	80006ce <_fflush_r+0x3a>
 80006c4:	0599      	lsls	r1, r3, #22
 80006c6:	d402      	bmi.n	80006ce <_fflush_r+0x3a>
 80006c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ca:	f000 f94c 	bl	8000966 <__retarget_lock_acquire_recursive>
 80006ce:	4628      	mov	r0, r5
 80006d0:	4621      	mov	r1, r4
 80006d2:	f7ff ff5d 	bl	8000590 <__sflush_r>
 80006d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006d8:	07da      	lsls	r2, r3, #31
 80006da:	4605      	mov	r5, r0
 80006dc:	d4e0      	bmi.n	80006a0 <_fflush_r+0xc>
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	059b      	lsls	r3, r3, #22
 80006e2:	d4dd      	bmi.n	80006a0 <_fflush_r+0xc>
 80006e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006e6:	f000 f93f 	bl	8000968 <__retarget_lock_release_recursive>
 80006ea:	e7d9      	b.n	80006a0 <_fflush_r+0xc>
 80006ec:	4b05      	ldr	r3, [pc, #20]	; (8000704 <_fflush_r+0x70>)
 80006ee:	429c      	cmp	r4, r3
 80006f0:	d101      	bne.n	80006f6 <_fflush_r+0x62>
 80006f2:	68ac      	ldr	r4, [r5, #8]
 80006f4:	e7df      	b.n	80006b6 <_fflush_r+0x22>
 80006f6:	4b04      	ldr	r3, [pc, #16]	; (8000708 <_fflush_r+0x74>)
 80006f8:	429c      	cmp	r4, r3
 80006fa:	bf08      	it	eq
 80006fc:	68ec      	ldreq	r4, [r5, #12]
 80006fe:	e7da      	b.n	80006b6 <_fflush_r+0x22>
 8000700:	0800165c 	.word	0x0800165c
 8000704:	0800167c 	.word	0x0800167c
 8000708:	0800163c 	.word	0x0800163c

0800070c <fflush>:
 800070c:	4601      	mov	r1, r0
 800070e:	b920      	cbnz	r0, 800071a <fflush+0xe>
 8000710:	4b04      	ldr	r3, [pc, #16]	; (8000724 <fflush+0x18>)
 8000712:	4905      	ldr	r1, [pc, #20]	; (8000728 <fflush+0x1c>)
 8000714:	6818      	ldr	r0, [r3, #0]
 8000716:	f000 b8e1 	b.w	80008dc <_fwalk_reent>
 800071a:	4b04      	ldr	r3, [pc, #16]	; (800072c <fflush+0x20>)
 800071c:	6818      	ldr	r0, [r3, #0]
 800071e:	f7ff bfb9 	b.w	8000694 <_fflush_r>
 8000722:	bf00      	nop
 8000724:	0800169c 	.word	0x0800169c
 8000728:	08000695 	.word	0x08000695
 800072c:	20000000 	.word	0x20000000

08000730 <std>:
 8000730:	2300      	movs	r3, #0
 8000732:	b510      	push	{r4, lr}
 8000734:	4604      	mov	r4, r0
 8000736:	e9c0 3300 	strd	r3, r3, [r0]
 800073a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800073e:	6083      	str	r3, [r0, #8]
 8000740:	8181      	strh	r1, [r0, #12]
 8000742:	6643      	str	r3, [r0, #100]	; 0x64
 8000744:	81c2      	strh	r2, [r0, #14]
 8000746:	6183      	str	r3, [r0, #24]
 8000748:	4619      	mov	r1, r3
 800074a:	2208      	movs	r2, #8
 800074c:	305c      	adds	r0, #92	; 0x5c
 800074e:	f000 f90c 	bl	800096a <memset>
 8000752:	4b05      	ldr	r3, [pc, #20]	; (8000768 <std+0x38>)
 8000754:	6263      	str	r3, [r4, #36]	; 0x24
 8000756:	4b05      	ldr	r3, [pc, #20]	; (800076c <std+0x3c>)
 8000758:	62a3      	str	r3, [r4, #40]	; 0x28
 800075a:	4b05      	ldr	r3, [pc, #20]	; (8000770 <std+0x40>)
 800075c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800075e:	4b05      	ldr	r3, [pc, #20]	; (8000774 <std+0x44>)
 8000760:	6224      	str	r4, [r4, #32]
 8000762:	6323      	str	r3, [r4, #48]	; 0x30
 8000764:	bd10      	pop	{r4, pc}
 8000766:	bf00      	nop
 8000768:	08000c75 	.word	0x08000c75
 800076c:	08000c97 	.word	0x08000c97
 8000770:	08000ccf 	.word	0x08000ccf
 8000774:	08000cf3 	.word	0x08000cf3

08000778 <_cleanup_r>:
 8000778:	4901      	ldr	r1, [pc, #4]	; (8000780 <_cleanup_r+0x8>)
 800077a:	f000 b8af 	b.w	80008dc <_fwalk_reent>
 800077e:	bf00      	nop
 8000780:	08000695 	.word	0x08000695

08000784 <__sfmoreglue>:
 8000784:	b570      	push	{r4, r5, r6, lr}
 8000786:	2268      	movs	r2, #104	; 0x68
 8000788:	1e4d      	subs	r5, r1, #1
 800078a:	4355      	muls	r5, r2
 800078c:	460e      	mov	r6, r1
 800078e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000792:	f000 f95d 	bl	8000a50 <_malloc_r>
 8000796:	4604      	mov	r4, r0
 8000798:	b140      	cbz	r0, 80007ac <__sfmoreglue+0x28>
 800079a:	2100      	movs	r1, #0
 800079c:	e9c0 1600 	strd	r1, r6, [r0]
 80007a0:	300c      	adds	r0, #12
 80007a2:	60a0      	str	r0, [r4, #8]
 80007a4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007a8:	f000 f8df 	bl	800096a <memset>
 80007ac:	4620      	mov	r0, r4
 80007ae:	bd70      	pop	{r4, r5, r6, pc}

080007b0 <__sfp_lock_acquire>:
 80007b0:	4801      	ldr	r0, [pc, #4]	; (80007b8 <__sfp_lock_acquire+0x8>)
 80007b2:	f000 b8d8 	b.w	8000966 <__retarget_lock_acquire_recursive>
 80007b6:	bf00      	nop
 80007b8:	20000085 	.word	0x20000085

080007bc <__sfp_lock_release>:
 80007bc:	4801      	ldr	r0, [pc, #4]	; (80007c4 <__sfp_lock_release+0x8>)
 80007be:	f000 b8d3 	b.w	8000968 <__retarget_lock_release_recursive>
 80007c2:	bf00      	nop
 80007c4:	20000085 	.word	0x20000085

080007c8 <__sinit_lock_acquire>:
 80007c8:	4801      	ldr	r0, [pc, #4]	; (80007d0 <__sinit_lock_acquire+0x8>)
 80007ca:	f000 b8cc 	b.w	8000966 <__retarget_lock_acquire_recursive>
 80007ce:	bf00      	nop
 80007d0:	20000086 	.word	0x20000086

080007d4 <__sinit_lock_release>:
 80007d4:	4801      	ldr	r0, [pc, #4]	; (80007dc <__sinit_lock_release+0x8>)
 80007d6:	f000 b8c7 	b.w	8000968 <__retarget_lock_release_recursive>
 80007da:	bf00      	nop
 80007dc:	20000086 	.word	0x20000086

080007e0 <__sinit>:
 80007e0:	b510      	push	{r4, lr}
 80007e2:	4604      	mov	r4, r0
 80007e4:	f7ff fff0 	bl	80007c8 <__sinit_lock_acquire>
 80007e8:	69a3      	ldr	r3, [r4, #24]
 80007ea:	b11b      	cbz	r3, 80007f4 <__sinit+0x14>
 80007ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f0:	f7ff bff0 	b.w	80007d4 <__sinit_lock_release>
 80007f4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007f8:	6523      	str	r3, [r4, #80]	; 0x50
 80007fa:	4b13      	ldr	r3, [pc, #76]	; (8000848 <__sinit+0x68>)
 80007fc:	4a13      	ldr	r2, [pc, #76]	; (800084c <__sinit+0x6c>)
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	62a2      	str	r2, [r4, #40]	; 0x28
 8000802:	42a3      	cmp	r3, r4
 8000804:	bf04      	itt	eq
 8000806:	2301      	moveq	r3, #1
 8000808:	61a3      	streq	r3, [r4, #24]
 800080a:	4620      	mov	r0, r4
 800080c:	f000 f820 	bl	8000850 <__sfp>
 8000810:	6060      	str	r0, [r4, #4]
 8000812:	4620      	mov	r0, r4
 8000814:	f000 f81c 	bl	8000850 <__sfp>
 8000818:	60a0      	str	r0, [r4, #8]
 800081a:	4620      	mov	r0, r4
 800081c:	f000 f818 	bl	8000850 <__sfp>
 8000820:	2200      	movs	r2, #0
 8000822:	60e0      	str	r0, [r4, #12]
 8000824:	2104      	movs	r1, #4
 8000826:	6860      	ldr	r0, [r4, #4]
 8000828:	f7ff ff82 	bl	8000730 <std>
 800082c:	68a0      	ldr	r0, [r4, #8]
 800082e:	2201      	movs	r2, #1
 8000830:	2109      	movs	r1, #9
 8000832:	f7ff ff7d 	bl	8000730 <std>
 8000836:	68e0      	ldr	r0, [r4, #12]
 8000838:	2202      	movs	r2, #2
 800083a:	2112      	movs	r1, #18
 800083c:	f7ff ff78 	bl	8000730 <std>
 8000840:	2301      	movs	r3, #1
 8000842:	61a3      	str	r3, [r4, #24]
 8000844:	e7d2      	b.n	80007ec <__sinit+0xc>
 8000846:	bf00      	nop
 8000848:	0800169c 	.word	0x0800169c
 800084c:	08000779 	.word	0x08000779

08000850 <__sfp>:
 8000850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000852:	4607      	mov	r7, r0
 8000854:	f7ff ffac 	bl	80007b0 <__sfp_lock_acquire>
 8000858:	4b1e      	ldr	r3, [pc, #120]	; (80008d4 <__sfp+0x84>)
 800085a:	681e      	ldr	r6, [r3, #0]
 800085c:	69b3      	ldr	r3, [r6, #24]
 800085e:	b913      	cbnz	r3, 8000866 <__sfp+0x16>
 8000860:	4630      	mov	r0, r6
 8000862:	f7ff ffbd 	bl	80007e0 <__sinit>
 8000866:	3648      	adds	r6, #72	; 0x48
 8000868:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800086c:	3b01      	subs	r3, #1
 800086e:	d503      	bpl.n	8000878 <__sfp+0x28>
 8000870:	6833      	ldr	r3, [r6, #0]
 8000872:	b30b      	cbz	r3, 80008b8 <__sfp+0x68>
 8000874:	6836      	ldr	r6, [r6, #0]
 8000876:	e7f7      	b.n	8000868 <__sfp+0x18>
 8000878:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800087c:	b9d5      	cbnz	r5, 80008b4 <__sfp+0x64>
 800087e:	4b16      	ldr	r3, [pc, #88]	; (80008d8 <__sfp+0x88>)
 8000880:	60e3      	str	r3, [r4, #12]
 8000882:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000886:	6665      	str	r5, [r4, #100]	; 0x64
 8000888:	f000 f86c 	bl	8000964 <__retarget_lock_init_recursive>
 800088c:	f7ff ff96 	bl	80007bc <__sfp_lock_release>
 8000890:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000894:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000898:	6025      	str	r5, [r4, #0]
 800089a:	61a5      	str	r5, [r4, #24]
 800089c:	2208      	movs	r2, #8
 800089e:	4629      	mov	r1, r5
 80008a0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008a4:	f000 f861 	bl	800096a <memset>
 80008a8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008ac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008b0:	4620      	mov	r0, r4
 80008b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008b4:	3468      	adds	r4, #104	; 0x68
 80008b6:	e7d9      	b.n	800086c <__sfp+0x1c>
 80008b8:	2104      	movs	r1, #4
 80008ba:	4638      	mov	r0, r7
 80008bc:	f7ff ff62 	bl	8000784 <__sfmoreglue>
 80008c0:	4604      	mov	r4, r0
 80008c2:	6030      	str	r0, [r6, #0]
 80008c4:	2800      	cmp	r0, #0
 80008c6:	d1d5      	bne.n	8000874 <__sfp+0x24>
 80008c8:	f7ff ff78 	bl	80007bc <__sfp_lock_release>
 80008cc:	230c      	movs	r3, #12
 80008ce:	603b      	str	r3, [r7, #0]
 80008d0:	e7ee      	b.n	80008b0 <__sfp+0x60>
 80008d2:	bf00      	nop
 80008d4:	0800169c 	.word	0x0800169c
 80008d8:	ffff0001 	.word	0xffff0001

080008dc <_fwalk_reent>:
 80008dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008e0:	4606      	mov	r6, r0
 80008e2:	4688      	mov	r8, r1
 80008e4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008e8:	2700      	movs	r7, #0
 80008ea:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008ee:	f1b9 0901 	subs.w	r9, r9, #1
 80008f2:	d505      	bpl.n	8000900 <_fwalk_reent+0x24>
 80008f4:	6824      	ldr	r4, [r4, #0]
 80008f6:	2c00      	cmp	r4, #0
 80008f8:	d1f7      	bne.n	80008ea <_fwalk_reent+0xe>
 80008fa:	4638      	mov	r0, r7
 80008fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000900:	89ab      	ldrh	r3, [r5, #12]
 8000902:	2b01      	cmp	r3, #1
 8000904:	d907      	bls.n	8000916 <_fwalk_reent+0x3a>
 8000906:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800090a:	3301      	adds	r3, #1
 800090c:	d003      	beq.n	8000916 <_fwalk_reent+0x3a>
 800090e:	4629      	mov	r1, r5
 8000910:	4630      	mov	r0, r6
 8000912:	47c0      	blx	r8
 8000914:	4307      	orrs	r7, r0
 8000916:	3568      	adds	r5, #104	; 0x68
 8000918:	e7e9      	b.n	80008ee <_fwalk_reent+0x12>
	...

0800091c <__libc_init_array>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	4d0d      	ldr	r5, [pc, #52]	; (8000954 <__libc_init_array+0x38>)
 8000920:	4c0d      	ldr	r4, [pc, #52]	; (8000958 <__libc_init_array+0x3c>)
 8000922:	1b64      	subs	r4, r4, r5
 8000924:	10a4      	asrs	r4, r4, #2
 8000926:	2600      	movs	r6, #0
 8000928:	42a6      	cmp	r6, r4
 800092a:	d109      	bne.n	8000940 <__libc_init_array+0x24>
 800092c:	4d0b      	ldr	r5, [pc, #44]	; (800095c <__libc_init_array+0x40>)
 800092e:	4c0c      	ldr	r4, [pc, #48]	; (8000960 <__libc_init_array+0x44>)
 8000930:	f000 fe6a 	bl	8001608 <_init>
 8000934:	1b64      	subs	r4, r4, r5
 8000936:	10a4      	asrs	r4, r4, #2
 8000938:	2600      	movs	r6, #0
 800093a:	42a6      	cmp	r6, r4
 800093c:	d105      	bne.n	800094a <__libc_init_array+0x2e>
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f855 3b04 	ldr.w	r3, [r5], #4
 8000944:	4798      	blx	r3
 8000946:	3601      	adds	r6, #1
 8000948:	e7ee      	b.n	8000928 <__libc_init_array+0xc>
 800094a:	f855 3b04 	ldr.w	r3, [r5], #4
 800094e:	4798      	blx	r3
 8000950:	3601      	adds	r6, #1
 8000952:	e7f2      	b.n	800093a <__libc_init_array+0x1e>
 8000954:	080016d4 	.word	0x080016d4
 8000958:	080016d4 	.word	0x080016d4
 800095c:	080016d4 	.word	0x080016d4
 8000960:	080016d8 	.word	0x080016d8

08000964 <__retarget_lock_init_recursive>:
 8000964:	4770      	bx	lr

08000966 <__retarget_lock_acquire_recursive>:
 8000966:	4770      	bx	lr

08000968 <__retarget_lock_release_recursive>:
 8000968:	4770      	bx	lr

0800096a <memset>:
 800096a:	4402      	add	r2, r0
 800096c:	4603      	mov	r3, r0
 800096e:	4293      	cmp	r3, r2
 8000970:	d100      	bne.n	8000974 <memset+0xa>
 8000972:	4770      	bx	lr
 8000974:	f803 1b01 	strb.w	r1, [r3], #1
 8000978:	e7f9      	b.n	800096e <memset+0x4>
	...

0800097c <_free_r>:
 800097c:	b538      	push	{r3, r4, r5, lr}
 800097e:	4605      	mov	r5, r0
 8000980:	2900      	cmp	r1, #0
 8000982:	d041      	beq.n	8000a08 <_free_r+0x8c>
 8000984:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000988:	1f0c      	subs	r4, r1, #4
 800098a:	2b00      	cmp	r3, #0
 800098c:	bfb8      	it	lt
 800098e:	18e4      	addlt	r4, r4, r3
 8000990:	f000 fb0e 	bl	8000fb0 <__malloc_lock>
 8000994:	4a1d      	ldr	r2, [pc, #116]	; (8000a0c <_free_r+0x90>)
 8000996:	6813      	ldr	r3, [r2, #0]
 8000998:	b933      	cbnz	r3, 80009a8 <_free_r+0x2c>
 800099a:	6063      	str	r3, [r4, #4]
 800099c:	6014      	str	r4, [r2, #0]
 800099e:	4628      	mov	r0, r5
 80009a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009a4:	f000 bb0a 	b.w	8000fbc <__malloc_unlock>
 80009a8:	42a3      	cmp	r3, r4
 80009aa:	d908      	bls.n	80009be <_free_r+0x42>
 80009ac:	6820      	ldr	r0, [r4, #0]
 80009ae:	1821      	adds	r1, r4, r0
 80009b0:	428b      	cmp	r3, r1
 80009b2:	bf01      	itttt	eq
 80009b4:	6819      	ldreq	r1, [r3, #0]
 80009b6:	685b      	ldreq	r3, [r3, #4]
 80009b8:	1809      	addeq	r1, r1, r0
 80009ba:	6021      	streq	r1, [r4, #0]
 80009bc:	e7ed      	b.n	800099a <_free_r+0x1e>
 80009be:	461a      	mov	r2, r3
 80009c0:	685b      	ldr	r3, [r3, #4]
 80009c2:	b10b      	cbz	r3, 80009c8 <_free_r+0x4c>
 80009c4:	42a3      	cmp	r3, r4
 80009c6:	d9fa      	bls.n	80009be <_free_r+0x42>
 80009c8:	6811      	ldr	r1, [r2, #0]
 80009ca:	1850      	adds	r0, r2, r1
 80009cc:	42a0      	cmp	r0, r4
 80009ce:	d10b      	bne.n	80009e8 <_free_r+0x6c>
 80009d0:	6820      	ldr	r0, [r4, #0]
 80009d2:	4401      	add	r1, r0
 80009d4:	1850      	adds	r0, r2, r1
 80009d6:	4283      	cmp	r3, r0
 80009d8:	6011      	str	r1, [r2, #0]
 80009da:	d1e0      	bne.n	800099e <_free_r+0x22>
 80009dc:	6818      	ldr	r0, [r3, #0]
 80009de:	685b      	ldr	r3, [r3, #4]
 80009e0:	6053      	str	r3, [r2, #4]
 80009e2:	4401      	add	r1, r0
 80009e4:	6011      	str	r1, [r2, #0]
 80009e6:	e7da      	b.n	800099e <_free_r+0x22>
 80009e8:	d902      	bls.n	80009f0 <_free_r+0x74>
 80009ea:	230c      	movs	r3, #12
 80009ec:	602b      	str	r3, [r5, #0]
 80009ee:	e7d6      	b.n	800099e <_free_r+0x22>
 80009f0:	6820      	ldr	r0, [r4, #0]
 80009f2:	1821      	adds	r1, r4, r0
 80009f4:	428b      	cmp	r3, r1
 80009f6:	bf04      	itt	eq
 80009f8:	6819      	ldreq	r1, [r3, #0]
 80009fa:	685b      	ldreq	r3, [r3, #4]
 80009fc:	6063      	str	r3, [r4, #4]
 80009fe:	bf04      	itt	eq
 8000a00:	1809      	addeq	r1, r1, r0
 8000a02:	6021      	streq	r1, [r4, #0]
 8000a04:	6054      	str	r4, [r2, #4]
 8000a06:	e7ca      	b.n	800099e <_free_r+0x22>
 8000a08:	bd38      	pop	{r3, r4, r5, pc}
 8000a0a:	bf00      	nop
 8000a0c:	20000088 	.word	0x20000088

08000a10 <sbrk_aligned>:
 8000a10:	b570      	push	{r4, r5, r6, lr}
 8000a12:	4e0e      	ldr	r6, [pc, #56]	; (8000a4c <sbrk_aligned+0x3c>)
 8000a14:	460c      	mov	r4, r1
 8000a16:	6831      	ldr	r1, [r6, #0]
 8000a18:	4605      	mov	r5, r0
 8000a1a:	b911      	cbnz	r1, 8000a22 <sbrk_aligned+0x12>
 8000a1c:	f000 f91a 	bl	8000c54 <_sbrk_r>
 8000a20:	6030      	str	r0, [r6, #0]
 8000a22:	4621      	mov	r1, r4
 8000a24:	4628      	mov	r0, r5
 8000a26:	f000 f915 	bl	8000c54 <_sbrk_r>
 8000a2a:	1c43      	adds	r3, r0, #1
 8000a2c:	d00a      	beq.n	8000a44 <sbrk_aligned+0x34>
 8000a2e:	1cc4      	adds	r4, r0, #3
 8000a30:	f024 0403 	bic.w	r4, r4, #3
 8000a34:	42a0      	cmp	r0, r4
 8000a36:	d007      	beq.n	8000a48 <sbrk_aligned+0x38>
 8000a38:	1a21      	subs	r1, r4, r0
 8000a3a:	4628      	mov	r0, r5
 8000a3c:	f000 f90a 	bl	8000c54 <_sbrk_r>
 8000a40:	3001      	adds	r0, #1
 8000a42:	d101      	bne.n	8000a48 <sbrk_aligned+0x38>
 8000a44:	f04f 34ff 	mov.w	r4, #4294967295
 8000a48:	4620      	mov	r0, r4
 8000a4a:	bd70      	pop	{r4, r5, r6, pc}
 8000a4c:	2000008c 	.word	0x2000008c

08000a50 <_malloc_r>:
 8000a50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a54:	1ccd      	adds	r5, r1, #3
 8000a56:	f025 0503 	bic.w	r5, r5, #3
 8000a5a:	3508      	adds	r5, #8
 8000a5c:	2d0c      	cmp	r5, #12
 8000a5e:	bf38      	it	cc
 8000a60:	250c      	movcc	r5, #12
 8000a62:	2d00      	cmp	r5, #0
 8000a64:	4607      	mov	r7, r0
 8000a66:	db01      	blt.n	8000a6c <_malloc_r+0x1c>
 8000a68:	42a9      	cmp	r1, r5
 8000a6a:	d905      	bls.n	8000a78 <_malloc_r+0x28>
 8000a6c:	230c      	movs	r3, #12
 8000a6e:	603b      	str	r3, [r7, #0]
 8000a70:	2600      	movs	r6, #0
 8000a72:	4630      	mov	r0, r6
 8000a74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a78:	4e2e      	ldr	r6, [pc, #184]	; (8000b34 <_malloc_r+0xe4>)
 8000a7a:	f000 fa99 	bl	8000fb0 <__malloc_lock>
 8000a7e:	6833      	ldr	r3, [r6, #0]
 8000a80:	461c      	mov	r4, r3
 8000a82:	bb34      	cbnz	r4, 8000ad2 <_malloc_r+0x82>
 8000a84:	4629      	mov	r1, r5
 8000a86:	4638      	mov	r0, r7
 8000a88:	f7ff ffc2 	bl	8000a10 <sbrk_aligned>
 8000a8c:	1c43      	adds	r3, r0, #1
 8000a8e:	4604      	mov	r4, r0
 8000a90:	d14d      	bne.n	8000b2e <_malloc_r+0xde>
 8000a92:	6834      	ldr	r4, [r6, #0]
 8000a94:	4626      	mov	r6, r4
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	d140      	bne.n	8000b1c <_malloc_r+0xcc>
 8000a9a:	6823      	ldr	r3, [r4, #0]
 8000a9c:	4631      	mov	r1, r6
 8000a9e:	4638      	mov	r0, r7
 8000aa0:	eb04 0803 	add.w	r8, r4, r3
 8000aa4:	f000 f8d6 	bl	8000c54 <_sbrk_r>
 8000aa8:	4580      	cmp	r8, r0
 8000aaa:	d13a      	bne.n	8000b22 <_malloc_r+0xd2>
 8000aac:	6821      	ldr	r1, [r4, #0]
 8000aae:	3503      	adds	r5, #3
 8000ab0:	1a6d      	subs	r5, r5, r1
 8000ab2:	f025 0503 	bic.w	r5, r5, #3
 8000ab6:	3508      	adds	r5, #8
 8000ab8:	2d0c      	cmp	r5, #12
 8000aba:	bf38      	it	cc
 8000abc:	250c      	movcc	r5, #12
 8000abe:	4629      	mov	r1, r5
 8000ac0:	4638      	mov	r0, r7
 8000ac2:	f7ff ffa5 	bl	8000a10 <sbrk_aligned>
 8000ac6:	3001      	adds	r0, #1
 8000ac8:	d02b      	beq.n	8000b22 <_malloc_r+0xd2>
 8000aca:	6823      	ldr	r3, [r4, #0]
 8000acc:	442b      	add	r3, r5
 8000ace:	6023      	str	r3, [r4, #0]
 8000ad0:	e00e      	b.n	8000af0 <_malloc_r+0xa0>
 8000ad2:	6822      	ldr	r2, [r4, #0]
 8000ad4:	1b52      	subs	r2, r2, r5
 8000ad6:	d41e      	bmi.n	8000b16 <_malloc_r+0xc6>
 8000ad8:	2a0b      	cmp	r2, #11
 8000ada:	d916      	bls.n	8000b0a <_malloc_r+0xba>
 8000adc:	1961      	adds	r1, r4, r5
 8000ade:	42a3      	cmp	r3, r4
 8000ae0:	6025      	str	r5, [r4, #0]
 8000ae2:	bf18      	it	ne
 8000ae4:	6059      	strne	r1, [r3, #4]
 8000ae6:	6863      	ldr	r3, [r4, #4]
 8000ae8:	bf08      	it	eq
 8000aea:	6031      	streq	r1, [r6, #0]
 8000aec:	5162      	str	r2, [r4, r5]
 8000aee:	604b      	str	r3, [r1, #4]
 8000af0:	4638      	mov	r0, r7
 8000af2:	f104 060b 	add.w	r6, r4, #11
 8000af6:	f000 fa61 	bl	8000fbc <__malloc_unlock>
 8000afa:	f026 0607 	bic.w	r6, r6, #7
 8000afe:	1d23      	adds	r3, r4, #4
 8000b00:	1af2      	subs	r2, r6, r3
 8000b02:	d0b6      	beq.n	8000a72 <_malloc_r+0x22>
 8000b04:	1b9b      	subs	r3, r3, r6
 8000b06:	50a3      	str	r3, [r4, r2]
 8000b08:	e7b3      	b.n	8000a72 <_malloc_r+0x22>
 8000b0a:	6862      	ldr	r2, [r4, #4]
 8000b0c:	42a3      	cmp	r3, r4
 8000b0e:	bf0c      	ite	eq
 8000b10:	6032      	streq	r2, [r6, #0]
 8000b12:	605a      	strne	r2, [r3, #4]
 8000b14:	e7ec      	b.n	8000af0 <_malloc_r+0xa0>
 8000b16:	4623      	mov	r3, r4
 8000b18:	6864      	ldr	r4, [r4, #4]
 8000b1a:	e7b2      	b.n	8000a82 <_malloc_r+0x32>
 8000b1c:	4634      	mov	r4, r6
 8000b1e:	6876      	ldr	r6, [r6, #4]
 8000b20:	e7b9      	b.n	8000a96 <_malloc_r+0x46>
 8000b22:	230c      	movs	r3, #12
 8000b24:	603b      	str	r3, [r7, #0]
 8000b26:	4638      	mov	r0, r7
 8000b28:	f000 fa48 	bl	8000fbc <__malloc_unlock>
 8000b2c:	e7a1      	b.n	8000a72 <_malloc_r+0x22>
 8000b2e:	6025      	str	r5, [r4, #0]
 8000b30:	e7de      	b.n	8000af0 <_malloc_r+0xa0>
 8000b32:	bf00      	nop
 8000b34:	20000088 	.word	0x20000088

08000b38 <iprintf>:
 8000b38:	b40f      	push	{r0, r1, r2, r3}
 8000b3a:	4b0a      	ldr	r3, [pc, #40]	; (8000b64 <iprintf+0x2c>)
 8000b3c:	b513      	push	{r0, r1, r4, lr}
 8000b3e:	681c      	ldr	r4, [r3, #0]
 8000b40:	b124      	cbz	r4, 8000b4c <iprintf+0x14>
 8000b42:	69a3      	ldr	r3, [r4, #24]
 8000b44:	b913      	cbnz	r3, 8000b4c <iprintf+0x14>
 8000b46:	4620      	mov	r0, r4
 8000b48:	f7ff fe4a 	bl	80007e0 <__sinit>
 8000b4c:	ab05      	add	r3, sp, #20
 8000b4e:	9a04      	ldr	r2, [sp, #16]
 8000b50:	68a1      	ldr	r1, [r4, #8]
 8000b52:	9301      	str	r3, [sp, #4]
 8000b54:	4620      	mov	r0, r4
 8000b56:	f000 fa5f 	bl	8001018 <_vfiprintf_r>
 8000b5a:	b002      	add	sp, #8
 8000b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b60:	b004      	add	sp, #16
 8000b62:	4770      	bx	lr
 8000b64:	20000000 	.word	0x20000000

08000b68 <_puts_r>:
 8000b68:	b570      	push	{r4, r5, r6, lr}
 8000b6a:	460e      	mov	r6, r1
 8000b6c:	4605      	mov	r5, r0
 8000b6e:	b118      	cbz	r0, 8000b78 <_puts_r+0x10>
 8000b70:	6983      	ldr	r3, [r0, #24]
 8000b72:	b90b      	cbnz	r3, 8000b78 <_puts_r+0x10>
 8000b74:	f7ff fe34 	bl	80007e0 <__sinit>
 8000b78:	69ab      	ldr	r3, [r5, #24]
 8000b7a:	68ac      	ldr	r4, [r5, #8]
 8000b7c:	b913      	cbnz	r3, 8000b84 <_puts_r+0x1c>
 8000b7e:	4628      	mov	r0, r5
 8000b80:	f7ff fe2e 	bl	80007e0 <__sinit>
 8000b84:	4b2c      	ldr	r3, [pc, #176]	; (8000c38 <_puts_r+0xd0>)
 8000b86:	429c      	cmp	r4, r3
 8000b88:	d120      	bne.n	8000bcc <_puts_r+0x64>
 8000b8a:	686c      	ldr	r4, [r5, #4]
 8000b8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b8e:	07db      	lsls	r3, r3, #31
 8000b90:	d405      	bmi.n	8000b9e <_puts_r+0x36>
 8000b92:	89a3      	ldrh	r3, [r4, #12]
 8000b94:	0598      	lsls	r0, r3, #22
 8000b96:	d402      	bmi.n	8000b9e <_puts_r+0x36>
 8000b98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b9a:	f7ff fee4 	bl	8000966 <__retarget_lock_acquire_recursive>
 8000b9e:	89a3      	ldrh	r3, [r4, #12]
 8000ba0:	0719      	lsls	r1, r3, #28
 8000ba2:	d51d      	bpl.n	8000be0 <_puts_r+0x78>
 8000ba4:	6923      	ldr	r3, [r4, #16]
 8000ba6:	b1db      	cbz	r3, 8000be0 <_puts_r+0x78>
 8000ba8:	3e01      	subs	r6, #1
 8000baa:	68a3      	ldr	r3, [r4, #8]
 8000bac:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000bb0:	3b01      	subs	r3, #1
 8000bb2:	60a3      	str	r3, [r4, #8]
 8000bb4:	bb39      	cbnz	r1, 8000c06 <_puts_r+0x9e>
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	da38      	bge.n	8000c2c <_puts_r+0xc4>
 8000bba:	4622      	mov	r2, r4
 8000bbc:	210a      	movs	r1, #10
 8000bbe:	4628      	mov	r0, r5
 8000bc0:	f000 f89c 	bl	8000cfc <__swbuf_r>
 8000bc4:	3001      	adds	r0, #1
 8000bc6:	d011      	beq.n	8000bec <_puts_r+0x84>
 8000bc8:	250a      	movs	r5, #10
 8000bca:	e011      	b.n	8000bf0 <_puts_r+0x88>
 8000bcc:	4b1b      	ldr	r3, [pc, #108]	; (8000c3c <_puts_r+0xd4>)
 8000bce:	429c      	cmp	r4, r3
 8000bd0:	d101      	bne.n	8000bd6 <_puts_r+0x6e>
 8000bd2:	68ac      	ldr	r4, [r5, #8]
 8000bd4:	e7da      	b.n	8000b8c <_puts_r+0x24>
 8000bd6:	4b1a      	ldr	r3, [pc, #104]	; (8000c40 <_puts_r+0xd8>)
 8000bd8:	429c      	cmp	r4, r3
 8000bda:	bf08      	it	eq
 8000bdc:	68ec      	ldreq	r4, [r5, #12]
 8000bde:	e7d5      	b.n	8000b8c <_puts_r+0x24>
 8000be0:	4621      	mov	r1, r4
 8000be2:	4628      	mov	r0, r5
 8000be4:	f000 f8ee 	bl	8000dc4 <__swsetup_r>
 8000be8:	2800      	cmp	r0, #0
 8000bea:	d0dd      	beq.n	8000ba8 <_puts_r+0x40>
 8000bec:	f04f 35ff 	mov.w	r5, #4294967295
 8000bf0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bf2:	07da      	lsls	r2, r3, #31
 8000bf4:	d405      	bmi.n	8000c02 <_puts_r+0x9a>
 8000bf6:	89a3      	ldrh	r3, [r4, #12]
 8000bf8:	059b      	lsls	r3, r3, #22
 8000bfa:	d402      	bmi.n	8000c02 <_puts_r+0x9a>
 8000bfc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bfe:	f7ff feb3 	bl	8000968 <__retarget_lock_release_recursive>
 8000c02:	4628      	mov	r0, r5
 8000c04:	bd70      	pop	{r4, r5, r6, pc}
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	da04      	bge.n	8000c14 <_puts_r+0xac>
 8000c0a:	69a2      	ldr	r2, [r4, #24]
 8000c0c:	429a      	cmp	r2, r3
 8000c0e:	dc06      	bgt.n	8000c1e <_puts_r+0xb6>
 8000c10:	290a      	cmp	r1, #10
 8000c12:	d004      	beq.n	8000c1e <_puts_r+0xb6>
 8000c14:	6823      	ldr	r3, [r4, #0]
 8000c16:	1c5a      	adds	r2, r3, #1
 8000c18:	6022      	str	r2, [r4, #0]
 8000c1a:	7019      	strb	r1, [r3, #0]
 8000c1c:	e7c5      	b.n	8000baa <_puts_r+0x42>
 8000c1e:	4622      	mov	r2, r4
 8000c20:	4628      	mov	r0, r5
 8000c22:	f000 f86b 	bl	8000cfc <__swbuf_r>
 8000c26:	3001      	adds	r0, #1
 8000c28:	d1bf      	bne.n	8000baa <_puts_r+0x42>
 8000c2a:	e7df      	b.n	8000bec <_puts_r+0x84>
 8000c2c:	6823      	ldr	r3, [r4, #0]
 8000c2e:	250a      	movs	r5, #10
 8000c30:	1c5a      	adds	r2, r3, #1
 8000c32:	6022      	str	r2, [r4, #0]
 8000c34:	701d      	strb	r5, [r3, #0]
 8000c36:	e7db      	b.n	8000bf0 <_puts_r+0x88>
 8000c38:	0800165c 	.word	0x0800165c
 8000c3c:	0800167c 	.word	0x0800167c
 8000c40:	0800163c 	.word	0x0800163c

08000c44 <puts>:
 8000c44:	4b02      	ldr	r3, [pc, #8]	; (8000c50 <puts+0xc>)
 8000c46:	4601      	mov	r1, r0
 8000c48:	6818      	ldr	r0, [r3, #0]
 8000c4a:	f7ff bf8d 	b.w	8000b68 <_puts_r>
 8000c4e:	bf00      	nop
 8000c50:	20000000 	.word	0x20000000

08000c54 <_sbrk_r>:
 8000c54:	b538      	push	{r3, r4, r5, lr}
 8000c56:	4d06      	ldr	r5, [pc, #24]	; (8000c70 <_sbrk_r+0x1c>)
 8000c58:	2300      	movs	r3, #0
 8000c5a:	4604      	mov	r4, r0
 8000c5c:	4608      	mov	r0, r1
 8000c5e:	602b      	str	r3, [r5, #0]
 8000c60:	f7ff fc30 	bl	80004c4 <_sbrk>
 8000c64:	1c43      	adds	r3, r0, #1
 8000c66:	d102      	bne.n	8000c6e <_sbrk_r+0x1a>
 8000c68:	682b      	ldr	r3, [r5, #0]
 8000c6a:	b103      	cbz	r3, 8000c6e <_sbrk_r+0x1a>
 8000c6c:	6023      	str	r3, [r4, #0]
 8000c6e:	bd38      	pop	{r3, r4, r5, pc}
 8000c70:	20000090 	.word	0x20000090

08000c74 <__sread>:
 8000c74:	b510      	push	{r4, lr}
 8000c76:	460c      	mov	r4, r1
 8000c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c7c:	f000 fc90 	bl	80015a0 <_read_r>
 8000c80:	2800      	cmp	r0, #0
 8000c82:	bfab      	itete	ge
 8000c84:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c86:	89a3      	ldrhlt	r3, [r4, #12]
 8000c88:	181b      	addge	r3, r3, r0
 8000c8a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c8e:	bfac      	ite	ge
 8000c90:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c92:	81a3      	strhlt	r3, [r4, #12]
 8000c94:	bd10      	pop	{r4, pc}

08000c96 <__swrite>:
 8000c96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c9a:	461f      	mov	r7, r3
 8000c9c:	898b      	ldrh	r3, [r1, #12]
 8000c9e:	05db      	lsls	r3, r3, #23
 8000ca0:	4605      	mov	r5, r0
 8000ca2:	460c      	mov	r4, r1
 8000ca4:	4616      	mov	r6, r2
 8000ca6:	d505      	bpl.n	8000cb4 <__swrite+0x1e>
 8000ca8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cac:	2302      	movs	r3, #2
 8000cae:	2200      	movs	r2, #0
 8000cb0:	f000 f906 	bl	8000ec0 <_lseek_r>
 8000cb4:	89a3      	ldrh	r3, [r4, #12]
 8000cb6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cbe:	81a3      	strh	r3, [r4, #12]
 8000cc0:	4632      	mov	r2, r6
 8000cc2:	463b      	mov	r3, r7
 8000cc4:	4628      	mov	r0, r5
 8000cc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cca:	f000 b869 	b.w	8000da0 <_write_r>

08000cce <__sseek>:
 8000cce:	b510      	push	{r4, lr}
 8000cd0:	460c      	mov	r4, r1
 8000cd2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cd6:	f000 f8f3 	bl	8000ec0 <_lseek_r>
 8000cda:	1c43      	adds	r3, r0, #1
 8000cdc:	89a3      	ldrh	r3, [r4, #12]
 8000cde:	bf15      	itete	ne
 8000ce0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ce2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ce6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cea:	81a3      	strheq	r3, [r4, #12]
 8000cec:	bf18      	it	ne
 8000cee:	81a3      	strhne	r3, [r4, #12]
 8000cf0:	bd10      	pop	{r4, pc}

08000cf2 <__sclose>:
 8000cf2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cf6:	f000 b8d3 	b.w	8000ea0 <_close_r>
	...

08000cfc <__swbuf_r>:
 8000cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cfe:	460e      	mov	r6, r1
 8000d00:	4614      	mov	r4, r2
 8000d02:	4605      	mov	r5, r0
 8000d04:	b118      	cbz	r0, 8000d0e <__swbuf_r+0x12>
 8000d06:	6983      	ldr	r3, [r0, #24]
 8000d08:	b90b      	cbnz	r3, 8000d0e <__swbuf_r+0x12>
 8000d0a:	f7ff fd69 	bl	80007e0 <__sinit>
 8000d0e:	4b21      	ldr	r3, [pc, #132]	; (8000d94 <__swbuf_r+0x98>)
 8000d10:	429c      	cmp	r4, r3
 8000d12:	d12b      	bne.n	8000d6c <__swbuf_r+0x70>
 8000d14:	686c      	ldr	r4, [r5, #4]
 8000d16:	69a3      	ldr	r3, [r4, #24]
 8000d18:	60a3      	str	r3, [r4, #8]
 8000d1a:	89a3      	ldrh	r3, [r4, #12]
 8000d1c:	071a      	lsls	r2, r3, #28
 8000d1e:	d52f      	bpl.n	8000d80 <__swbuf_r+0x84>
 8000d20:	6923      	ldr	r3, [r4, #16]
 8000d22:	b36b      	cbz	r3, 8000d80 <__swbuf_r+0x84>
 8000d24:	6923      	ldr	r3, [r4, #16]
 8000d26:	6820      	ldr	r0, [r4, #0]
 8000d28:	1ac0      	subs	r0, r0, r3
 8000d2a:	6963      	ldr	r3, [r4, #20]
 8000d2c:	b2f6      	uxtb	r6, r6
 8000d2e:	4283      	cmp	r3, r0
 8000d30:	4637      	mov	r7, r6
 8000d32:	dc04      	bgt.n	8000d3e <__swbuf_r+0x42>
 8000d34:	4621      	mov	r1, r4
 8000d36:	4628      	mov	r0, r5
 8000d38:	f7ff fcac 	bl	8000694 <_fflush_r>
 8000d3c:	bb30      	cbnz	r0, 8000d8c <__swbuf_r+0x90>
 8000d3e:	68a3      	ldr	r3, [r4, #8]
 8000d40:	3b01      	subs	r3, #1
 8000d42:	60a3      	str	r3, [r4, #8]
 8000d44:	6823      	ldr	r3, [r4, #0]
 8000d46:	1c5a      	adds	r2, r3, #1
 8000d48:	6022      	str	r2, [r4, #0]
 8000d4a:	701e      	strb	r6, [r3, #0]
 8000d4c:	6963      	ldr	r3, [r4, #20]
 8000d4e:	3001      	adds	r0, #1
 8000d50:	4283      	cmp	r3, r0
 8000d52:	d004      	beq.n	8000d5e <__swbuf_r+0x62>
 8000d54:	89a3      	ldrh	r3, [r4, #12]
 8000d56:	07db      	lsls	r3, r3, #31
 8000d58:	d506      	bpl.n	8000d68 <__swbuf_r+0x6c>
 8000d5a:	2e0a      	cmp	r6, #10
 8000d5c:	d104      	bne.n	8000d68 <__swbuf_r+0x6c>
 8000d5e:	4621      	mov	r1, r4
 8000d60:	4628      	mov	r0, r5
 8000d62:	f7ff fc97 	bl	8000694 <_fflush_r>
 8000d66:	b988      	cbnz	r0, 8000d8c <__swbuf_r+0x90>
 8000d68:	4638      	mov	r0, r7
 8000d6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d6c:	4b0a      	ldr	r3, [pc, #40]	; (8000d98 <__swbuf_r+0x9c>)
 8000d6e:	429c      	cmp	r4, r3
 8000d70:	d101      	bne.n	8000d76 <__swbuf_r+0x7a>
 8000d72:	68ac      	ldr	r4, [r5, #8]
 8000d74:	e7cf      	b.n	8000d16 <__swbuf_r+0x1a>
 8000d76:	4b09      	ldr	r3, [pc, #36]	; (8000d9c <__swbuf_r+0xa0>)
 8000d78:	429c      	cmp	r4, r3
 8000d7a:	bf08      	it	eq
 8000d7c:	68ec      	ldreq	r4, [r5, #12]
 8000d7e:	e7ca      	b.n	8000d16 <__swbuf_r+0x1a>
 8000d80:	4621      	mov	r1, r4
 8000d82:	4628      	mov	r0, r5
 8000d84:	f000 f81e 	bl	8000dc4 <__swsetup_r>
 8000d88:	2800      	cmp	r0, #0
 8000d8a:	d0cb      	beq.n	8000d24 <__swbuf_r+0x28>
 8000d8c:	f04f 37ff 	mov.w	r7, #4294967295
 8000d90:	e7ea      	b.n	8000d68 <__swbuf_r+0x6c>
 8000d92:	bf00      	nop
 8000d94:	0800165c 	.word	0x0800165c
 8000d98:	0800167c 	.word	0x0800167c
 8000d9c:	0800163c 	.word	0x0800163c

08000da0 <_write_r>:
 8000da0:	b538      	push	{r3, r4, r5, lr}
 8000da2:	4d07      	ldr	r5, [pc, #28]	; (8000dc0 <_write_r+0x20>)
 8000da4:	4604      	mov	r4, r0
 8000da6:	4608      	mov	r0, r1
 8000da8:	4611      	mov	r1, r2
 8000daa:	2200      	movs	r2, #0
 8000dac:	602a      	str	r2, [r5, #0]
 8000dae:	461a      	mov	r2, r3
 8000db0:	f7ff fb3b 	bl	800042a <_write>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	d102      	bne.n	8000dbe <_write_r+0x1e>
 8000db8:	682b      	ldr	r3, [r5, #0]
 8000dba:	b103      	cbz	r3, 8000dbe <_write_r+0x1e>
 8000dbc:	6023      	str	r3, [r4, #0]
 8000dbe:	bd38      	pop	{r3, r4, r5, pc}
 8000dc0:	20000090 	.word	0x20000090

08000dc4 <__swsetup_r>:
 8000dc4:	4b32      	ldr	r3, [pc, #200]	; (8000e90 <__swsetup_r+0xcc>)
 8000dc6:	b570      	push	{r4, r5, r6, lr}
 8000dc8:	681d      	ldr	r5, [r3, #0]
 8000dca:	4606      	mov	r6, r0
 8000dcc:	460c      	mov	r4, r1
 8000dce:	b125      	cbz	r5, 8000dda <__swsetup_r+0x16>
 8000dd0:	69ab      	ldr	r3, [r5, #24]
 8000dd2:	b913      	cbnz	r3, 8000dda <__swsetup_r+0x16>
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f7ff fd03 	bl	80007e0 <__sinit>
 8000dda:	4b2e      	ldr	r3, [pc, #184]	; (8000e94 <__swsetup_r+0xd0>)
 8000ddc:	429c      	cmp	r4, r3
 8000dde:	d10f      	bne.n	8000e00 <__swsetup_r+0x3c>
 8000de0:	686c      	ldr	r4, [r5, #4]
 8000de2:	89a3      	ldrh	r3, [r4, #12]
 8000de4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000de8:	0719      	lsls	r1, r3, #28
 8000dea:	d42c      	bmi.n	8000e46 <__swsetup_r+0x82>
 8000dec:	06dd      	lsls	r5, r3, #27
 8000dee:	d411      	bmi.n	8000e14 <__swsetup_r+0x50>
 8000df0:	2309      	movs	r3, #9
 8000df2:	6033      	str	r3, [r6, #0]
 8000df4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000df8:	81a3      	strh	r3, [r4, #12]
 8000dfa:	f04f 30ff 	mov.w	r0, #4294967295
 8000dfe:	e03e      	b.n	8000e7e <__swsetup_r+0xba>
 8000e00:	4b25      	ldr	r3, [pc, #148]	; (8000e98 <__swsetup_r+0xd4>)
 8000e02:	429c      	cmp	r4, r3
 8000e04:	d101      	bne.n	8000e0a <__swsetup_r+0x46>
 8000e06:	68ac      	ldr	r4, [r5, #8]
 8000e08:	e7eb      	b.n	8000de2 <__swsetup_r+0x1e>
 8000e0a:	4b24      	ldr	r3, [pc, #144]	; (8000e9c <__swsetup_r+0xd8>)
 8000e0c:	429c      	cmp	r4, r3
 8000e0e:	bf08      	it	eq
 8000e10:	68ec      	ldreq	r4, [r5, #12]
 8000e12:	e7e6      	b.n	8000de2 <__swsetup_r+0x1e>
 8000e14:	0758      	lsls	r0, r3, #29
 8000e16:	d512      	bpl.n	8000e3e <__swsetup_r+0x7a>
 8000e18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e1a:	b141      	cbz	r1, 8000e2e <__swsetup_r+0x6a>
 8000e1c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e20:	4299      	cmp	r1, r3
 8000e22:	d002      	beq.n	8000e2a <__swsetup_r+0x66>
 8000e24:	4630      	mov	r0, r6
 8000e26:	f7ff fda9 	bl	800097c <_free_r>
 8000e2a:	2300      	movs	r3, #0
 8000e2c:	6363      	str	r3, [r4, #52]	; 0x34
 8000e2e:	89a3      	ldrh	r3, [r4, #12]
 8000e30:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000e34:	81a3      	strh	r3, [r4, #12]
 8000e36:	2300      	movs	r3, #0
 8000e38:	6063      	str	r3, [r4, #4]
 8000e3a:	6923      	ldr	r3, [r4, #16]
 8000e3c:	6023      	str	r3, [r4, #0]
 8000e3e:	89a3      	ldrh	r3, [r4, #12]
 8000e40:	f043 0308 	orr.w	r3, r3, #8
 8000e44:	81a3      	strh	r3, [r4, #12]
 8000e46:	6923      	ldr	r3, [r4, #16]
 8000e48:	b94b      	cbnz	r3, 8000e5e <__swsetup_r+0x9a>
 8000e4a:	89a3      	ldrh	r3, [r4, #12]
 8000e4c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000e50:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000e54:	d003      	beq.n	8000e5e <__swsetup_r+0x9a>
 8000e56:	4621      	mov	r1, r4
 8000e58:	4630      	mov	r0, r6
 8000e5a:	f000 f869 	bl	8000f30 <__smakebuf_r>
 8000e5e:	89a0      	ldrh	r0, [r4, #12]
 8000e60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e64:	f010 0301 	ands.w	r3, r0, #1
 8000e68:	d00a      	beq.n	8000e80 <__swsetup_r+0xbc>
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	60a3      	str	r3, [r4, #8]
 8000e6e:	6963      	ldr	r3, [r4, #20]
 8000e70:	425b      	negs	r3, r3
 8000e72:	61a3      	str	r3, [r4, #24]
 8000e74:	6923      	ldr	r3, [r4, #16]
 8000e76:	b943      	cbnz	r3, 8000e8a <__swsetup_r+0xc6>
 8000e78:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e7c:	d1ba      	bne.n	8000df4 <__swsetup_r+0x30>
 8000e7e:	bd70      	pop	{r4, r5, r6, pc}
 8000e80:	0781      	lsls	r1, r0, #30
 8000e82:	bf58      	it	pl
 8000e84:	6963      	ldrpl	r3, [r4, #20]
 8000e86:	60a3      	str	r3, [r4, #8]
 8000e88:	e7f4      	b.n	8000e74 <__swsetup_r+0xb0>
 8000e8a:	2000      	movs	r0, #0
 8000e8c:	e7f7      	b.n	8000e7e <__swsetup_r+0xba>
 8000e8e:	bf00      	nop
 8000e90:	20000000 	.word	0x20000000
 8000e94:	0800165c 	.word	0x0800165c
 8000e98:	0800167c 	.word	0x0800167c
 8000e9c:	0800163c 	.word	0x0800163c

08000ea0 <_close_r>:
 8000ea0:	b538      	push	{r3, r4, r5, lr}
 8000ea2:	4d06      	ldr	r5, [pc, #24]	; (8000ebc <_close_r+0x1c>)
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	4604      	mov	r4, r0
 8000ea8:	4608      	mov	r0, r1
 8000eaa:	602b      	str	r3, [r5, #0]
 8000eac:	f7ff fad9 	bl	8000462 <_close>
 8000eb0:	1c43      	adds	r3, r0, #1
 8000eb2:	d102      	bne.n	8000eba <_close_r+0x1a>
 8000eb4:	682b      	ldr	r3, [r5, #0]
 8000eb6:	b103      	cbz	r3, 8000eba <_close_r+0x1a>
 8000eb8:	6023      	str	r3, [r4, #0]
 8000eba:	bd38      	pop	{r3, r4, r5, pc}
 8000ebc:	20000090 	.word	0x20000090

08000ec0 <_lseek_r>:
 8000ec0:	b538      	push	{r3, r4, r5, lr}
 8000ec2:	4d07      	ldr	r5, [pc, #28]	; (8000ee0 <_lseek_r+0x20>)
 8000ec4:	4604      	mov	r4, r0
 8000ec6:	4608      	mov	r0, r1
 8000ec8:	4611      	mov	r1, r2
 8000eca:	2200      	movs	r2, #0
 8000ecc:	602a      	str	r2, [r5, #0]
 8000ece:	461a      	mov	r2, r3
 8000ed0:	f7ff faeb 	bl	80004aa <_lseek>
 8000ed4:	1c43      	adds	r3, r0, #1
 8000ed6:	d102      	bne.n	8000ede <_lseek_r+0x1e>
 8000ed8:	682b      	ldr	r3, [r5, #0]
 8000eda:	b103      	cbz	r3, 8000ede <_lseek_r+0x1e>
 8000edc:	6023      	str	r3, [r4, #0]
 8000ede:	bd38      	pop	{r3, r4, r5, pc}
 8000ee0:	20000090 	.word	0x20000090

08000ee4 <__swhatbuf_r>:
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460e      	mov	r6, r1
 8000ee8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eec:	2900      	cmp	r1, #0
 8000eee:	b096      	sub	sp, #88	; 0x58
 8000ef0:	4614      	mov	r4, r2
 8000ef2:	461d      	mov	r5, r3
 8000ef4:	da08      	bge.n	8000f08 <__swhatbuf_r+0x24>
 8000ef6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000efa:	2200      	movs	r2, #0
 8000efc:	602a      	str	r2, [r5, #0]
 8000efe:	061a      	lsls	r2, r3, #24
 8000f00:	d410      	bmi.n	8000f24 <__swhatbuf_r+0x40>
 8000f02:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f06:	e00e      	b.n	8000f26 <__swhatbuf_r+0x42>
 8000f08:	466a      	mov	r2, sp
 8000f0a:	f000 fb5b 	bl	80015c4 <_fstat_r>
 8000f0e:	2800      	cmp	r0, #0
 8000f10:	dbf1      	blt.n	8000ef6 <__swhatbuf_r+0x12>
 8000f12:	9a01      	ldr	r2, [sp, #4]
 8000f14:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000f18:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000f1c:	425a      	negs	r2, r3
 8000f1e:	415a      	adcs	r2, r3
 8000f20:	602a      	str	r2, [r5, #0]
 8000f22:	e7ee      	b.n	8000f02 <__swhatbuf_r+0x1e>
 8000f24:	2340      	movs	r3, #64	; 0x40
 8000f26:	2000      	movs	r0, #0
 8000f28:	6023      	str	r3, [r4, #0]
 8000f2a:	b016      	add	sp, #88	; 0x58
 8000f2c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000f30 <__smakebuf_r>:
 8000f30:	898b      	ldrh	r3, [r1, #12]
 8000f32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000f34:	079d      	lsls	r5, r3, #30
 8000f36:	4606      	mov	r6, r0
 8000f38:	460c      	mov	r4, r1
 8000f3a:	d507      	bpl.n	8000f4c <__smakebuf_r+0x1c>
 8000f3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000f40:	6023      	str	r3, [r4, #0]
 8000f42:	6123      	str	r3, [r4, #16]
 8000f44:	2301      	movs	r3, #1
 8000f46:	6163      	str	r3, [r4, #20]
 8000f48:	b002      	add	sp, #8
 8000f4a:	bd70      	pop	{r4, r5, r6, pc}
 8000f4c:	ab01      	add	r3, sp, #4
 8000f4e:	466a      	mov	r2, sp
 8000f50:	f7ff ffc8 	bl	8000ee4 <__swhatbuf_r>
 8000f54:	9900      	ldr	r1, [sp, #0]
 8000f56:	4605      	mov	r5, r0
 8000f58:	4630      	mov	r0, r6
 8000f5a:	f7ff fd79 	bl	8000a50 <_malloc_r>
 8000f5e:	b948      	cbnz	r0, 8000f74 <__smakebuf_r+0x44>
 8000f60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f64:	059a      	lsls	r2, r3, #22
 8000f66:	d4ef      	bmi.n	8000f48 <__smakebuf_r+0x18>
 8000f68:	f023 0303 	bic.w	r3, r3, #3
 8000f6c:	f043 0302 	orr.w	r3, r3, #2
 8000f70:	81a3      	strh	r3, [r4, #12]
 8000f72:	e7e3      	b.n	8000f3c <__smakebuf_r+0xc>
 8000f74:	4b0d      	ldr	r3, [pc, #52]	; (8000fac <__smakebuf_r+0x7c>)
 8000f76:	62b3      	str	r3, [r6, #40]	; 0x28
 8000f78:	89a3      	ldrh	r3, [r4, #12]
 8000f7a:	6020      	str	r0, [r4, #0]
 8000f7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f80:	81a3      	strh	r3, [r4, #12]
 8000f82:	9b00      	ldr	r3, [sp, #0]
 8000f84:	6163      	str	r3, [r4, #20]
 8000f86:	9b01      	ldr	r3, [sp, #4]
 8000f88:	6120      	str	r0, [r4, #16]
 8000f8a:	b15b      	cbz	r3, 8000fa4 <__smakebuf_r+0x74>
 8000f8c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f90:	4630      	mov	r0, r6
 8000f92:	f000 fb29 	bl	80015e8 <_isatty_r>
 8000f96:	b128      	cbz	r0, 8000fa4 <__smakebuf_r+0x74>
 8000f98:	89a3      	ldrh	r3, [r4, #12]
 8000f9a:	f023 0303 	bic.w	r3, r3, #3
 8000f9e:	f043 0301 	orr.w	r3, r3, #1
 8000fa2:	81a3      	strh	r3, [r4, #12]
 8000fa4:	89a0      	ldrh	r0, [r4, #12]
 8000fa6:	4305      	orrs	r5, r0
 8000fa8:	81a5      	strh	r5, [r4, #12]
 8000faa:	e7cd      	b.n	8000f48 <__smakebuf_r+0x18>
 8000fac:	08000779 	.word	0x08000779

08000fb0 <__malloc_lock>:
 8000fb0:	4801      	ldr	r0, [pc, #4]	; (8000fb8 <__malloc_lock+0x8>)
 8000fb2:	f7ff bcd8 	b.w	8000966 <__retarget_lock_acquire_recursive>
 8000fb6:	bf00      	nop
 8000fb8:	20000084 	.word	0x20000084

08000fbc <__malloc_unlock>:
 8000fbc:	4801      	ldr	r0, [pc, #4]	; (8000fc4 <__malloc_unlock+0x8>)
 8000fbe:	f7ff bcd3 	b.w	8000968 <__retarget_lock_release_recursive>
 8000fc2:	bf00      	nop
 8000fc4:	20000084 	.word	0x20000084

08000fc8 <__sfputc_r>:
 8000fc8:	6893      	ldr	r3, [r2, #8]
 8000fca:	3b01      	subs	r3, #1
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	b410      	push	{r4}
 8000fd0:	6093      	str	r3, [r2, #8]
 8000fd2:	da07      	bge.n	8000fe4 <__sfputc_r+0x1c>
 8000fd4:	6994      	ldr	r4, [r2, #24]
 8000fd6:	42a3      	cmp	r3, r4
 8000fd8:	db01      	blt.n	8000fde <__sfputc_r+0x16>
 8000fda:	290a      	cmp	r1, #10
 8000fdc:	d102      	bne.n	8000fe4 <__sfputc_r+0x1c>
 8000fde:	bc10      	pop	{r4}
 8000fe0:	f7ff be8c 	b.w	8000cfc <__swbuf_r>
 8000fe4:	6813      	ldr	r3, [r2, #0]
 8000fe6:	1c58      	adds	r0, r3, #1
 8000fe8:	6010      	str	r0, [r2, #0]
 8000fea:	7019      	strb	r1, [r3, #0]
 8000fec:	4608      	mov	r0, r1
 8000fee:	bc10      	pop	{r4}
 8000ff0:	4770      	bx	lr

08000ff2 <__sfputs_r>:
 8000ff2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ff4:	4606      	mov	r6, r0
 8000ff6:	460f      	mov	r7, r1
 8000ff8:	4614      	mov	r4, r2
 8000ffa:	18d5      	adds	r5, r2, r3
 8000ffc:	42ac      	cmp	r4, r5
 8000ffe:	d101      	bne.n	8001004 <__sfputs_r+0x12>
 8001000:	2000      	movs	r0, #0
 8001002:	e007      	b.n	8001014 <__sfputs_r+0x22>
 8001004:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001008:	463a      	mov	r2, r7
 800100a:	4630      	mov	r0, r6
 800100c:	f7ff ffdc 	bl	8000fc8 <__sfputc_r>
 8001010:	1c43      	adds	r3, r0, #1
 8001012:	d1f3      	bne.n	8000ffc <__sfputs_r+0xa>
 8001014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001018 <_vfiprintf_r>:
 8001018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800101c:	460d      	mov	r5, r1
 800101e:	b09d      	sub	sp, #116	; 0x74
 8001020:	4614      	mov	r4, r2
 8001022:	4698      	mov	r8, r3
 8001024:	4606      	mov	r6, r0
 8001026:	b118      	cbz	r0, 8001030 <_vfiprintf_r+0x18>
 8001028:	6983      	ldr	r3, [r0, #24]
 800102a:	b90b      	cbnz	r3, 8001030 <_vfiprintf_r+0x18>
 800102c:	f7ff fbd8 	bl	80007e0 <__sinit>
 8001030:	4b89      	ldr	r3, [pc, #548]	; (8001258 <_vfiprintf_r+0x240>)
 8001032:	429d      	cmp	r5, r3
 8001034:	d11b      	bne.n	800106e <_vfiprintf_r+0x56>
 8001036:	6875      	ldr	r5, [r6, #4]
 8001038:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800103a:	07d9      	lsls	r1, r3, #31
 800103c:	d405      	bmi.n	800104a <_vfiprintf_r+0x32>
 800103e:	89ab      	ldrh	r3, [r5, #12]
 8001040:	059a      	lsls	r2, r3, #22
 8001042:	d402      	bmi.n	800104a <_vfiprintf_r+0x32>
 8001044:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001046:	f7ff fc8e 	bl	8000966 <__retarget_lock_acquire_recursive>
 800104a:	89ab      	ldrh	r3, [r5, #12]
 800104c:	071b      	lsls	r3, r3, #28
 800104e:	d501      	bpl.n	8001054 <_vfiprintf_r+0x3c>
 8001050:	692b      	ldr	r3, [r5, #16]
 8001052:	b9eb      	cbnz	r3, 8001090 <_vfiprintf_r+0x78>
 8001054:	4629      	mov	r1, r5
 8001056:	4630      	mov	r0, r6
 8001058:	f7ff feb4 	bl	8000dc4 <__swsetup_r>
 800105c:	b1c0      	cbz	r0, 8001090 <_vfiprintf_r+0x78>
 800105e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001060:	07dc      	lsls	r4, r3, #31
 8001062:	d50e      	bpl.n	8001082 <_vfiprintf_r+0x6a>
 8001064:	f04f 30ff 	mov.w	r0, #4294967295
 8001068:	b01d      	add	sp, #116	; 0x74
 800106a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800106e:	4b7b      	ldr	r3, [pc, #492]	; (800125c <_vfiprintf_r+0x244>)
 8001070:	429d      	cmp	r5, r3
 8001072:	d101      	bne.n	8001078 <_vfiprintf_r+0x60>
 8001074:	68b5      	ldr	r5, [r6, #8]
 8001076:	e7df      	b.n	8001038 <_vfiprintf_r+0x20>
 8001078:	4b79      	ldr	r3, [pc, #484]	; (8001260 <_vfiprintf_r+0x248>)
 800107a:	429d      	cmp	r5, r3
 800107c:	bf08      	it	eq
 800107e:	68f5      	ldreq	r5, [r6, #12]
 8001080:	e7da      	b.n	8001038 <_vfiprintf_r+0x20>
 8001082:	89ab      	ldrh	r3, [r5, #12]
 8001084:	0598      	lsls	r0, r3, #22
 8001086:	d4ed      	bmi.n	8001064 <_vfiprintf_r+0x4c>
 8001088:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800108a:	f7ff fc6d 	bl	8000968 <__retarget_lock_release_recursive>
 800108e:	e7e9      	b.n	8001064 <_vfiprintf_r+0x4c>
 8001090:	2300      	movs	r3, #0
 8001092:	9309      	str	r3, [sp, #36]	; 0x24
 8001094:	2320      	movs	r3, #32
 8001096:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800109a:	f8cd 800c 	str.w	r8, [sp, #12]
 800109e:	2330      	movs	r3, #48	; 0x30
 80010a0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001264 <_vfiprintf_r+0x24c>
 80010a4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80010a8:	f04f 0901 	mov.w	r9, #1
 80010ac:	4623      	mov	r3, r4
 80010ae:	469a      	mov	sl, r3
 80010b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80010b4:	b10a      	cbz	r2, 80010ba <_vfiprintf_r+0xa2>
 80010b6:	2a25      	cmp	r2, #37	; 0x25
 80010b8:	d1f9      	bne.n	80010ae <_vfiprintf_r+0x96>
 80010ba:	ebba 0b04 	subs.w	fp, sl, r4
 80010be:	d00b      	beq.n	80010d8 <_vfiprintf_r+0xc0>
 80010c0:	465b      	mov	r3, fp
 80010c2:	4622      	mov	r2, r4
 80010c4:	4629      	mov	r1, r5
 80010c6:	4630      	mov	r0, r6
 80010c8:	f7ff ff93 	bl	8000ff2 <__sfputs_r>
 80010cc:	3001      	adds	r0, #1
 80010ce:	f000 80aa 	beq.w	8001226 <_vfiprintf_r+0x20e>
 80010d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80010d4:	445a      	add	r2, fp
 80010d6:	9209      	str	r2, [sp, #36]	; 0x24
 80010d8:	f89a 3000 	ldrb.w	r3, [sl]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	f000 80a2 	beq.w	8001226 <_vfiprintf_r+0x20e>
 80010e2:	2300      	movs	r3, #0
 80010e4:	f04f 32ff 	mov.w	r2, #4294967295
 80010e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80010ec:	f10a 0a01 	add.w	sl, sl, #1
 80010f0:	9304      	str	r3, [sp, #16]
 80010f2:	9307      	str	r3, [sp, #28]
 80010f4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80010f8:	931a      	str	r3, [sp, #104]	; 0x68
 80010fa:	4654      	mov	r4, sl
 80010fc:	2205      	movs	r2, #5
 80010fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001102:	4858      	ldr	r0, [pc, #352]	; (8001264 <_vfiprintf_r+0x24c>)
 8001104:	f7ff f884 	bl	8000210 <memchr>
 8001108:	9a04      	ldr	r2, [sp, #16]
 800110a:	b9d8      	cbnz	r0, 8001144 <_vfiprintf_r+0x12c>
 800110c:	06d1      	lsls	r1, r2, #27
 800110e:	bf44      	itt	mi
 8001110:	2320      	movmi	r3, #32
 8001112:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001116:	0713      	lsls	r3, r2, #28
 8001118:	bf44      	itt	mi
 800111a:	232b      	movmi	r3, #43	; 0x2b
 800111c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001120:	f89a 3000 	ldrb.w	r3, [sl]
 8001124:	2b2a      	cmp	r3, #42	; 0x2a
 8001126:	d015      	beq.n	8001154 <_vfiprintf_r+0x13c>
 8001128:	9a07      	ldr	r2, [sp, #28]
 800112a:	4654      	mov	r4, sl
 800112c:	2000      	movs	r0, #0
 800112e:	f04f 0c0a 	mov.w	ip, #10
 8001132:	4621      	mov	r1, r4
 8001134:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001138:	3b30      	subs	r3, #48	; 0x30
 800113a:	2b09      	cmp	r3, #9
 800113c:	d94e      	bls.n	80011dc <_vfiprintf_r+0x1c4>
 800113e:	b1b0      	cbz	r0, 800116e <_vfiprintf_r+0x156>
 8001140:	9207      	str	r2, [sp, #28]
 8001142:	e014      	b.n	800116e <_vfiprintf_r+0x156>
 8001144:	eba0 0308 	sub.w	r3, r0, r8
 8001148:	fa09 f303 	lsl.w	r3, r9, r3
 800114c:	4313      	orrs	r3, r2
 800114e:	9304      	str	r3, [sp, #16]
 8001150:	46a2      	mov	sl, r4
 8001152:	e7d2      	b.n	80010fa <_vfiprintf_r+0xe2>
 8001154:	9b03      	ldr	r3, [sp, #12]
 8001156:	1d19      	adds	r1, r3, #4
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	9103      	str	r1, [sp, #12]
 800115c:	2b00      	cmp	r3, #0
 800115e:	bfbb      	ittet	lt
 8001160:	425b      	neglt	r3, r3
 8001162:	f042 0202 	orrlt.w	r2, r2, #2
 8001166:	9307      	strge	r3, [sp, #28]
 8001168:	9307      	strlt	r3, [sp, #28]
 800116a:	bfb8      	it	lt
 800116c:	9204      	strlt	r2, [sp, #16]
 800116e:	7823      	ldrb	r3, [r4, #0]
 8001170:	2b2e      	cmp	r3, #46	; 0x2e
 8001172:	d10c      	bne.n	800118e <_vfiprintf_r+0x176>
 8001174:	7863      	ldrb	r3, [r4, #1]
 8001176:	2b2a      	cmp	r3, #42	; 0x2a
 8001178:	d135      	bne.n	80011e6 <_vfiprintf_r+0x1ce>
 800117a:	9b03      	ldr	r3, [sp, #12]
 800117c:	1d1a      	adds	r2, r3, #4
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	9203      	str	r2, [sp, #12]
 8001182:	2b00      	cmp	r3, #0
 8001184:	bfb8      	it	lt
 8001186:	f04f 33ff 	movlt.w	r3, #4294967295
 800118a:	3402      	adds	r4, #2
 800118c:	9305      	str	r3, [sp, #20]
 800118e:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8001268 <_vfiprintf_r+0x250>
 8001192:	7821      	ldrb	r1, [r4, #0]
 8001194:	2203      	movs	r2, #3
 8001196:	4650      	mov	r0, sl
 8001198:	f7ff f83a 	bl	8000210 <memchr>
 800119c:	b140      	cbz	r0, 80011b0 <_vfiprintf_r+0x198>
 800119e:	2340      	movs	r3, #64	; 0x40
 80011a0:	eba0 000a 	sub.w	r0, r0, sl
 80011a4:	fa03 f000 	lsl.w	r0, r3, r0
 80011a8:	9b04      	ldr	r3, [sp, #16]
 80011aa:	4303      	orrs	r3, r0
 80011ac:	3401      	adds	r4, #1
 80011ae:	9304      	str	r3, [sp, #16]
 80011b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80011b4:	482d      	ldr	r0, [pc, #180]	; (800126c <_vfiprintf_r+0x254>)
 80011b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80011ba:	2206      	movs	r2, #6
 80011bc:	f7ff f828 	bl	8000210 <memchr>
 80011c0:	2800      	cmp	r0, #0
 80011c2:	d03f      	beq.n	8001244 <_vfiprintf_r+0x22c>
 80011c4:	4b2a      	ldr	r3, [pc, #168]	; (8001270 <_vfiprintf_r+0x258>)
 80011c6:	bb1b      	cbnz	r3, 8001210 <_vfiprintf_r+0x1f8>
 80011c8:	9b03      	ldr	r3, [sp, #12]
 80011ca:	3307      	adds	r3, #7
 80011cc:	f023 0307 	bic.w	r3, r3, #7
 80011d0:	3308      	adds	r3, #8
 80011d2:	9303      	str	r3, [sp, #12]
 80011d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80011d6:	443b      	add	r3, r7
 80011d8:	9309      	str	r3, [sp, #36]	; 0x24
 80011da:	e767      	b.n	80010ac <_vfiprintf_r+0x94>
 80011dc:	fb0c 3202 	mla	r2, ip, r2, r3
 80011e0:	460c      	mov	r4, r1
 80011e2:	2001      	movs	r0, #1
 80011e4:	e7a5      	b.n	8001132 <_vfiprintf_r+0x11a>
 80011e6:	2300      	movs	r3, #0
 80011e8:	3401      	adds	r4, #1
 80011ea:	9305      	str	r3, [sp, #20]
 80011ec:	4619      	mov	r1, r3
 80011ee:	f04f 0c0a 	mov.w	ip, #10
 80011f2:	4620      	mov	r0, r4
 80011f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80011f8:	3a30      	subs	r2, #48	; 0x30
 80011fa:	2a09      	cmp	r2, #9
 80011fc:	d903      	bls.n	8001206 <_vfiprintf_r+0x1ee>
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d0c5      	beq.n	800118e <_vfiprintf_r+0x176>
 8001202:	9105      	str	r1, [sp, #20]
 8001204:	e7c3      	b.n	800118e <_vfiprintf_r+0x176>
 8001206:	fb0c 2101 	mla	r1, ip, r1, r2
 800120a:	4604      	mov	r4, r0
 800120c:	2301      	movs	r3, #1
 800120e:	e7f0      	b.n	80011f2 <_vfiprintf_r+0x1da>
 8001210:	ab03      	add	r3, sp, #12
 8001212:	9300      	str	r3, [sp, #0]
 8001214:	462a      	mov	r2, r5
 8001216:	4b17      	ldr	r3, [pc, #92]	; (8001274 <_vfiprintf_r+0x25c>)
 8001218:	a904      	add	r1, sp, #16
 800121a:	4630      	mov	r0, r6
 800121c:	f3af 8000 	nop.w
 8001220:	4607      	mov	r7, r0
 8001222:	1c78      	adds	r0, r7, #1
 8001224:	d1d6      	bne.n	80011d4 <_vfiprintf_r+0x1bc>
 8001226:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001228:	07d9      	lsls	r1, r3, #31
 800122a:	d405      	bmi.n	8001238 <_vfiprintf_r+0x220>
 800122c:	89ab      	ldrh	r3, [r5, #12]
 800122e:	059a      	lsls	r2, r3, #22
 8001230:	d402      	bmi.n	8001238 <_vfiprintf_r+0x220>
 8001232:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001234:	f7ff fb98 	bl	8000968 <__retarget_lock_release_recursive>
 8001238:	89ab      	ldrh	r3, [r5, #12]
 800123a:	065b      	lsls	r3, r3, #25
 800123c:	f53f af12 	bmi.w	8001064 <_vfiprintf_r+0x4c>
 8001240:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001242:	e711      	b.n	8001068 <_vfiprintf_r+0x50>
 8001244:	ab03      	add	r3, sp, #12
 8001246:	9300      	str	r3, [sp, #0]
 8001248:	462a      	mov	r2, r5
 800124a:	4b0a      	ldr	r3, [pc, #40]	; (8001274 <_vfiprintf_r+0x25c>)
 800124c:	a904      	add	r1, sp, #16
 800124e:	4630      	mov	r0, r6
 8001250:	f000 f880 	bl	8001354 <_printf_i>
 8001254:	e7e4      	b.n	8001220 <_vfiprintf_r+0x208>
 8001256:	bf00      	nop
 8001258:	0800165c 	.word	0x0800165c
 800125c:	0800167c 	.word	0x0800167c
 8001260:	0800163c 	.word	0x0800163c
 8001264:	080016a0 	.word	0x080016a0
 8001268:	080016a6 	.word	0x080016a6
 800126c:	080016aa 	.word	0x080016aa
 8001270:	00000000 	.word	0x00000000
 8001274:	08000ff3 	.word	0x08000ff3

08001278 <_printf_common>:
 8001278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800127c:	4616      	mov	r6, r2
 800127e:	4699      	mov	r9, r3
 8001280:	688a      	ldr	r2, [r1, #8]
 8001282:	690b      	ldr	r3, [r1, #16]
 8001284:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001288:	4293      	cmp	r3, r2
 800128a:	bfb8      	it	lt
 800128c:	4613      	movlt	r3, r2
 800128e:	6033      	str	r3, [r6, #0]
 8001290:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001294:	4607      	mov	r7, r0
 8001296:	460c      	mov	r4, r1
 8001298:	b10a      	cbz	r2, 800129e <_printf_common+0x26>
 800129a:	3301      	adds	r3, #1
 800129c:	6033      	str	r3, [r6, #0]
 800129e:	6823      	ldr	r3, [r4, #0]
 80012a0:	0699      	lsls	r1, r3, #26
 80012a2:	bf42      	ittt	mi
 80012a4:	6833      	ldrmi	r3, [r6, #0]
 80012a6:	3302      	addmi	r3, #2
 80012a8:	6033      	strmi	r3, [r6, #0]
 80012aa:	6825      	ldr	r5, [r4, #0]
 80012ac:	f015 0506 	ands.w	r5, r5, #6
 80012b0:	d106      	bne.n	80012c0 <_printf_common+0x48>
 80012b2:	f104 0a19 	add.w	sl, r4, #25
 80012b6:	68e3      	ldr	r3, [r4, #12]
 80012b8:	6832      	ldr	r2, [r6, #0]
 80012ba:	1a9b      	subs	r3, r3, r2
 80012bc:	42ab      	cmp	r3, r5
 80012be:	dc26      	bgt.n	800130e <_printf_common+0x96>
 80012c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80012c4:	1e13      	subs	r3, r2, #0
 80012c6:	6822      	ldr	r2, [r4, #0]
 80012c8:	bf18      	it	ne
 80012ca:	2301      	movne	r3, #1
 80012cc:	0692      	lsls	r2, r2, #26
 80012ce:	d42b      	bmi.n	8001328 <_printf_common+0xb0>
 80012d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80012d4:	4649      	mov	r1, r9
 80012d6:	4638      	mov	r0, r7
 80012d8:	47c0      	blx	r8
 80012da:	3001      	adds	r0, #1
 80012dc:	d01e      	beq.n	800131c <_printf_common+0xa4>
 80012de:	6823      	ldr	r3, [r4, #0]
 80012e0:	68e5      	ldr	r5, [r4, #12]
 80012e2:	6832      	ldr	r2, [r6, #0]
 80012e4:	f003 0306 	and.w	r3, r3, #6
 80012e8:	2b04      	cmp	r3, #4
 80012ea:	bf08      	it	eq
 80012ec:	1aad      	subeq	r5, r5, r2
 80012ee:	68a3      	ldr	r3, [r4, #8]
 80012f0:	6922      	ldr	r2, [r4, #16]
 80012f2:	bf0c      	ite	eq
 80012f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80012f8:	2500      	movne	r5, #0
 80012fa:	4293      	cmp	r3, r2
 80012fc:	bfc4      	itt	gt
 80012fe:	1a9b      	subgt	r3, r3, r2
 8001300:	18ed      	addgt	r5, r5, r3
 8001302:	2600      	movs	r6, #0
 8001304:	341a      	adds	r4, #26
 8001306:	42b5      	cmp	r5, r6
 8001308:	d11a      	bne.n	8001340 <_printf_common+0xc8>
 800130a:	2000      	movs	r0, #0
 800130c:	e008      	b.n	8001320 <_printf_common+0xa8>
 800130e:	2301      	movs	r3, #1
 8001310:	4652      	mov	r2, sl
 8001312:	4649      	mov	r1, r9
 8001314:	4638      	mov	r0, r7
 8001316:	47c0      	blx	r8
 8001318:	3001      	adds	r0, #1
 800131a:	d103      	bne.n	8001324 <_printf_common+0xac>
 800131c:	f04f 30ff 	mov.w	r0, #4294967295
 8001320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001324:	3501      	adds	r5, #1
 8001326:	e7c6      	b.n	80012b6 <_printf_common+0x3e>
 8001328:	18e1      	adds	r1, r4, r3
 800132a:	1c5a      	adds	r2, r3, #1
 800132c:	2030      	movs	r0, #48	; 0x30
 800132e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001332:	4422      	add	r2, r4
 8001334:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001338:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800133c:	3302      	adds	r3, #2
 800133e:	e7c7      	b.n	80012d0 <_printf_common+0x58>
 8001340:	2301      	movs	r3, #1
 8001342:	4622      	mov	r2, r4
 8001344:	4649      	mov	r1, r9
 8001346:	4638      	mov	r0, r7
 8001348:	47c0      	blx	r8
 800134a:	3001      	adds	r0, #1
 800134c:	d0e6      	beq.n	800131c <_printf_common+0xa4>
 800134e:	3601      	adds	r6, #1
 8001350:	e7d9      	b.n	8001306 <_printf_common+0x8e>
	...

08001354 <_printf_i>:
 8001354:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001358:	7e0f      	ldrb	r7, [r1, #24]
 800135a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800135c:	2f78      	cmp	r7, #120	; 0x78
 800135e:	4691      	mov	r9, r2
 8001360:	4680      	mov	r8, r0
 8001362:	460c      	mov	r4, r1
 8001364:	469a      	mov	sl, r3
 8001366:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800136a:	d807      	bhi.n	800137c <_printf_i+0x28>
 800136c:	2f62      	cmp	r7, #98	; 0x62
 800136e:	d80a      	bhi.n	8001386 <_printf_i+0x32>
 8001370:	2f00      	cmp	r7, #0
 8001372:	f000 80d8 	beq.w	8001526 <_printf_i+0x1d2>
 8001376:	2f58      	cmp	r7, #88	; 0x58
 8001378:	f000 80a3 	beq.w	80014c2 <_printf_i+0x16e>
 800137c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001380:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001384:	e03a      	b.n	80013fc <_printf_i+0xa8>
 8001386:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800138a:	2b15      	cmp	r3, #21
 800138c:	d8f6      	bhi.n	800137c <_printf_i+0x28>
 800138e:	a101      	add	r1, pc, #4	; (adr r1, 8001394 <_printf_i+0x40>)
 8001390:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001394:	080013ed 	.word	0x080013ed
 8001398:	08001401 	.word	0x08001401
 800139c:	0800137d 	.word	0x0800137d
 80013a0:	0800137d 	.word	0x0800137d
 80013a4:	0800137d 	.word	0x0800137d
 80013a8:	0800137d 	.word	0x0800137d
 80013ac:	08001401 	.word	0x08001401
 80013b0:	0800137d 	.word	0x0800137d
 80013b4:	0800137d 	.word	0x0800137d
 80013b8:	0800137d 	.word	0x0800137d
 80013bc:	0800137d 	.word	0x0800137d
 80013c0:	0800150d 	.word	0x0800150d
 80013c4:	08001431 	.word	0x08001431
 80013c8:	080014ef 	.word	0x080014ef
 80013cc:	0800137d 	.word	0x0800137d
 80013d0:	0800137d 	.word	0x0800137d
 80013d4:	0800152f 	.word	0x0800152f
 80013d8:	0800137d 	.word	0x0800137d
 80013dc:	08001431 	.word	0x08001431
 80013e0:	0800137d 	.word	0x0800137d
 80013e4:	0800137d 	.word	0x0800137d
 80013e8:	080014f7 	.word	0x080014f7
 80013ec:	682b      	ldr	r3, [r5, #0]
 80013ee:	1d1a      	adds	r2, r3, #4
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	602a      	str	r2, [r5, #0]
 80013f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80013f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80013fc:	2301      	movs	r3, #1
 80013fe:	e0a3      	b.n	8001548 <_printf_i+0x1f4>
 8001400:	6820      	ldr	r0, [r4, #0]
 8001402:	6829      	ldr	r1, [r5, #0]
 8001404:	0606      	lsls	r6, r0, #24
 8001406:	f101 0304 	add.w	r3, r1, #4
 800140a:	d50a      	bpl.n	8001422 <_printf_i+0xce>
 800140c:	680e      	ldr	r6, [r1, #0]
 800140e:	602b      	str	r3, [r5, #0]
 8001410:	2e00      	cmp	r6, #0
 8001412:	da03      	bge.n	800141c <_printf_i+0xc8>
 8001414:	232d      	movs	r3, #45	; 0x2d
 8001416:	4276      	negs	r6, r6
 8001418:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800141c:	485e      	ldr	r0, [pc, #376]	; (8001598 <_printf_i+0x244>)
 800141e:	230a      	movs	r3, #10
 8001420:	e019      	b.n	8001456 <_printf_i+0x102>
 8001422:	680e      	ldr	r6, [r1, #0]
 8001424:	602b      	str	r3, [r5, #0]
 8001426:	f010 0f40 	tst.w	r0, #64	; 0x40
 800142a:	bf18      	it	ne
 800142c:	b236      	sxthne	r6, r6
 800142e:	e7ef      	b.n	8001410 <_printf_i+0xbc>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	6820      	ldr	r0, [r4, #0]
 8001434:	1d19      	adds	r1, r3, #4
 8001436:	6029      	str	r1, [r5, #0]
 8001438:	0601      	lsls	r1, r0, #24
 800143a:	d501      	bpl.n	8001440 <_printf_i+0xec>
 800143c:	681e      	ldr	r6, [r3, #0]
 800143e:	e002      	b.n	8001446 <_printf_i+0xf2>
 8001440:	0646      	lsls	r6, r0, #25
 8001442:	d5fb      	bpl.n	800143c <_printf_i+0xe8>
 8001444:	881e      	ldrh	r6, [r3, #0]
 8001446:	4854      	ldr	r0, [pc, #336]	; (8001598 <_printf_i+0x244>)
 8001448:	2f6f      	cmp	r7, #111	; 0x6f
 800144a:	bf0c      	ite	eq
 800144c:	2308      	moveq	r3, #8
 800144e:	230a      	movne	r3, #10
 8001450:	2100      	movs	r1, #0
 8001452:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001456:	6865      	ldr	r5, [r4, #4]
 8001458:	60a5      	str	r5, [r4, #8]
 800145a:	2d00      	cmp	r5, #0
 800145c:	bfa2      	ittt	ge
 800145e:	6821      	ldrge	r1, [r4, #0]
 8001460:	f021 0104 	bicge.w	r1, r1, #4
 8001464:	6021      	strge	r1, [r4, #0]
 8001466:	b90e      	cbnz	r6, 800146c <_printf_i+0x118>
 8001468:	2d00      	cmp	r5, #0
 800146a:	d04d      	beq.n	8001508 <_printf_i+0x1b4>
 800146c:	4615      	mov	r5, r2
 800146e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001472:	fb03 6711 	mls	r7, r3, r1, r6
 8001476:	5dc7      	ldrb	r7, [r0, r7]
 8001478:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800147c:	4637      	mov	r7, r6
 800147e:	42bb      	cmp	r3, r7
 8001480:	460e      	mov	r6, r1
 8001482:	d9f4      	bls.n	800146e <_printf_i+0x11a>
 8001484:	2b08      	cmp	r3, #8
 8001486:	d10b      	bne.n	80014a0 <_printf_i+0x14c>
 8001488:	6823      	ldr	r3, [r4, #0]
 800148a:	07de      	lsls	r6, r3, #31
 800148c:	d508      	bpl.n	80014a0 <_printf_i+0x14c>
 800148e:	6923      	ldr	r3, [r4, #16]
 8001490:	6861      	ldr	r1, [r4, #4]
 8001492:	4299      	cmp	r1, r3
 8001494:	bfde      	ittt	le
 8001496:	2330      	movle	r3, #48	; 0x30
 8001498:	f805 3c01 	strble.w	r3, [r5, #-1]
 800149c:	f105 35ff 	addle.w	r5, r5, #4294967295
 80014a0:	1b52      	subs	r2, r2, r5
 80014a2:	6122      	str	r2, [r4, #16]
 80014a4:	f8cd a000 	str.w	sl, [sp]
 80014a8:	464b      	mov	r3, r9
 80014aa:	aa03      	add	r2, sp, #12
 80014ac:	4621      	mov	r1, r4
 80014ae:	4640      	mov	r0, r8
 80014b0:	f7ff fee2 	bl	8001278 <_printf_common>
 80014b4:	3001      	adds	r0, #1
 80014b6:	d14c      	bne.n	8001552 <_printf_i+0x1fe>
 80014b8:	f04f 30ff 	mov.w	r0, #4294967295
 80014bc:	b004      	add	sp, #16
 80014be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014c2:	4835      	ldr	r0, [pc, #212]	; (8001598 <_printf_i+0x244>)
 80014c4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80014c8:	6829      	ldr	r1, [r5, #0]
 80014ca:	6823      	ldr	r3, [r4, #0]
 80014cc:	f851 6b04 	ldr.w	r6, [r1], #4
 80014d0:	6029      	str	r1, [r5, #0]
 80014d2:	061d      	lsls	r5, r3, #24
 80014d4:	d514      	bpl.n	8001500 <_printf_i+0x1ac>
 80014d6:	07df      	lsls	r7, r3, #31
 80014d8:	bf44      	itt	mi
 80014da:	f043 0320 	orrmi.w	r3, r3, #32
 80014de:	6023      	strmi	r3, [r4, #0]
 80014e0:	b91e      	cbnz	r6, 80014ea <_printf_i+0x196>
 80014e2:	6823      	ldr	r3, [r4, #0]
 80014e4:	f023 0320 	bic.w	r3, r3, #32
 80014e8:	6023      	str	r3, [r4, #0]
 80014ea:	2310      	movs	r3, #16
 80014ec:	e7b0      	b.n	8001450 <_printf_i+0xfc>
 80014ee:	6823      	ldr	r3, [r4, #0]
 80014f0:	f043 0320 	orr.w	r3, r3, #32
 80014f4:	6023      	str	r3, [r4, #0]
 80014f6:	2378      	movs	r3, #120	; 0x78
 80014f8:	4828      	ldr	r0, [pc, #160]	; (800159c <_printf_i+0x248>)
 80014fa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80014fe:	e7e3      	b.n	80014c8 <_printf_i+0x174>
 8001500:	0659      	lsls	r1, r3, #25
 8001502:	bf48      	it	mi
 8001504:	b2b6      	uxthmi	r6, r6
 8001506:	e7e6      	b.n	80014d6 <_printf_i+0x182>
 8001508:	4615      	mov	r5, r2
 800150a:	e7bb      	b.n	8001484 <_printf_i+0x130>
 800150c:	682b      	ldr	r3, [r5, #0]
 800150e:	6826      	ldr	r6, [r4, #0]
 8001510:	6961      	ldr	r1, [r4, #20]
 8001512:	1d18      	adds	r0, r3, #4
 8001514:	6028      	str	r0, [r5, #0]
 8001516:	0635      	lsls	r5, r6, #24
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	d501      	bpl.n	8001520 <_printf_i+0x1cc>
 800151c:	6019      	str	r1, [r3, #0]
 800151e:	e002      	b.n	8001526 <_printf_i+0x1d2>
 8001520:	0670      	lsls	r0, r6, #25
 8001522:	d5fb      	bpl.n	800151c <_printf_i+0x1c8>
 8001524:	8019      	strh	r1, [r3, #0]
 8001526:	2300      	movs	r3, #0
 8001528:	6123      	str	r3, [r4, #16]
 800152a:	4615      	mov	r5, r2
 800152c:	e7ba      	b.n	80014a4 <_printf_i+0x150>
 800152e:	682b      	ldr	r3, [r5, #0]
 8001530:	1d1a      	adds	r2, r3, #4
 8001532:	602a      	str	r2, [r5, #0]
 8001534:	681d      	ldr	r5, [r3, #0]
 8001536:	6862      	ldr	r2, [r4, #4]
 8001538:	2100      	movs	r1, #0
 800153a:	4628      	mov	r0, r5
 800153c:	f7fe fe68 	bl	8000210 <memchr>
 8001540:	b108      	cbz	r0, 8001546 <_printf_i+0x1f2>
 8001542:	1b40      	subs	r0, r0, r5
 8001544:	6060      	str	r0, [r4, #4]
 8001546:	6863      	ldr	r3, [r4, #4]
 8001548:	6123      	str	r3, [r4, #16]
 800154a:	2300      	movs	r3, #0
 800154c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001550:	e7a8      	b.n	80014a4 <_printf_i+0x150>
 8001552:	6923      	ldr	r3, [r4, #16]
 8001554:	462a      	mov	r2, r5
 8001556:	4649      	mov	r1, r9
 8001558:	4640      	mov	r0, r8
 800155a:	47d0      	blx	sl
 800155c:	3001      	adds	r0, #1
 800155e:	d0ab      	beq.n	80014b8 <_printf_i+0x164>
 8001560:	6823      	ldr	r3, [r4, #0]
 8001562:	079b      	lsls	r3, r3, #30
 8001564:	d413      	bmi.n	800158e <_printf_i+0x23a>
 8001566:	68e0      	ldr	r0, [r4, #12]
 8001568:	9b03      	ldr	r3, [sp, #12]
 800156a:	4298      	cmp	r0, r3
 800156c:	bfb8      	it	lt
 800156e:	4618      	movlt	r0, r3
 8001570:	e7a4      	b.n	80014bc <_printf_i+0x168>
 8001572:	2301      	movs	r3, #1
 8001574:	4632      	mov	r2, r6
 8001576:	4649      	mov	r1, r9
 8001578:	4640      	mov	r0, r8
 800157a:	47d0      	blx	sl
 800157c:	3001      	adds	r0, #1
 800157e:	d09b      	beq.n	80014b8 <_printf_i+0x164>
 8001580:	3501      	adds	r5, #1
 8001582:	68e3      	ldr	r3, [r4, #12]
 8001584:	9903      	ldr	r1, [sp, #12]
 8001586:	1a5b      	subs	r3, r3, r1
 8001588:	42ab      	cmp	r3, r5
 800158a:	dcf2      	bgt.n	8001572 <_printf_i+0x21e>
 800158c:	e7eb      	b.n	8001566 <_printf_i+0x212>
 800158e:	2500      	movs	r5, #0
 8001590:	f104 0619 	add.w	r6, r4, #25
 8001594:	e7f5      	b.n	8001582 <_printf_i+0x22e>
 8001596:	bf00      	nop
 8001598:	080016b1 	.word	0x080016b1
 800159c:	080016c2 	.word	0x080016c2

080015a0 <_read_r>:
 80015a0:	b538      	push	{r3, r4, r5, lr}
 80015a2:	4d07      	ldr	r5, [pc, #28]	; (80015c0 <_read_r+0x20>)
 80015a4:	4604      	mov	r4, r0
 80015a6:	4608      	mov	r0, r1
 80015a8:	4611      	mov	r1, r2
 80015aa:	2200      	movs	r2, #0
 80015ac:	602a      	str	r2, [r5, #0]
 80015ae:	461a      	mov	r2, r3
 80015b0:	f7fe ff1e 	bl	80003f0 <_read>
 80015b4:	1c43      	adds	r3, r0, #1
 80015b6:	d102      	bne.n	80015be <_read_r+0x1e>
 80015b8:	682b      	ldr	r3, [r5, #0]
 80015ba:	b103      	cbz	r3, 80015be <_read_r+0x1e>
 80015bc:	6023      	str	r3, [r4, #0]
 80015be:	bd38      	pop	{r3, r4, r5, pc}
 80015c0:	20000090 	.word	0x20000090

080015c4 <_fstat_r>:
 80015c4:	b538      	push	{r3, r4, r5, lr}
 80015c6:	4d07      	ldr	r5, [pc, #28]	; (80015e4 <_fstat_r+0x20>)
 80015c8:	2300      	movs	r3, #0
 80015ca:	4604      	mov	r4, r0
 80015cc:	4608      	mov	r0, r1
 80015ce:	4611      	mov	r1, r2
 80015d0:	602b      	str	r3, [r5, #0]
 80015d2:	f7fe ff51 	bl	8000478 <_fstat>
 80015d6:	1c43      	adds	r3, r0, #1
 80015d8:	d102      	bne.n	80015e0 <_fstat_r+0x1c>
 80015da:	682b      	ldr	r3, [r5, #0]
 80015dc:	b103      	cbz	r3, 80015e0 <_fstat_r+0x1c>
 80015de:	6023      	str	r3, [r4, #0]
 80015e0:	bd38      	pop	{r3, r4, r5, pc}
 80015e2:	bf00      	nop
 80015e4:	20000090 	.word	0x20000090

080015e8 <_isatty_r>:
 80015e8:	b538      	push	{r3, r4, r5, lr}
 80015ea:	4d06      	ldr	r5, [pc, #24]	; (8001604 <_isatty_r+0x1c>)
 80015ec:	2300      	movs	r3, #0
 80015ee:	4604      	mov	r4, r0
 80015f0:	4608      	mov	r0, r1
 80015f2:	602b      	str	r3, [r5, #0]
 80015f4:	f7fe ff4f 	bl	8000496 <_isatty>
 80015f8:	1c43      	adds	r3, r0, #1
 80015fa:	d102      	bne.n	8001602 <_isatty_r+0x1a>
 80015fc:	682b      	ldr	r3, [r5, #0]
 80015fe:	b103      	cbz	r3, 8001602 <_isatty_r+0x1a>
 8001600:	6023      	str	r3, [r4, #0]
 8001602:	bd38      	pop	{r3, r4, r5, pc}
 8001604:	20000090 	.word	0x20000090

08001608 <_init>:
 8001608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800160a:	bf00      	nop
 800160c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800160e:	bc08      	pop	{r3}
 8001610:	469e      	mov	lr, r3
 8001612:	4770      	bx	lr

08001614 <_fini>:
 8001614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001616:	bf00      	nop
 8001618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800161a:	bc08      	pop	{r3}
 800161c:	469e      	mov	lr, r3
 800161e:	4770      	bx	lr
