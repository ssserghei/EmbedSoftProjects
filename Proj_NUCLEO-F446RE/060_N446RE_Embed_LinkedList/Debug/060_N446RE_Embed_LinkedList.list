
060_N446RE_Embed_LinkedList.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000153c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  0800170c  0800170c  0001170c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080017b8  080017b8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080017b8  080017b8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080017b8  080017b8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080017b8  080017b8  000117b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017bc  080017bc  000117bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080017c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001824  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001824  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011d2  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000477  00000000  00000000  00021260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  000216d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f0  00000000  00000000  00021800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002abd  00000000  00000000  000218f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000136e  00000000  00000000  000243ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000963c  00000000  00000000  0002571b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002ed57  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000cac  00000000  00000000  0002eda8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080016f4 	.word	0x080016f4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080016f4 	.word	0x080016f4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <print>:

void push(Node_t **plist, int  d);

void print(Node_t *list);

void print(Node_t *list){
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b084      	sub	sp, #16
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]

	for(Node_t* p=list; p!=NULL; p=p->next){
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	60fb      	str	r3, [r7, #12]
 80002bc:	e00e      	b.n	80002dc <print+0x2c>
			printf("a data= %d\n",p->data);	fflush(stdout);
 80002be:	68fb      	ldr	r3, [r7, #12]
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	4619      	mov	r1, r3
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <print+0x4c>)
 80002c6:	f000 fc51 	bl	8000b6c <iprintf>
 80002ca:	4b0d      	ldr	r3, [pc, #52]	; (8000300 <print+0x50>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	689b      	ldr	r3, [r3, #8]
 80002d0:	4618      	mov	r0, r3
 80002d2:	f000 fa2d 	bl	8000730 <fflush>
	for(Node_t* p=list; p!=NULL; p=p->next){
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	685b      	ldr	r3, [r3, #4]
 80002da:	60fb      	str	r3, [r7, #12]
 80002dc:	68fb      	ldr	r3, [r7, #12]
 80002de:	2b00      	cmp	r3, #0
 80002e0:	d1ed      	bne.n	80002be <print+0xe>
			}
		printf("\n");					fflush(stdout);
 80002e2:	200a      	movs	r0, #10
 80002e4:	f000 fc5a 	bl	8000b9c <putchar>
 80002e8:	4b05      	ldr	r3, [pc, #20]	; (8000300 <print+0x50>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	689b      	ldr	r3, [r3, #8]
 80002ee:	4618      	mov	r0, r3
 80002f0:	f000 fa1e 	bl	8000730 <fflush>
}
 80002f4:	bf00      	nop
 80002f6:	3710      	adds	r7, #16
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	0800170c 	.word	0x0800170c
 8000300:	20000000 	.word	0x20000000

08000304 <push>:

void push(Node_t **plist, int d){
 8000304:	b580      	push	{r7, lr}
 8000306:	b084      	sub	sp, #16
 8000308:	af00      	add	r7, sp, #0
 800030a:	6078      	str	r0, [r7, #4]
 800030c:	6039      	str	r1, [r7, #0]
	//asa:
	//	t.next=&a;
	//	list=&t;

	//sau asa
	Node_t *p=malloc(sizeof(Node_t));
 800030e:	2008      	movs	r0, #8
 8000310:	f000 fb3e 	bl	8000990 <malloc>
 8000314:	4603      	mov	r3, r0
 8000316:	60fb      	str	r3, [r7, #12]
	p->data=d;
 8000318:	68fb      	ldr	r3, [r7, #12]
 800031a:	683a      	ldr	r2, [r7, #0]
 800031c:	601a      	str	r2, [r3, #0]
	p->next=*plist;
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681a      	ldr	r2, [r3, #0]
 8000322:	68fb      	ldr	r3, [r7, #12]
 8000324:	605a      	str	r2, [r3, #4]
	*plist=p;
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	68fa      	ldr	r2, [r7, #12]
 800032a:	601a      	str	r2, [r3, #0]
}
 800032c:	bf00      	nop
 800032e:	3710      	adds	r7, #16
 8000330:	46bd      	mov	sp, r7
 8000332:	bd80      	pop	{r7, pc}

08000334 <main>:

/***************************MAIN*******************/
int main(void)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	b08a      	sub	sp, #40	; 0x28
 8000338:	af00      	add	r7, sp, #0
	/*NULL nu influenteaza la nimic*/
//	Node_t*  list=NULL;		//Declararea listei vida
	Node_t*  list;			//Declararea listei vida

	Node_t a={3}, b={17}, c={21}, t={10};
 800033a:	f107 031c 	add.w	r3, r7, #28
 800033e:	2200      	movs	r2, #0
 8000340:	601a      	str	r2, [r3, #0]
 8000342:	605a      	str	r2, [r3, #4]
 8000344:	2303      	movs	r3, #3
 8000346:	61fb      	str	r3, [r7, #28]
 8000348:	f107 0314 	add.w	r3, r7, #20
 800034c:	2200      	movs	r2, #0
 800034e:	601a      	str	r2, [r3, #0]
 8000350:	605a      	str	r2, [r3, #4]
 8000352:	2311      	movs	r3, #17
 8000354:	617b      	str	r3, [r7, #20]
 8000356:	f107 030c 	add.w	r3, r7, #12
 800035a:	2200      	movs	r2, #0
 800035c:	601a      	str	r2, [r3, #0]
 800035e:	605a      	str	r2, [r3, #4]
 8000360:	2315      	movs	r3, #21
 8000362:	60fb      	str	r3, [r7, #12]
 8000364:	1d3b      	adds	r3, r7, #4
 8000366:	2200      	movs	r2, #0
 8000368:	601a      	str	r2, [r3, #0]
 800036a:	605a      	str	r2, [r3, #4]
 800036c:	230a      	movs	r3, #10
 800036e:	607b      	str	r3, [r7, #4]

	list = &a;
 8000370:	f107 031c 	add.w	r3, r7, #28
 8000374:	627b      	str	r3, [r7, #36]	; 0x24

	a.next = &b;
 8000376:	f107 0314 	add.w	r3, r7, #20
 800037a:	623b      	str	r3, [r7, #32]
	b.next = &c;
 800037c:	f107 030c 	add.w	r3, r7, #12
 8000380:	61bb      	str	r3, [r7, #24]
	c.next = NULL;
 8000382:	2300      	movs	r3, #0
 8000384:	613b      	str	r3, [r7, #16]

	printf("Hello\n");				fflush(stdout);
 8000386:	480e      	ldr	r0, [pc, #56]	; (80003c0 <main+0x8c>)
 8000388:	f000 fc8a 	bl	8000ca0 <puts>
 800038c:	4b0d      	ldr	r3, [pc, #52]	; (80003c4 <main+0x90>)
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	689b      	ldr	r3, [r3, #8]
 8000392:	4618      	mov	r0, r3
 8000394:	f000 f9cc 	bl	8000730 <fflush>

	print (list);
 8000398:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800039a:	4618      	mov	r0, r3
 800039c:	f7ff ff88 	bl	80002b0 <print>

	push(&list,10);
 80003a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80003a4:	210a      	movs	r1, #10
 80003a6:	4618      	mov	r0, r3
 80003a8:	f7ff ffac 	bl	8000304 <push>

	print (list);
 80003ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80003ae:	4618      	mov	r0, r3
 80003b0:	f7ff ff7e 	bl	80002b0 <print>

	return 0;
 80003b4:	2300      	movs	r3, #0
}//END MAIN
 80003b6:	4618      	mov	r0, r3
 80003b8:	3728      	adds	r7, #40	; 0x28
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bd80      	pop	{r7, pc}
 80003be:	bf00      	nop
 80003c0:	08001718 	.word	0x08001718
 80003c4:	20000000 	.word	0x20000000

080003c8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	4603      	mov	r3, r0
 80003d0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003d2:	4b0e      	ldr	r3, [pc, #56]	; (800040c <ITM_SendChar+0x44>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a0d      	ldr	r2, [pc, #52]	; (800040c <ITM_SendChar+0x44>)
 80003d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003dc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003de:	4b0c      	ldr	r3, [pc, #48]	; (8000410 <ITM_SendChar+0x48>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	4a0b      	ldr	r2, [pc, #44]	; (8000410 <ITM_SendChar+0x48>)
 80003e4:	f043 0301 	orr.w	r3, r3, #1
 80003e8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ea:	bf00      	nop
 80003ec:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	f003 0301 	and.w	r3, r3, #1
 80003f6:	2b00      	cmp	r3, #0
 80003f8:	d0f8      	beq.n	80003ec <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003fa:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003fe:	79fb      	ldrb	r3, [r7, #7]
 8000400:	6013      	str	r3, [r2, #0]
}
 8000402:	bf00      	nop
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	bc80      	pop	{r7}
 800040a:	4770      	bx	lr
 800040c:	e000edfc 	.word	0xe000edfc
 8000410:	e0000e00 	.word	0xe0000e00

08000414 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b086      	sub	sp, #24
 8000418:	af00      	add	r7, sp, #0
 800041a:	60f8      	str	r0, [r7, #12]
 800041c:	60b9      	str	r1, [r7, #8]
 800041e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	e00a      	b.n	800043c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000426:	f3af 8000 	nop.w
 800042a:	4601      	mov	r1, r0
 800042c:	68bb      	ldr	r3, [r7, #8]
 800042e:	1c5a      	adds	r2, r3, #1
 8000430:	60ba      	str	r2, [r7, #8]
 8000432:	b2ca      	uxtb	r2, r1
 8000434:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697a      	ldr	r2, [r7, #20]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbf0      	blt.n	8000426 <_read+0x12>
	}

return len;
 8000444:	687b      	ldr	r3, [r7, #4]
}
 8000446:	4618      	mov	r0, r3
 8000448:	3718      	adds	r7, #24
 800044a:	46bd      	mov	sp, r7
 800044c:	bd80      	pop	{r7, pc}

0800044e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800044e:	b580      	push	{r7, lr}
 8000450:	b086      	sub	sp, #24
 8000452:	af00      	add	r7, sp, #0
 8000454:	60f8      	str	r0, [r7, #12]
 8000456:	60b9      	str	r1, [r7, #8]
 8000458:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045a:	2300      	movs	r3, #0
 800045c:	617b      	str	r3, [r7, #20]
 800045e:	e009      	b.n	8000474 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	1c5a      	adds	r2, r3, #1
 8000464:	60ba      	str	r2, [r7, #8]
 8000466:	781b      	ldrb	r3, [r3, #0]
 8000468:	4618      	mov	r0, r3
 800046a:	f7ff ffad 	bl	80003c8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046e:	697b      	ldr	r3, [r7, #20]
 8000470:	3301      	adds	r3, #1
 8000472:	617b      	str	r3, [r7, #20]
 8000474:	697a      	ldr	r2, [r7, #20]
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	429a      	cmp	r2, r3
 800047a:	dbf1      	blt.n	8000460 <_write+0x12>
	}
	return len;
 800047c:	687b      	ldr	r3, [r7, #4]
}
 800047e:	4618      	mov	r0, r3
 8000480:	3718      	adds	r7, #24
 8000482:	46bd      	mov	sp, r7
 8000484:	bd80      	pop	{r7, pc}

08000486 <_close>:

int _close(int file)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
	return -1;
 800048e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000492:	4618      	mov	r0, r3
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	bc80      	pop	{r7}
 800049a:	4770      	bx	lr

0800049c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800049c:	b480      	push	{r7}
 800049e:	b083      	sub	sp, #12
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
 80004a4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004a6:	683b      	ldr	r3, [r7, #0]
 80004a8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004ac:	605a      	str	r2, [r3, #4]
	return 0;
 80004ae:	2300      	movs	r3, #0
}
 80004b0:	4618      	mov	r0, r3
 80004b2:	370c      	adds	r7, #12
 80004b4:	46bd      	mov	sp, r7
 80004b6:	bc80      	pop	{r7}
 80004b8:	4770      	bx	lr

080004ba <_isatty>:

int _isatty(int file)
{
 80004ba:	b480      	push	{r7}
 80004bc:	b083      	sub	sp, #12
 80004be:	af00      	add	r7, sp, #0
 80004c0:	6078      	str	r0, [r7, #4]
	return 1;
 80004c2:	2301      	movs	r3, #1
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	370c      	adds	r7, #12
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bc80      	pop	{r7}
 80004cc:	4770      	bx	lr

080004ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ce:	b480      	push	{r7}
 80004d0:	b085      	sub	sp, #20
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	60f8      	str	r0, [r7, #12]
 80004d6:	60b9      	str	r1, [r7, #8]
 80004d8:	607a      	str	r2, [r7, #4]
	return 0;
 80004da:	2300      	movs	r3, #0
}
 80004dc:	4618      	mov	r0, r3
 80004de:	3714      	adds	r7, #20
 80004e0:	46bd      	mov	sp, r7
 80004e2:	bc80      	pop	{r7}
 80004e4:	4770      	bx	lr
	...

080004e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004e8:	b580      	push	{r7, lr}
 80004ea:	b086      	sub	sp, #24
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004f0:	4a14      	ldr	r2, [pc, #80]	; (8000544 <_sbrk+0x5c>)
 80004f2:	4b15      	ldr	r3, [pc, #84]	; (8000548 <_sbrk+0x60>)
 80004f4:	1ad3      	subs	r3, r2, r3
 80004f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004f8:	697b      	ldr	r3, [r7, #20]
 80004fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004fc:	4b13      	ldr	r3, [pc, #76]	; (800054c <_sbrk+0x64>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d102      	bne.n	800050a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000504:	4b11      	ldr	r3, [pc, #68]	; (800054c <_sbrk+0x64>)
 8000506:	4a12      	ldr	r2, [pc, #72]	; (8000550 <_sbrk+0x68>)
 8000508:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800050a:	4b10      	ldr	r3, [pc, #64]	; (800054c <_sbrk+0x64>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	4413      	add	r3, r2
 8000512:	693a      	ldr	r2, [r7, #16]
 8000514:	429a      	cmp	r2, r3
 8000516:	d207      	bcs.n	8000528 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000518:	f000 f846 	bl	80005a8 <__errno>
 800051c:	4603      	mov	r3, r0
 800051e:	220c      	movs	r2, #12
 8000520:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000522:	f04f 33ff 	mov.w	r3, #4294967295
 8000526:	e009      	b.n	800053c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000528:	4b08      	ldr	r3, [pc, #32]	; (800054c <_sbrk+0x64>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800052e:	4b07      	ldr	r3, [pc, #28]	; (800054c <_sbrk+0x64>)
 8000530:	681a      	ldr	r2, [r3, #0]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4413      	add	r3, r2
 8000536:	4a05      	ldr	r2, [pc, #20]	; (800054c <_sbrk+0x64>)
 8000538:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800053a:	68fb      	ldr	r3, [r7, #12]
}
 800053c:	4618      	mov	r0, r3
 800053e:	3718      	adds	r7, #24
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}
 8000544:	20020000 	.word	0x20020000
 8000548:	00000400 	.word	0x00000400
 800054c:	20000080 	.word	0x20000080
 8000550:	20000098 	.word	0x20000098

08000554 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000554:	480d      	ldr	r0, [pc, #52]	; (800058c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000556:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000558:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800055c:	480c      	ldr	r0, [pc, #48]	; (8000590 <LoopForever+0x6>)
  ldr r1, =_edata
 800055e:	490d      	ldr	r1, [pc, #52]	; (8000594 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000560:	4a0d      	ldr	r2, [pc, #52]	; (8000598 <LoopForever+0xe>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000564:	e002      	b.n	800056c <LoopCopyDataInit>

08000566 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000566:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000568:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056a:	3304      	adds	r3, #4

0800056c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800056c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800056e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000570:	d3f9      	bcc.n	8000566 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000572:	4a0a      	ldr	r2, [pc, #40]	; (800059c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000574:	4c0a      	ldr	r4, [pc, #40]	; (80005a0 <LoopForever+0x16>)
  movs r3, #0
 8000576:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000578:	e001      	b.n	800057e <LoopFillZerobss>

0800057a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800057c:	3204      	adds	r2, #4

0800057e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800057e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000580:	d3fb      	bcc.n	800057a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000582:	f000 f9dd 	bl	8000940 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000586:	f7ff fed5 	bl	8000334 <main>

0800058a <LoopForever>:

LoopForever:
    b LoopForever
 800058a:	e7fe      	b.n	800058a <LoopForever>
  ldr   r0, =_estack
 800058c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000590:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000594:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000598:	080017c0 	.word	0x080017c0
  ldr r2, =_sbss
 800059c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005a0:	20000094 	.word	0x20000094

080005a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005a4:	e7fe      	b.n	80005a4 <ADC_IRQHandler>
	...

080005a8 <__errno>:
 80005a8:	4b01      	ldr	r3, [pc, #4]	; (80005b0 <__errno+0x8>)
 80005aa:	6818      	ldr	r0, [r3, #0]
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop
 80005b0:	20000000 	.word	0x20000000

080005b4 <__sflush_r>:
 80005b4:	898a      	ldrh	r2, [r1, #12]
 80005b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b8:	4605      	mov	r5, r0
 80005ba:	0710      	lsls	r0, r2, #28
 80005bc:	460c      	mov	r4, r1
 80005be:	d457      	bmi.n	8000670 <__sflush_r+0xbc>
 80005c0:	684b      	ldr	r3, [r1, #4]
 80005c2:	2b00      	cmp	r3, #0
 80005c4:	dc04      	bgt.n	80005d0 <__sflush_r+0x1c>
 80005c6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	dc01      	bgt.n	80005d0 <__sflush_r+0x1c>
 80005cc:	2000      	movs	r0, #0
 80005ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005d2:	2e00      	cmp	r6, #0
 80005d4:	d0fa      	beq.n	80005cc <__sflush_r+0x18>
 80005d6:	2300      	movs	r3, #0
 80005d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80005dc:	682f      	ldr	r7, [r5, #0]
 80005de:	602b      	str	r3, [r5, #0]
 80005e0:	d032      	beq.n	8000648 <__sflush_r+0x94>
 80005e2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80005e4:	89a3      	ldrh	r3, [r4, #12]
 80005e6:	075a      	lsls	r2, r3, #29
 80005e8:	d505      	bpl.n	80005f6 <__sflush_r+0x42>
 80005ea:	6863      	ldr	r3, [r4, #4]
 80005ec:	1ac0      	subs	r0, r0, r3
 80005ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80005f0:	b10b      	cbz	r3, 80005f6 <__sflush_r+0x42>
 80005f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80005f4:	1ac0      	subs	r0, r0, r3
 80005f6:	2300      	movs	r3, #0
 80005f8:	4602      	mov	r2, r0
 80005fa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005fc:	6a21      	ldr	r1, [r4, #32]
 80005fe:	4628      	mov	r0, r5
 8000600:	47b0      	blx	r6
 8000602:	1c43      	adds	r3, r0, #1
 8000604:	89a3      	ldrh	r3, [r4, #12]
 8000606:	d106      	bne.n	8000616 <__sflush_r+0x62>
 8000608:	6829      	ldr	r1, [r5, #0]
 800060a:	291d      	cmp	r1, #29
 800060c:	d82c      	bhi.n	8000668 <__sflush_r+0xb4>
 800060e:	4a29      	ldr	r2, [pc, #164]	; (80006b4 <__sflush_r+0x100>)
 8000610:	40ca      	lsrs	r2, r1
 8000612:	07d6      	lsls	r6, r2, #31
 8000614:	d528      	bpl.n	8000668 <__sflush_r+0xb4>
 8000616:	2200      	movs	r2, #0
 8000618:	6062      	str	r2, [r4, #4]
 800061a:	04d9      	lsls	r1, r3, #19
 800061c:	6922      	ldr	r2, [r4, #16]
 800061e:	6022      	str	r2, [r4, #0]
 8000620:	d504      	bpl.n	800062c <__sflush_r+0x78>
 8000622:	1c42      	adds	r2, r0, #1
 8000624:	d101      	bne.n	800062a <__sflush_r+0x76>
 8000626:	682b      	ldr	r3, [r5, #0]
 8000628:	b903      	cbnz	r3, 800062c <__sflush_r+0x78>
 800062a:	6560      	str	r0, [r4, #84]	; 0x54
 800062c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800062e:	602f      	str	r7, [r5, #0]
 8000630:	2900      	cmp	r1, #0
 8000632:	d0cb      	beq.n	80005cc <__sflush_r+0x18>
 8000634:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000638:	4299      	cmp	r1, r3
 800063a:	d002      	beq.n	8000642 <__sflush_r+0x8e>
 800063c:	4628      	mov	r0, r5
 800063e:	f000 f9b7 	bl	80009b0 <_free_r>
 8000642:	2000      	movs	r0, #0
 8000644:	6360      	str	r0, [r4, #52]	; 0x34
 8000646:	e7c2      	b.n	80005ce <__sflush_r+0x1a>
 8000648:	6a21      	ldr	r1, [r4, #32]
 800064a:	2301      	movs	r3, #1
 800064c:	4628      	mov	r0, r5
 800064e:	47b0      	blx	r6
 8000650:	1c41      	adds	r1, r0, #1
 8000652:	d1c7      	bne.n	80005e4 <__sflush_r+0x30>
 8000654:	682b      	ldr	r3, [r5, #0]
 8000656:	2b00      	cmp	r3, #0
 8000658:	d0c4      	beq.n	80005e4 <__sflush_r+0x30>
 800065a:	2b1d      	cmp	r3, #29
 800065c:	d001      	beq.n	8000662 <__sflush_r+0xae>
 800065e:	2b16      	cmp	r3, #22
 8000660:	d101      	bne.n	8000666 <__sflush_r+0xb2>
 8000662:	602f      	str	r7, [r5, #0]
 8000664:	e7b2      	b.n	80005cc <__sflush_r+0x18>
 8000666:	89a3      	ldrh	r3, [r4, #12]
 8000668:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800066c:	81a3      	strh	r3, [r4, #12]
 800066e:	e7ae      	b.n	80005ce <__sflush_r+0x1a>
 8000670:	690f      	ldr	r7, [r1, #16]
 8000672:	2f00      	cmp	r7, #0
 8000674:	d0aa      	beq.n	80005cc <__sflush_r+0x18>
 8000676:	0793      	lsls	r3, r2, #30
 8000678:	680e      	ldr	r6, [r1, #0]
 800067a:	bf08      	it	eq
 800067c:	694b      	ldreq	r3, [r1, #20]
 800067e:	600f      	str	r7, [r1, #0]
 8000680:	bf18      	it	ne
 8000682:	2300      	movne	r3, #0
 8000684:	1bf6      	subs	r6, r6, r7
 8000686:	608b      	str	r3, [r1, #8]
 8000688:	2e00      	cmp	r6, #0
 800068a:	dd9f      	ble.n	80005cc <__sflush_r+0x18>
 800068c:	6a21      	ldr	r1, [r4, #32]
 800068e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000692:	4633      	mov	r3, r6
 8000694:	463a      	mov	r2, r7
 8000696:	4628      	mov	r0, r5
 8000698:	47e0      	blx	ip
 800069a:	2800      	cmp	r0, #0
 800069c:	dc06      	bgt.n	80006ac <__sflush_r+0xf8>
 800069e:	89a3      	ldrh	r3, [r4, #12]
 80006a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006a4:	81a3      	strh	r3, [r4, #12]
 80006a6:	f04f 30ff 	mov.w	r0, #4294967295
 80006aa:	e790      	b.n	80005ce <__sflush_r+0x1a>
 80006ac:	4407      	add	r7, r0
 80006ae:	1a36      	subs	r6, r6, r0
 80006b0:	e7ea      	b.n	8000688 <__sflush_r+0xd4>
 80006b2:	bf00      	nop
 80006b4:	20400001 	.word	0x20400001

080006b8 <_fflush_r>:
 80006b8:	b538      	push	{r3, r4, r5, lr}
 80006ba:	690b      	ldr	r3, [r1, #16]
 80006bc:	4605      	mov	r5, r0
 80006be:	460c      	mov	r4, r1
 80006c0:	b913      	cbnz	r3, 80006c8 <_fflush_r+0x10>
 80006c2:	2500      	movs	r5, #0
 80006c4:	4628      	mov	r0, r5
 80006c6:	bd38      	pop	{r3, r4, r5, pc}
 80006c8:	b118      	cbz	r0, 80006d2 <_fflush_r+0x1a>
 80006ca:	6983      	ldr	r3, [r0, #24]
 80006cc:	b90b      	cbnz	r3, 80006d2 <_fflush_r+0x1a>
 80006ce:	f000 f899 	bl	8000804 <__sinit>
 80006d2:	4b14      	ldr	r3, [pc, #80]	; (8000724 <_fflush_r+0x6c>)
 80006d4:	429c      	cmp	r4, r3
 80006d6:	d11b      	bne.n	8000710 <_fflush_r+0x58>
 80006d8:	686c      	ldr	r4, [r5, #4]
 80006da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d0ef      	beq.n	80006c2 <_fflush_r+0xa>
 80006e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80006e4:	07d0      	lsls	r0, r2, #31
 80006e6:	d404      	bmi.n	80006f2 <_fflush_r+0x3a>
 80006e8:	0599      	lsls	r1, r3, #22
 80006ea:	d402      	bmi.n	80006f2 <_fflush_r+0x3a>
 80006ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ee:	f000 f94c 	bl	800098a <__retarget_lock_acquire_recursive>
 80006f2:	4628      	mov	r0, r5
 80006f4:	4621      	mov	r1, r4
 80006f6:	f7ff ff5d 	bl	80005b4 <__sflush_r>
 80006fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006fc:	07da      	lsls	r2, r3, #31
 80006fe:	4605      	mov	r5, r0
 8000700:	d4e0      	bmi.n	80006c4 <_fflush_r+0xc>
 8000702:	89a3      	ldrh	r3, [r4, #12]
 8000704:	059b      	lsls	r3, r3, #22
 8000706:	d4dd      	bmi.n	80006c4 <_fflush_r+0xc>
 8000708:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800070a:	f000 f93f 	bl	800098c <__retarget_lock_release_recursive>
 800070e:	e7d9      	b.n	80006c4 <_fflush_r+0xc>
 8000710:	4b05      	ldr	r3, [pc, #20]	; (8000728 <_fflush_r+0x70>)
 8000712:	429c      	cmp	r4, r3
 8000714:	d101      	bne.n	800071a <_fflush_r+0x62>
 8000716:	68ac      	ldr	r4, [r5, #8]
 8000718:	e7df      	b.n	80006da <_fflush_r+0x22>
 800071a:	4b04      	ldr	r3, [pc, #16]	; (800072c <_fflush_r+0x74>)
 800071c:	429c      	cmp	r4, r3
 800071e:	bf08      	it	eq
 8000720:	68ec      	ldreq	r4, [r5, #12]
 8000722:	e7da      	b.n	80006da <_fflush_r+0x22>
 8000724:	08001740 	.word	0x08001740
 8000728:	08001760 	.word	0x08001760
 800072c:	08001720 	.word	0x08001720

08000730 <fflush>:
 8000730:	4601      	mov	r1, r0
 8000732:	b920      	cbnz	r0, 800073e <fflush+0xe>
 8000734:	4b04      	ldr	r3, [pc, #16]	; (8000748 <fflush+0x18>)
 8000736:	4905      	ldr	r1, [pc, #20]	; (800074c <fflush+0x1c>)
 8000738:	6818      	ldr	r0, [r3, #0]
 800073a:	f000 b8e1 	b.w	8000900 <_fwalk_reent>
 800073e:	4b04      	ldr	r3, [pc, #16]	; (8000750 <fflush+0x20>)
 8000740:	6818      	ldr	r0, [r3, #0]
 8000742:	f7ff bfb9 	b.w	80006b8 <_fflush_r>
 8000746:	bf00      	nop
 8000748:	08001780 	.word	0x08001780
 800074c:	080006b9 	.word	0x080006b9
 8000750:	20000000 	.word	0x20000000

08000754 <std>:
 8000754:	2300      	movs	r3, #0
 8000756:	b510      	push	{r4, lr}
 8000758:	4604      	mov	r4, r0
 800075a:	e9c0 3300 	strd	r3, r3, [r0]
 800075e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000762:	6083      	str	r3, [r0, #8]
 8000764:	8181      	strh	r1, [r0, #12]
 8000766:	6643      	str	r3, [r0, #100]	; 0x64
 8000768:	81c2      	strh	r2, [r0, #14]
 800076a:	6183      	str	r3, [r0, #24]
 800076c:	4619      	mov	r1, r3
 800076e:	2208      	movs	r2, #8
 8000770:	305c      	adds	r0, #92	; 0x5c
 8000772:	f000 f915 	bl	80009a0 <memset>
 8000776:	4b05      	ldr	r3, [pc, #20]	; (800078c <std+0x38>)
 8000778:	6263      	str	r3, [r4, #36]	; 0x24
 800077a:	4b05      	ldr	r3, [pc, #20]	; (8000790 <std+0x3c>)
 800077c:	62a3      	str	r3, [r4, #40]	; 0x28
 800077e:	4b05      	ldr	r3, [pc, #20]	; (8000794 <std+0x40>)
 8000780:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000782:	4b05      	ldr	r3, [pc, #20]	; (8000798 <std+0x44>)
 8000784:	6224      	str	r4, [r4, #32]
 8000786:	6323      	str	r3, [r4, #48]	; 0x30
 8000788:	bd10      	pop	{r4, pc}
 800078a:	bf00      	nop
 800078c:	08000cd1 	.word	0x08000cd1
 8000790:	08000cf3 	.word	0x08000cf3
 8000794:	08000d2b 	.word	0x08000d2b
 8000798:	08000d4f 	.word	0x08000d4f

0800079c <_cleanup_r>:
 800079c:	4901      	ldr	r1, [pc, #4]	; (80007a4 <_cleanup_r+0x8>)
 800079e:	f000 b8af 	b.w	8000900 <_fwalk_reent>
 80007a2:	bf00      	nop
 80007a4:	080006b9 	.word	0x080006b9

080007a8 <__sfmoreglue>:
 80007a8:	b570      	push	{r4, r5, r6, lr}
 80007aa:	2268      	movs	r2, #104	; 0x68
 80007ac:	1e4d      	subs	r5, r1, #1
 80007ae:	4355      	muls	r5, r2
 80007b0:	460e      	mov	r6, r1
 80007b2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80007b6:	f000 f965 	bl	8000a84 <_malloc_r>
 80007ba:	4604      	mov	r4, r0
 80007bc:	b140      	cbz	r0, 80007d0 <__sfmoreglue+0x28>
 80007be:	2100      	movs	r1, #0
 80007c0:	e9c0 1600 	strd	r1, r6, [r0]
 80007c4:	300c      	adds	r0, #12
 80007c6:	60a0      	str	r0, [r4, #8]
 80007c8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007cc:	f000 f8e8 	bl	80009a0 <memset>
 80007d0:	4620      	mov	r0, r4
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__sfp_lock_acquire>:
 80007d4:	4801      	ldr	r0, [pc, #4]	; (80007dc <__sfp_lock_acquire+0x8>)
 80007d6:	f000 b8d8 	b.w	800098a <__retarget_lock_acquire_recursive>
 80007da:	bf00      	nop
 80007dc:	20000085 	.word	0x20000085

080007e0 <__sfp_lock_release>:
 80007e0:	4801      	ldr	r0, [pc, #4]	; (80007e8 <__sfp_lock_release+0x8>)
 80007e2:	f000 b8d3 	b.w	800098c <__retarget_lock_release_recursive>
 80007e6:	bf00      	nop
 80007e8:	20000085 	.word	0x20000085

080007ec <__sinit_lock_acquire>:
 80007ec:	4801      	ldr	r0, [pc, #4]	; (80007f4 <__sinit_lock_acquire+0x8>)
 80007ee:	f000 b8cc 	b.w	800098a <__retarget_lock_acquire_recursive>
 80007f2:	bf00      	nop
 80007f4:	20000086 	.word	0x20000086

080007f8 <__sinit_lock_release>:
 80007f8:	4801      	ldr	r0, [pc, #4]	; (8000800 <__sinit_lock_release+0x8>)
 80007fa:	f000 b8c7 	b.w	800098c <__retarget_lock_release_recursive>
 80007fe:	bf00      	nop
 8000800:	20000086 	.word	0x20000086

08000804 <__sinit>:
 8000804:	b510      	push	{r4, lr}
 8000806:	4604      	mov	r4, r0
 8000808:	f7ff fff0 	bl	80007ec <__sinit_lock_acquire>
 800080c:	69a3      	ldr	r3, [r4, #24]
 800080e:	b11b      	cbz	r3, 8000818 <__sinit+0x14>
 8000810:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000814:	f7ff bff0 	b.w	80007f8 <__sinit_lock_release>
 8000818:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800081c:	6523      	str	r3, [r4, #80]	; 0x50
 800081e:	4b13      	ldr	r3, [pc, #76]	; (800086c <__sinit+0x68>)
 8000820:	4a13      	ldr	r2, [pc, #76]	; (8000870 <__sinit+0x6c>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	62a2      	str	r2, [r4, #40]	; 0x28
 8000826:	42a3      	cmp	r3, r4
 8000828:	bf04      	itt	eq
 800082a:	2301      	moveq	r3, #1
 800082c:	61a3      	streq	r3, [r4, #24]
 800082e:	4620      	mov	r0, r4
 8000830:	f000 f820 	bl	8000874 <__sfp>
 8000834:	6060      	str	r0, [r4, #4]
 8000836:	4620      	mov	r0, r4
 8000838:	f000 f81c 	bl	8000874 <__sfp>
 800083c:	60a0      	str	r0, [r4, #8]
 800083e:	4620      	mov	r0, r4
 8000840:	f000 f818 	bl	8000874 <__sfp>
 8000844:	2200      	movs	r2, #0
 8000846:	60e0      	str	r0, [r4, #12]
 8000848:	2104      	movs	r1, #4
 800084a:	6860      	ldr	r0, [r4, #4]
 800084c:	f7ff ff82 	bl	8000754 <std>
 8000850:	68a0      	ldr	r0, [r4, #8]
 8000852:	2201      	movs	r2, #1
 8000854:	2109      	movs	r1, #9
 8000856:	f7ff ff7d 	bl	8000754 <std>
 800085a:	68e0      	ldr	r0, [r4, #12]
 800085c:	2202      	movs	r2, #2
 800085e:	2112      	movs	r1, #18
 8000860:	f7ff ff78 	bl	8000754 <std>
 8000864:	2301      	movs	r3, #1
 8000866:	61a3      	str	r3, [r4, #24]
 8000868:	e7d2      	b.n	8000810 <__sinit+0xc>
 800086a:	bf00      	nop
 800086c:	08001780 	.word	0x08001780
 8000870:	0800079d 	.word	0x0800079d

08000874 <__sfp>:
 8000874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000876:	4607      	mov	r7, r0
 8000878:	f7ff ffac 	bl	80007d4 <__sfp_lock_acquire>
 800087c:	4b1e      	ldr	r3, [pc, #120]	; (80008f8 <__sfp+0x84>)
 800087e:	681e      	ldr	r6, [r3, #0]
 8000880:	69b3      	ldr	r3, [r6, #24]
 8000882:	b913      	cbnz	r3, 800088a <__sfp+0x16>
 8000884:	4630      	mov	r0, r6
 8000886:	f7ff ffbd 	bl	8000804 <__sinit>
 800088a:	3648      	adds	r6, #72	; 0x48
 800088c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000890:	3b01      	subs	r3, #1
 8000892:	d503      	bpl.n	800089c <__sfp+0x28>
 8000894:	6833      	ldr	r3, [r6, #0]
 8000896:	b30b      	cbz	r3, 80008dc <__sfp+0x68>
 8000898:	6836      	ldr	r6, [r6, #0]
 800089a:	e7f7      	b.n	800088c <__sfp+0x18>
 800089c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008a0:	b9d5      	cbnz	r5, 80008d8 <__sfp+0x64>
 80008a2:	4b16      	ldr	r3, [pc, #88]	; (80008fc <__sfp+0x88>)
 80008a4:	60e3      	str	r3, [r4, #12]
 80008a6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80008aa:	6665      	str	r5, [r4, #100]	; 0x64
 80008ac:	f000 f86c 	bl	8000988 <__retarget_lock_init_recursive>
 80008b0:	f7ff ff96 	bl	80007e0 <__sfp_lock_release>
 80008b4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80008b8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80008bc:	6025      	str	r5, [r4, #0]
 80008be:	61a5      	str	r5, [r4, #24]
 80008c0:	2208      	movs	r2, #8
 80008c2:	4629      	mov	r1, r5
 80008c4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008c8:	f000 f86a 	bl	80009a0 <memset>
 80008cc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008d0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008d4:	4620      	mov	r0, r4
 80008d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008d8:	3468      	adds	r4, #104	; 0x68
 80008da:	e7d9      	b.n	8000890 <__sfp+0x1c>
 80008dc:	2104      	movs	r1, #4
 80008de:	4638      	mov	r0, r7
 80008e0:	f7ff ff62 	bl	80007a8 <__sfmoreglue>
 80008e4:	4604      	mov	r4, r0
 80008e6:	6030      	str	r0, [r6, #0]
 80008e8:	2800      	cmp	r0, #0
 80008ea:	d1d5      	bne.n	8000898 <__sfp+0x24>
 80008ec:	f7ff ff78 	bl	80007e0 <__sfp_lock_release>
 80008f0:	230c      	movs	r3, #12
 80008f2:	603b      	str	r3, [r7, #0]
 80008f4:	e7ee      	b.n	80008d4 <__sfp+0x60>
 80008f6:	bf00      	nop
 80008f8:	08001780 	.word	0x08001780
 80008fc:	ffff0001 	.word	0xffff0001

08000900 <_fwalk_reent>:
 8000900:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000904:	4606      	mov	r6, r0
 8000906:	4688      	mov	r8, r1
 8000908:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800090c:	2700      	movs	r7, #0
 800090e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000912:	f1b9 0901 	subs.w	r9, r9, #1
 8000916:	d505      	bpl.n	8000924 <_fwalk_reent+0x24>
 8000918:	6824      	ldr	r4, [r4, #0]
 800091a:	2c00      	cmp	r4, #0
 800091c:	d1f7      	bne.n	800090e <_fwalk_reent+0xe>
 800091e:	4638      	mov	r0, r7
 8000920:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000924:	89ab      	ldrh	r3, [r5, #12]
 8000926:	2b01      	cmp	r3, #1
 8000928:	d907      	bls.n	800093a <_fwalk_reent+0x3a>
 800092a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800092e:	3301      	adds	r3, #1
 8000930:	d003      	beq.n	800093a <_fwalk_reent+0x3a>
 8000932:	4629      	mov	r1, r5
 8000934:	4630      	mov	r0, r6
 8000936:	47c0      	blx	r8
 8000938:	4307      	orrs	r7, r0
 800093a:	3568      	adds	r5, #104	; 0x68
 800093c:	e7e9      	b.n	8000912 <_fwalk_reent+0x12>
	...

08000940 <__libc_init_array>:
 8000940:	b570      	push	{r4, r5, r6, lr}
 8000942:	4d0d      	ldr	r5, [pc, #52]	; (8000978 <__libc_init_array+0x38>)
 8000944:	4c0d      	ldr	r4, [pc, #52]	; (800097c <__libc_init_array+0x3c>)
 8000946:	1b64      	subs	r4, r4, r5
 8000948:	10a4      	asrs	r4, r4, #2
 800094a:	2600      	movs	r6, #0
 800094c:	42a6      	cmp	r6, r4
 800094e:	d109      	bne.n	8000964 <__libc_init_array+0x24>
 8000950:	4d0b      	ldr	r5, [pc, #44]	; (8000980 <__libc_init_array+0x40>)
 8000952:	4c0c      	ldr	r4, [pc, #48]	; (8000984 <__libc_init_array+0x44>)
 8000954:	f000 fece 	bl	80016f4 <_init>
 8000958:	1b64      	subs	r4, r4, r5
 800095a:	10a4      	asrs	r4, r4, #2
 800095c:	2600      	movs	r6, #0
 800095e:	42a6      	cmp	r6, r4
 8000960:	d105      	bne.n	800096e <__libc_init_array+0x2e>
 8000962:	bd70      	pop	{r4, r5, r6, pc}
 8000964:	f855 3b04 	ldr.w	r3, [r5], #4
 8000968:	4798      	blx	r3
 800096a:	3601      	adds	r6, #1
 800096c:	e7ee      	b.n	800094c <__libc_init_array+0xc>
 800096e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000972:	4798      	blx	r3
 8000974:	3601      	adds	r6, #1
 8000976:	e7f2      	b.n	800095e <__libc_init_array+0x1e>
 8000978:	080017b8 	.word	0x080017b8
 800097c:	080017b8 	.word	0x080017b8
 8000980:	080017b8 	.word	0x080017b8
 8000984:	080017bc 	.word	0x080017bc

08000988 <__retarget_lock_init_recursive>:
 8000988:	4770      	bx	lr

0800098a <__retarget_lock_acquire_recursive>:
 800098a:	4770      	bx	lr

0800098c <__retarget_lock_release_recursive>:
 800098c:	4770      	bx	lr
	...

08000990 <malloc>:
 8000990:	4b02      	ldr	r3, [pc, #8]	; (800099c <malloc+0xc>)
 8000992:	4601      	mov	r1, r0
 8000994:	6818      	ldr	r0, [r3, #0]
 8000996:	f000 b875 	b.w	8000a84 <_malloc_r>
 800099a:	bf00      	nop
 800099c:	20000000 	.word	0x20000000

080009a0 <memset>:
 80009a0:	4402      	add	r2, r0
 80009a2:	4603      	mov	r3, r0
 80009a4:	4293      	cmp	r3, r2
 80009a6:	d100      	bne.n	80009aa <memset+0xa>
 80009a8:	4770      	bx	lr
 80009aa:	f803 1b01 	strb.w	r1, [r3], #1
 80009ae:	e7f9      	b.n	80009a4 <memset+0x4>

080009b0 <_free_r>:
 80009b0:	b538      	push	{r3, r4, r5, lr}
 80009b2:	4605      	mov	r5, r0
 80009b4:	2900      	cmp	r1, #0
 80009b6:	d041      	beq.n	8000a3c <_free_r+0x8c>
 80009b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009bc:	1f0c      	subs	r4, r1, #4
 80009be:	2b00      	cmp	r3, #0
 80009c0:	bfb8      	it	lt
 80009c2:	18e4      	addlt	r4, r4, r3
 80009c4:	f000 fb22 	bl	800100c <__malloc_lock>
 80009c8:	4a1d      	ldr	r2, [pc, #116]	; (8000a40 <_free_r+0x90>)
 80009ca:	6813      	ldr	r3, [r2, #0]
 80009cc:	b933      	cbnz	r3, 80009dc <_free_r+0x2c>
 80009ce:	6063      	str	r3, [r4, #4]
 80009d0:	6014      	str	r4, [r2, #0]
 80009d2:	4628      	mov	r0, r5
 80009d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009d8:	f000 bb1e 	b.w	8001018 <__malloc_unlock>
 80009dc:	42a3      	cmp	r3, r4
 80009de:	d908      	bls.n	80009f2 <_free_r+0x42>
 80009e0:	6820      	ldr	r0, [r4, #0]
 80009e2:	1821      	adds	r1, r4, r0
 80009e4:	428b      	cmp	r3, r1
 80009e6:	bf01      	itttt	eq
 80009e8:	6819      	ldreq	r1, [r3, #0]
 80009ea:	685b      	ldreq	r3, [r3, #4]
 80009ec:	1809      	addeq	r1, r1, r0
 80009ee:	6021      	streq	r1, [r4, #0]
 80009f0:	e7ed      	b.n	80009ce <_free_r+0x1e>
 80009f2:	461a      	mov	r2, r3
 80009f4:	685b      	ldr	r3, [r3, #4]
 80009f6:	b10b      	cbz	r3, 80009fc <_free_r+0x4c>
 80009f8:	42a3      	cmp	r3, r4
 80009fa:	d9fa      	bls.n	80009f2 <_free_r+0x42>
 80009fc:	6811      	ldr	r1, [r2, #0]
 80009fe:	1850      	adds	r0, r2, r1
 8000a00:	42a0      	cmp	r0, r4
 8000a02:	d10b      	bne.n	8000a1c <_free_r+0x6c>
 8000a04:	6820      	ldr	r0, [r4, #0]
 8000a06:	4401      	add	r1, r0
 8000a08:	1850      	adds	r0, r2, r1
 8000a0a:	4283      	cmp	r3, r0
 8000a0c:	6011      	str	r1, [r2, #0]
 8000a0e:	d1e0      	bne.n	80009d2 <_free_r+0x22>
 8000a10:	6818      	ldr	r0, [r3, #0]
 8000a12:	685b      	ldr	r3, [r3, #4]
 8000a14:	6053      	str	r3, [r2, #4]
 8000a16:	4401      	add	r1, r0
 8000a18:	6011      	str	r1, [r2, #0]
 8000a1a:	e7da      	b.n	80009d2 <_free_r+0x22>
 8000a1c:	d902      	bls.n	8000a24 <_free_r+0x74>
 8000a1e:	230c      	movs	r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
 8000a22:	e7d6      	b.n	80009d2 <_free_r+0x22>
 8000a24:	6820      	ldr	r0, [r4, #0]
 8000a26:	1821      	adds	r1, r4, r0
 8000a28:	428b      	cmp	r3, r1
 8000a2a:	bf04      	itt	eq
 8000a2c:	6819      	ldreq	r1, [r3, #0]
 8000a2e:	685b      	ldreq	r3, [r3, #4]
 8000a30:	6063      	str	r3, [r4, #4]
 8000a32:	bf04      	itt	eq
 8000a34:	1809      	addeq	r1, r1, r0
 8000a36:	6021      	streq	r1, [r4, #0]
 8000a38:	6054      	str	r4, [r2, #4]
 8000a3a:	e7ca      	b.n	80009d2 <_free_r+0x22>
 8000a3c:	bd38      	pop	{r3, r4, r5, pc}
 8000a3e:	bf00      	nop
 8000a40:	20000088 	.word	0x20000088

08000a44 <sbrk_aligned>:
 8000a44:	b570      	push	{r4, r5, r6, lr}
 8000a46:	4e0e      	ldr	r6, [pc, #56]	; (8000a80 <sbrk_aligned+0x3c>)
 8000a48:	460c      	mov	r4, r1
 8000a4a:	6831      	ldr	r1, [r6, #0]
 8000a4c:	4605      	mov	r5, r0
 8000a4e:	b911      	cbnz	r1, 8000a56 <sbrk_aligned+0x12>
 8000a50:	f000 f92e 	bl	8000cb0 <_sbrk_r>
 8000a54:	6030      	str	r0, [r6, #0]
 8000a56:	4621      	mov	r1, r4
 8000a58:	4628      	mov	r0, r5
 8000a5a:	f000 f929 	bl	8000cb0 <_sbrk_r>
 8000a5e:	1c43      	adds	r3, r0, #1
 8000a60:	d00a      	beq.n	8000a78 <sbrk_aligned+0x34>
 8000a62:	1cc4      	adds	r4, r0, #3
 8000a64:	f024 0403 	bic.w	r4, r4, #3
 8000a68:	42a0      	cmp	r0, r4
 8000a6a:	d007      	beq.n	8000a7c <sbrk_aligned+0x38>
 8000a6c:	1a21      	subs	r1, r4, r0
 8000a6e:	4628      	mov	r0, r5
 8000a70:	f000 f91e 	bl	8000cb0 <_sbrk_r>
 8000a74:	3001      	adds	r0, #1
 8000a76:	d101      	bne.n	8000a7c <sbrk_aligned+0x38>
 8000a78:	f04f 34ff 	mov.w	r4, #4294967295
 8000a7c:	4620      	mov	r0, r4
 8000a7e:	bd70      	pop	{r4, r5, r6, pc}
 8000a80:	2000008c 	.word	0x2000008c

08000a84 <_malloc_r>:
 8000a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a88:	1ccd      	adds	r5, r1, #3
 8000a8a:	f025 0503 	bic.w	r5, r5, #3
 8000a8e:	3508      	adds	r5, #8
 8000a90:	2d0c      	cmp	r5, #12
 8000a92:	bf38      	it	cc
 8000a94:	250c      	movcc	r5, #12
 8000a96:	2d00      	cmp	r5, #0
 8000a98:	4607      	mov	r7, r0
 8000a9a:	db01      	blt.n	8000aa0 <_malloc_r+0x1c>
 8000a9c:	42a9      	cmp	r1, r5
 8000a9e:	d905      	bls.n	8000aac <_malloc_r+0x28>
 8000aa0:	230c      	movs	r3, #12
 8000aa2:	603b      	str	r3, [r7, #0]
 8000aa4:	2600      	movs	r6, #0
 8000aa6:	4630      	mov	r0, r6
 8000aa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000aac:	4e2e      	ldr	r6, [pc, #184]	; (8000b68 <_malloc_r+0xe4>)
 8000aae:	f000 faad 	bl	800100c <__malloc_lock>
 8000ab2:	6833      	ldr	r3, [r6, #0]
 8000ab4:	461c      	mov	r4, r3
 8000ab6:	bb34      	cbnz	r4, 8000b06 <_malloc_r+0x82>
 8000ab8:	4629      	mov	r1, r5
 8000aba:	4638      	mov	r0, r7
 8000abc:	f7ff ffc2 	bl	8000a44 <sbrk_aligned>
 8000ac0:	1c43      	adds	r3, r0, #1
 8000ac2:	4604      	mov	r4, r0
 8000ac4:	d14d      	bne.n	8000b62 <_malloc_r+0xde>
 8000ac6:	6834      	ldr	r4, [r6, #0]
 8000ac8:	4626      	mov	r6, r4
 8000aca:	2e00      	cmp	r6, #0
 8000acc:	d140      	bne.n	8000b50 <_malloc_r+0xcc>
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	4631      	mov	r1, r6
 8000ad2:	4638      	mov	r0, r7
 8000ad4:	eb04 0803 	add.w	r8, r4, r3
 8000ad8:	f000 f8ea 	bl	8000cb0 <_sbrk_r>
 8000adc:	4580      	cmp	r8, r0
 8000ade:	d13a      	bne.n	8000b56 <_malloc_r+0xd2>
 8000ae0:	6821      	ldr	r1, [r4, #0]
 8000ae2:	3503      	adds	r5, #3
 8000ae4:	1a6d      	subs	r5, r5, r1
 8000ae6:	f025 0503 	bic.w	r5, r5, #3
 8000aea:	3508      	adds	r5, #8
 8000aec:	2d0c      	cmp	r5, #12
 8000aee:	bf38      	it	cc
 8000af0:	250c      	movcc	r5, #12
 8000af2:	4629      	mov	r1, r5
 8000af4:	4638      	mov	r0, r7
 8000af6:	f7ff ffa5 	bl	8000a44 <sbrk_aligned>
 8000afa:	3001      	adds	r0, #1
 8000afc:	d02b      	beq.n	8000b56 <_malloc_r+0xd2>
 8000afe:	6823      	ldr	r3, [r4, #0]
 8000b00:	442b      	add	r3, r5
 8000b02:	6023      	str	r3, [r4, #0]
 8000b04:	e00e      	b.n	8000b24 <_malloc_r+0xa0>
 8000b06:	6822      	ldr	r2, [r4, #0]
 8000b08:	1b52      	subs	r2, r2, r5
 8000b0a:	d41e      	bmi.n	8000b4a <_malloc_r+0xc6>
 8000b0c:	2a0b      	cmp	r2, #11
 8000b0e:	d916      	bls.n	8000b3e <_malloc_r+0xba>
 8000b10:	1961      	adds	r1, r4, r5
 8000b12:	42a3      	cmp	r3, r4
 8000b14:	6025      	str	r5, [r4, #0]
 8000b16:	bf18      	it	ne
 8000b18:	6059      	strne	r1, [r3, #4]
 8000b1a:	6863      	ldr	r3, [r4, #4]
 8000b1c:	bf08      	it	eq
 8000b1e:	6031      	streq	r1, [r6, #0]
 8000b20:	5162      	str	r2, [r4, r5]
 8000b22:	604b      	str	r3, [r1, #4]
 8000b24:	4638      	mov	r0, r7
 8000b26:	f104 060b 	add.w	r6, r4, #11
 8000b2a:	f000 fa75 	bl	8001018 <__malloc_unlock>
 8000b2e:	f026 0607 	bic.w	r6, r6, #7
 8000b32:	1d23      	adds	r3, r4, #4
 8000b34:	1af2      	subs	r2, r6, r3
 8000b36:	d0b6      	beq.n	8000aa6 <_malloc_r+0x22>
 8000b38:	1b9b      	subs	r3, r3, r6
 8000b3a:	50a3      	str	r3, [r4, r2]
 8000b3c:	e7b3      	b.n	8000aa6 <_malloc_r+0x22>
 8000b3e:	6862      	ldr	r2, [r4, #4]
 8000b40:	42a3      	cmp	r3, r4
 8000b42:	bf0c      	ite	eq
 8000b44:	6032      	streq	r2, [r6, #0]
 8000b46:	605a      	strne	r2, [r3, #4]
 8000b48:	e7ec      	b.n	8000b24 <_malloc_r+0xa0>
 8000b4a:	4623      	mov	r3, r4
 8000b4c:	6864      	ldr	r4, [r4, #4]
 8000b4e:	e7b2      	b.n	8000ab6 <_malloc_r+0x32>
 8000b50:	4634      	mov	r4, r6
 8000b52:	6876      	ldr	r6, [r6, #4]
 8000b54:	e7b9      	b.n	8000aca <_malloc_r+0x46>
 8000b56:	230c      	movs	r3, #12
 8000b58:	603b      	str	r3, [r7, #0]
 8000b5a:	4638      	mov	r0, r7
 8000b5c:	f000 fa5c 	bl	8001018 <__malloc_unlock>
 8000b60:	e7a1      	b.n	8000aa6 <_malloc_r+0x22>
 8000b62:	6025      	str	r5, [r4, #0]
 8000b64:	e7de      	b.n	8000b24 <_malloc_r+0xa0>
 8000b66:	bf00      	nop
 8000b68:	20000088 	.word	0x20000088

08000b6c <iprintf>:
 8000b6c:	b40f      	push	{r0, r1, r2, r3}
 8000b6e:	4b0a      	ldr	r3, [pc, #40]	; (8000b98 <iprintf+0x2c>)
 8000b70:	b513      	push	{r0, r1, r4, lr}
 8000b72:	681c      	ldr	r4, [r3, #0]
 8000b74:	b124      	cbz	r4, 8000b80 <iprintf+0x14>
 8000b76:	69a3      	ldr	r3, [r4, #24]
 8000b78:	b913      	cbnz	r3, 8000b80 <iprintf+0x14>
 8000b7a:	4620      	mov	r0, r4
 8000b7c:	f7ff fe42 	bl	8000804 <__sinit>
 8000b80:	ab05      	add	r3, sp, #20
 8000b82:	9a04      	ldr	r2, [sp, #16]
 8000b84:	68a1      	ldr	r1, [r4, #8]
 8000b86:	9301      	str	r3, [sp, #4]
 8000b88:	4620      	mov	r0, r4
 8000b8a:	f000 fa73 	bl	8001074 <_vfiprintf_r>
 8000b8e:	b002      	add	sp, #8
 8000b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b94:	b004      	add	sp, #16
 8000b96:	4770      	bx	lr
 8000b98:	20000000 	.word	0x20000000

08000b9c <putchar>:
 8000b9c:	b538      	push	{r3, r4, r5, lr}
 8000b9e:	4b08      	ldr	r3, [pc, #32]	; (8000bc0 <putchar+0x24>)
 8000ba0:	681c      	ldr	r4, [r3, #0]
 8000ba2:	4605      	mov	r5, r0
 8000ba4:	b124      	cbz	r4, 8000bb0 <putchar+0x14>
 8000ba6:	69a3      	ldr	r3, [r4, #24]
 8000ba8:	b913      	cbnz	r3, 8000bb0 <putchar+0x14>
 8000baa:	4620      	mov	r0, r4
 8000bac:	f7ff fe2a 	bl	8000804 <__sinit>
 8000bb0:	68a2      	ldr	r2, [r4, #8]
 8000bb2:	4629      	mov	r1, r5
 8000bb4:	4620      	mov	r0, r4
 8000bb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bba:	f000 bd1f 	b.w	80015fc <_putc_r>
 8000bbe:	bf00      	nop
 8000bc0:	20000000 	.word	0x20000000

08000bc4 <_puts_r>:
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	460e      	mov	r6, r1
 8000bc8:	4605      	mov	r5, r0
 8000bca:	b118      	cbz	r0, 8000bd4 <_puts_r+0x10>
 8000bcc:	6983      	ldr	r3, [r0, #24]
 8000bce:	b90b      	cbnz	r3, 8000bd4 <_puts_r+0x10>
 8000bd0:	f7ff fe18 	bl	8000804 <__sinit>
 8000bd4:	69ab      	ldr	r3, [r5, #24]
 8000bd6:	68ac      	ldr	r4, [r5, #8]
 8000bd8:	b913      	cbnz	r3, 8000be0 <_puts_r+0x1c>
 8000bda:	4628      	mov	r0, r5
 8000bdc:	f7ff fe12 	bl	8000804 <__sinit>
 8000be0:	4b2c      	ldr	r3, [pc, #176]	; (8000c94 <_puts_r+0xd0>)
 8000be2:	429c      	cmp	r4, r3
 8000be4:	d120      	bne.n	8000c28 <_puts_r+0x64>
 8000be6:	686c      	ldr	r4, [r5, #4]
 8000be8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bea:	07db      	lsls	r3, r3, #31
 8000bec:	d405      	bmi.n	8000bfa <_puts_r+0x36>
 8000bee:	89a3      	ldrh	r3, [r4, #12]
 8000bf0:	0598      	lsls	r0, r3, #22
 8000bf2:	d402      	bmi.n	8000bfa <_puts_r+0x36>
 8000bf4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bf6:	f7ff fec8 	bl	800098a <__retarget_lock_acquire_recursive>
 8000bfa:	89a3      	ldrh	r3, [r4, #12]
 8000bfc:	0719      	lsls	r1, r3, #28
 8000bfe:	d51d      	bpl.n	8000c3c <_puts_r+0x78>
 8000c00:	6923      	ldr	r3, [r4, #16]
 8000c02:	b1db      	cbz	r3, 8000c3c <_puts_r+0x78>
 8000c04:	3e01      	subs	r6, #1
 8000c06:	68a3      	ldr	r3, [r4, #8]
 8000c08:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000c0c:	3b01      	subs	r3, #1
 8000c0e:	60a3      	str	r3, [r4, #8]
 8000c10:	bb39      	cbnz	r1, 8000c62 <_puts_r+0x9e>
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	da38      	bge.n	8000c88 <_puts_r+0xc4>
 8000c16:	4622      	mov	r2, r4
 8000c18:	210a      	movs	r1, #10
 8000c1a:	4628      	mov	r0, r5
 8000c1c:	f000 f89c 	bl	8000d58 <__swbuf_r>
 8000c20:	3001      	adds	r0, #1
 8000c22:	d011      	beq.n	8000c48 <_puts_r+0x84>
 8000c24:	250a      	movs	r5, #10
 8000c26:	e011      	b.n	8000c4c <_puts_r+0x88>
 8000c28:	4b1b      	ldr	r3, [pc, #108]	; (8000c98 <_puts_r+0xd4>)
 8000c2a:	429c      	cmp	r4, r3
 8000c2c:	d101      	bne.n	8000c32 <_puts_r+0x6e>
 8000c2e:	68ac      	ldr	r4, [r5, #8]
 8000c30:	e7da      	b.n	8000be8 <_puts_r+0x24>
 8000c32:	4b1a      	ldr	r3, [pc, #104]	; (8000c9c <_puts_r+0xd8>)
 8000c34:	429c      	cmp	r4, r3
 8000c36:	bf08      	it	eq
 8000c38:	68ec      	ldreq	r4, [r5, #12]
 8000c3a:	e7d5      	b.n	8000be8 <_puts_r+0x24>
 8000c3c:	4621      	mov	r1, r4
 8000c3e:	4628      	mov	r0, r5
 8000c40:	f000 f8ee 	bl	8000e20 <__swsetup_r>
 8000c44:	2800      	cmp	r0, #0
 8000c46:	d0dd      	beq.n	8000c04 <_puts_r+0x40>
 8000c48:	f04f 35ff 	mov.w	r5, #4294967295
 8000c4c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000c4e:	07da      	lsls	r2, r3, #31
 8000c50:	d405      	bmi.n	8000c5e <_puts_r+0x9a>
 8000c52:	89a3      	ldrh	r3, [r4, #12]
 8000c54:	059b      	lsls	r3, r3, #22
 8000c56:	d402      	bmi.n	8000c5e <_puts_r+0x9a>
 8000c58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c5a:	f7ff fe97 	bl	800098c <__retarget_lock_release_recursive>
 8000c5e:	4628      	mov	r0, r5
 8000c60:	bd70      	pop	{r4, r5, r6, pc}
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	da04      	bge.n	8000c70 <_puts_r+0xac>
 8000c66:	69a2      	ldr	r2, [r4, #24]
 8000c68:	429a      	cmp	r2, r3
 8000c6a:	dc06      	bgt.n	8000c7a <_puts_r+0xb6>
 8000c6c:	290a      	cmp	r1, #10
 8000c6e:	d004      	beq.n	8000c7a <_puts_r+0xb6>
 8000c70:	6823      	ldr	r3, [r4, #0]
 8000c72:	1c5a      	adds	r2, r3, #1
 8000c74:	6022      	str	r2, [r4, #0]
 8000c76:	7019      	strb	r1, [r3, #0]
 8000c78:	e7c5      	b.n	8000c06 <_puts_r+0x42>
 8000c7a:	4622      	mov	r2, r4
 8000c7c:	4628      	mov	r0, r5
 8000c7e:	f000 f86b 	bl	8000d58 <__swbuf_r>
 8000c82:	3001      	adds	r0, #1
 8000c84:	d1bf      	bne.n	8000c06 <_puts_r+0x42>
 8000c86:	e7df      	b.n	8000c48 <_puts_r+0x84>
 8000c88:	6823      	ldr	r3, [r4, #0]
 8000c8a:	250a      	movs	r5, #10
 8000c8c:	1c5a      	adds	r2, r3, #1
 8000c8e:	6022      	str	r2, [r4, #0]
 8000c90:	701d      	strb	r5, [r3, #0]
 8000c92:	e7db      	b.n	8000c4c <_puts_r+0x88>
 8000c94:	08001740 	.word	0x08001740
 8000c98:	08001760 	.word	0x08001760
 8000c9c:	08001720 	.word	0x08001720

08000ca0 <puts>:
 8000ca0:	4b02      	ldr	r3, [pc, #8]	; (8000cac <puts+0xc>)
 8000ca2:	4601      	mov	r1, r0
 8000ca4:	6818      	ldr	r0, [r3, #0]
 8000ca6:	f7ff bf8d 	b.w	8000bc4 <_puts_r>
 8000caa:	bf00      	nop
 8000cac:	20000000 	.word	0x20000000

08000cb0 <_sbrk_r>:
 8000cb0:	b538      	push	{r3, r4, r5, lr}
 8000cb2:	4d06      	ldr	r5, [pc, #24]	; (8000ccc <_sbrk_r+0x1c>)
 8000cb4:	2300      	movs	r3, #0
 8000cb6:	4604      	mov	r4, r0
 8000cb8:	4608      	mov	r0, r1
 8000cba:	602b      	str	r3, [r5, #0]
 8000cbc:	f7ff fc14 	bl	80004e8 <_sbrk>
 8000cc0:	1c43      	adds	r3, r0, #1
 8000cc2:	d102      	bne.n	8000cca <_sbrk_r+0x1a>
 8000cc4:	682b      	ldr	r3, [r5, #0]
 8000cc6:	b103      	cbz	r3, 8000cca <_sbrk_r+0x1a>
 8000cc8:	6023      	str	r3, [r4, #0]
 8000cca:	bd38      	pop	{r3, r4, r5, pc}
 8000ccc:	20000090 	.word	0x20000090

08000cd0 <__sread>:
 8000cd0:	b510      	push	{r4, lr}
 8000cd2:	460c      	mov	r4, r1
 8000cd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cd8:	f000 fcd8 	bl	800168c <_read_r>
 8000cdc:	2800      	cmp	r0, #0
 8000cde:	bfab      	itete	ge
 8000ce0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ce2:	89a3      	ldrhlt	r3, [r4, #12]
 8000ce4:	181b      	addge	r3, r3, r0
 8000ce6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000cea:	bfac      	ite	ge
 8000cec:	6563      	strge	r3, [r4, #84]	; 0x54
 8000cee:	81a3      	strhlt	r3, [r4, #12]
 8000cf0:	bd10      	pop	{r4, pc}

08000cf2 <__swrite>:
 8000cf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cf6:	461f      	mov	r7, r3
 8000cf8:	898b      	ldrh	r3, [r1, #12]
 8000cfa:	05db      	lsls	r3, r3, #23
 8000cfc:	4605      	mov	r5, r0
 8000cfe:	460c      	mov	r4, r1
 8000d00:	4616      	mov	r6, r2
 8000d02:	d505      	bpl.n	8000d10 <__swrite+0x1e>
 8000d04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d08:	2302      	movs	r3, #2
 8000d0a:	2200      	movs	r2, #0
 8000d0c:	f000 f906 	bl	8000f1c <_lseek_r>
 8000d10:	89a3      	ldrh	r3, [r4, #12]
 8000d12:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d16:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d1a:	81a3      	strh	r3, [r4, #12]
 8000d1c:	4632      	mov	r2, r6
 8000d1e:	463b      	mov	r3, r7
 8000d20:	4628      	mov	r0, r5
 8000d22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d26:	f000 b869 	b.w	8000dfc <_write_r>

08000d2a <__sseek>:
 8000d2a:	b510      	push	{r4, lr}
 8000d2c:	460c      	mov	r4, r1
 8000d2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d32:	f000 f8f3 	bl	8000f1c <_lseek_r>
 8000d36:	1c43      	adds	r3, r0, #1
 8000d38:	89a3      	ldrh	r3, [r4, #12]
 8000d3a:	bf15      	itete	ne
 8000d3c:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d3e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d42:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d46:	81a3      	strheq	r3, [r4, #12]
 8000d48:	bf18      	it	ne
 8000d4a:	81a3      	strhne	r3, [r4, #12]
 8000d4c:	bd10      	pop	{r4, pc}

08000d4e <__sclose>:
 8000d4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d52:	f000 b8d3 	b.w	8000efc <_close_r>
	...

08000d58 <__swbuf_r>:
 8000d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d5a:	460e      	mov	r6, r1
 8000d5c:	4614      	mov	r4, r2
 8000d5e:	4605      	mov	r5, r0
 8000d60:	b118      	cbz	r0, 8000d6a <__swbuf_r+0x12>
 8000d62:	6983      	ldr	r3, [r0, #24]
 8000d64:	b90b      	cbnz	r3, 8000d6a <__swbuf_r+0x12>
 8000d66:	f7ff fd4d 	bl	8000804 <__sinit>
 8000d6a:	4b21      	ldr	r3, [pc, #132]	; (8000df0 <__swbuf_r+0x98>)
 8000d6c:	429c      	cmp	r4, r3
 8000d6e:	d12b      	bne.n	8000dc8 <__swbuf_r+0x70>
 8000d70:	686c      	ldr	r4, [r5, #4]
 8000d72:	69a3      	ldr	r3, [r4, #24]
 8000d74:	60a3      	str	r3, [r4, #8]
 8000d76:	89a3      	ldrh	r3, [r4, #12]
 8000d78:	071a      	lsls	r2, r3, #28
 8000d7a:	d52f      	bpl.n	8000ddc <__swbuf_r+0x84>
 8000d7c:	6923      	ldr	r3, [r4, #16]
 8000d7e:	b36b      	cbz	r3, 8000ddc <__swbuf_r+0x84>
 8000d80:	6923      	ldr	r3, [r4, #16]
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	1ac0      	subs	r0, r0, r3
 8000d86:	6963      	ldr	r3, [r4, #20]
 8000d88:	b2f6      	uxtb	r6, r6
 8000d8a:	4283      	cmp	r3, r0
 8000d8c:	4637      	mov	r7, r6
 8000d8e:	dc04      	bgt.n	8000d9a <__swbuf_r+0x42>
 8000d90:	4621      	mov	r1, r4
 8000d92:	4628      	mov	r0, r5
 8000d94:	f7ff fc90 	bl	80006b8 <_fflush_r>
 8000d98:	bb30      	cbnz	r0, 8000de8 <__swbuf_r+0x90>
 8000d9a:	68a3      	ldr	r3, [r4, #8]
 8000d9c:	3b01      	subs	r3, #1
 8000d9e:	60a3      	str	r3, [r4, #8]
 8000da0:	6823      	ldr	r3, [r4, #0]
 8000da2:	1c5a      	adds	r2, r3, #1
 8000da4:	6022      	str	r2, [r4, #0]
 8000da6:	701e      	strb	r6, [r3, #0]
 8000da8:	6963      	ldr	r3, [r4, #20]
 8000daa:	3001      	adds	r0, #1
 8000dac:	4283      	cmp	r3, r0
 8000dae:	d004      	beq.n	8000dba <__swbuf_r+0x62>
 8000db0:	89a3      	ldrh	r3, [r4, #12]
 8000db2:	07db      	lsls	r3, r3, #31
 8000db4:	d506      	bpl.n	8000dc4 <__swbuf_r+0x6c>
 8000db6:	2e0a      	cmp	r6, #10
 8000db8:	d104      	bne.n	8000dc4 <__swbuf_r+0x6c>
 8000dba:	4621      	mov	r1, r4
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f7ff fc7b 	bl	80006b8 <_fflush_r>
 8000dc2:	b988      	cbnz	r0, 8000de8 <__swbuf_r+0x90>
 8000dc4:	4638      	mov	r0, r7
 8000dc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000dc8:	4b0a      	ldr	r3, [pc, #40]	; (8000df4 <__swbuf_r+0x9c>)
 8000dca:	429c      	cmp	r4, r3
 8000dcc:	d101      	bne.n	8000dd2 <__swbuf_r+0x7a>
 8000dce:	68ac      	ldr	r4, [r5, #8]
 8000dd0:	e7cf      	b.n	8000d72 <__swbuf_r+0x1a>
 8000dd2:	4b09      	ldr	r3, [pc, #36]	; (8000df8 <__swbuf_r+0xa0>)
 8000dd4:	429c      	cmp	r4, r3
 8000dd6:	bf08      	it	eq
 8000dd8:	68ec      	ldreq	r4, [r5, #12]
 8000dda:	e7ca      	b.n	8000d72 <__swbuf_r+0x1a>
 8000ddc:	4621      	mov	r1, r4
 8000dde:	4628      	mov	r0, r5
 8000de0:	f000 f81e 	bl	8000e20 <__swsetup_r>
 8000de4:	2800      	cmp	r0, #0
 8000de6:	d0cb      	beq.n	8000d80 <__swbuf_r+0x28>
 8000de8:	f04f 37ff 	mov.w	r7, #4294967295
 8000dec:	e7ea      	b.n	8000dc4 <__swbuf_r+0x6c>
 8000dee:	bf00      	nop
 8000df0:	08001740 	.word	0x08001740
 8000df4:	08001760 	.word	0x08001760
 8000df8:	08001720 	.word	0x08001720

08000dfc <_write_r>:
 8000dfc:	b538      	push	{r3, r4, r5, lr}
 8000dfe:	4d07      	ldr	r5, [pc, #28]	; (8000e1c <_write_r+0x20>)
 8000e00:	4604      	mov	r4, r0
 8000e02:	4608      	mov	r0, r1
 8000e04:	4611      	mov	r1, r2
 8000e06:	2200      	movs	r2, #0
 8000e08:	602a      	str	r2, [r5, #0]
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	f7ff fb1f 	bl	800044e <_write>
 8000e10:	1c43      	adds	r3, r0, #1
 8000e12:	d102      	bne.n	8000e1a <_write_r+0x1e>
 8000e14:	682b      	ldr	r3, [r5, #0]
 8000e16:	b103      	cbz	r3, 8000e1a <_write_r+0x1e>
 8000e18:	6023      	str	r3, [r4, #0]
 8000e1a:	bd38      	pop	{r3, r4, r5, pc}
 8000e1c:	20000090 	.word	0x20000090

08000e20 <__swsetup_r>:
 8000e20:	4b32      	ldr	r3, [pc, #200]	; (8000eec <__swsetup_r+0xcc>)
 8000e22:	b570      	push	{r4, r5, r6, lr}
 8000e24:	681d      	ldr	r5, [r3, #0]
 8000e26:	4606      	mov	r6, r0
 8000e28:	460c      	mov	r4, r1
 8000e2a:	b125      	cbz	r5, 8000e36 <__swsetup_r+0x16>
 8000e2c:	69ab      	ldr	r3, [r5, #24]
 8000e2e:	b913      	cbnz	r3, 8000e36 <__swsetup_r+0x16>
 8000e30:	4628      	mov	r0, r5
 8000e32:	f7ff fce7 	bl	8000804 <__sinit>
 8000e36:	4b2e      	ldr	r3, [pc, #184]	; (8000ef0 <__swsetup_r+0xd0>)
 8000e38:	429c      	cmp	r4, r3
 8000e3a:	d10f      	bne.n	8000e5c <__swsetup_r+0x3c>
 8000e3c:	686c      	ldr	r4, [r5, #4]
 8000e3e:	89a3      	ldrh	r3, [r4, #12]
 8000e40:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e44:	0719      	lsls	r1, r3, #28
 8000e46:	d42c      	bmi.n	8000ea2 <__swsetup_r+0x82>
 8000e48:	06dd      	lsls	r5, r3, #27
 8000e4a:	d411      	bmi.n	8000e70 <__swsetup_r+0x50>
 8000e4c:	2309      	movs	r3, #9
 8000e4e:	6033      	str	r3, [r6, #0]
 8000e50:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000e54:	81a3      	strh	r3, [r4, #12]
 8000e56:	f04f 30ff 	mov.w	r0, #4294967295
 8000e5a:	e03e      	b.n	8000eda <__swsetup_r+0xba>
 8000e5c:	4b25      	ldr	r3, [pc, #148]	; (8000ef4 <__swsetup_r+0xd4>)
 8000e5e:	429c      	cmp	r4, r3
 8000e60:	d101      	bne.n	8000e66 <__swsetup_r+0x46>
 8000e62:	68ac      	ldr	r4, [r5, #8]
 8000e64:	e7eb      	b.n	8000e3e <__swsetup_r+0x1e>
 8000e66:	4b24      	ldr	r3, [pc, #144]	; (8000ef8 <__swsetup_r+0xd8>)
 8000e68:	429c      	cmp	r4, r3
 8000e6a:	bf08      	it	eq
 8000e6c:	68ec      	ldreq	r4, [r5, #12]
 8000e6e:	e7e6      	b.n	8000e3e <__swsetup_r+0x1e>
 8000e70:	0758      	lsls	r0, r3, #29
 8000e72:	d512      	bpl.n	8000e9a <__swsetup_r+0x7a>
 8000e74:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e76:	b141      	cbz	r1, 8000e8a <__swsetup_r+0x6a>
 8000e78:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e7c:	4299      	cmp	r1, r3
 8000e7e:	d002      	beq.n	8000e86 <__swsetup_r+0x66>
 8000e80:	4630      	mov	r0, r6
 8000e82:	f7ff fd95 	bl	80009b0 <_free_r>
 8000e86:	2300      	movs	r3, #0
 8000e88:	6363      	str	r3, [r4, #52]	; 0x34
 8000e8a:	89a3      	ldrh	r3, [r4, #12]
 8000e8c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000e90:	81a3      	strh	r3, [r4, #12]
 8000e92:	2300      	movs	r3, #0
 8000e94:	6063      	str	r3, [r4, #4]
 8000e96:	6923      	ldr	r3, [r4, #16]
 8000e98:	6023      	str	r3, [r4, #0]
 8000e9a:	89a3      	ldrh	r3, [r4, #12]
 8000e9c:	f043 0308 	orr.w	r3, r3, #8
 8000ea0:	81a3      	strh	r3, [r4, #12]
 8000ea2:	6923      	ldr	r3, [r4, #16]
 8000ea4:	b94b      	cbnz	r3, 8000eba <__swsetup_r+0x9a>
 8000ea6:	89a3      	ldrh	r3, [r4, #12]
 8000ea8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000eac:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000eb0:	d003      	beq.n	8000eba <__swsetup_r+0x9a>
 8000eb2:	4621      	mov	r1, r4
 8000eb4:	4630      	mov	r0, r6
 8000eb6:	f000 f869 	bl	8000f8c <__smakebuf_r>
 8000eba:	89a0      	ldrh	r0, [r4, #12]
 8000ebc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ec0:	f010 0301 	ands.w	r3, r0, #1
 8000ec4:	d00a      	beq.n	8000edc <__swsetup_r+0xbc>
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	60a3      	str	r3, [r4, #8]
 8000eca:	6963      	ldr	r3, [r4, #20]
 8000ecc:	425b      	negs	r3, r3
 8000ece:	61a3      	str	r3, [r4, #24]
 8000ed0:	6923      	ldr	r3, [r4, #16]
 8000ed2:	b943      	cbnz	r3, 8000ee6 <__swsetup_r+0xc6>
 8000ed4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000ed8:	d1ba      	bne.n	8000e50 <__swsetup_r+0x30>
 8000eda:	bd70      	pop	{r4, r5, r6, pc}
 8000edc:	0781      	lsls	r1, r0, #30
 8000ede:	bf58      	it	pl
 8000ee0:	6963      	ldrpl	r3, [r4, #20]
 8000ee2:	60a3      	str	r3, [r4, #8]
 8000ee4:	e7f4      	b.n	8000ed0 <__swsetup_r+0xb0>
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f7      	b.n	8000eda <__swsetup_r+0xba>
 8000eea:	bf00      	nop
 8000eec:	20000000 	.word	0x20000000
 8000ef0:	08001740 	.word	0x08001740
 8000ef4:	08001760 	.word	0x08001760
 8000ef8:	08001720 	.word	0x08001720

08000efc <_close_r>:
 8000efc:	b538      	push	{r3, r4, r5, lr}
 8000efe:	4d06      	ldr	r5, [pc, #24]	; (8000f18 <_close_r+0x1c>)
 8000f00:	2300      	movs	r3, #0
 8000f02:	4604      	mov	r4, r0
 8000f04:	4608      	mov	r0, r1
 8000f06:	602b      	str	r3, [r5, #0]
 8000f08:	f7ff fabd 	bl	8000486 <_close>
 8000f0c:	1c43      	adds	r3, r0, #1
 8000f0e:	d102      	bne.n	8000f16 <_close_r+0x1a>
 8000f10:	682b      	ldr	r3, [r5, #0]
 8000f12:	b103      	cbz	r3, 8000f16 <_close_r+0x1a>
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	bd38      	pop	{r3, r4, r5, pc}
 8000f18:	20000090 	.word	0x20000090

08000f1c <_lseek_r>:
 8000f1c:	b538      	push	{r3, r4, r5, lr}
 8000f1e:	4d07      	ldr	r5, [pc, #28]	; (8000f3c <_lseek_r+0x20>)
 8000f20:	4604      	mov	r4, r0
 8000f22:	4608      	mov	r0, r1
 8000f24:	4611      	mov	r1, r2
 8000f26:	2200      	movs	r2, #0
 8000f28:	602a      	str	r2, [r5, #0]
 8000f2a:	461a      	mov	r2, r3
 8000f2c:	f7ff facf 	bl	80004ce <_lseek>
 8000f30:	1c43      	adds	r3, r0, #1
 8000f32:	d102      	bne.n	8000f3a <_lseek_r+0x1e>
 8000f34:	682b      	ldr	r3, [r5, #0]
 8000f36:	b103      	cbz	r3, 8000f3a <_lseek_r+0x1e>
 8000f38:	6023      	str	r3, [r4, #0]
 8000f3a:	bd38      	pop	{r3, r4, r5, pc}
 8000f3c:	20000090 	.word	0x20000090

08000f40 <__swhatbuf_r>:
 8000f40:	b570      	push	{r4, r5, r6, lr}
 8000f42:	460e      	mov	r6, r1
 8000f44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f48:	2900      	cmp	r1, #0
 8000f4a:	b096      	sub	sp, #88	; 0x58
 8000f4c:	4614      	mov	r4, r2
 8000f4e:	461d      	mov	r5, r3
 8000f50:	da08      	bge.n	8000f64 <__swhatbuf_r+0x24>
 8000f52:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000f56:	2200      	movs	r2, #0
 8000f58:	602a      	str	r2, [r5, #0]
 8000f5a:	061a      	lsls	r2, r3, #24
 8000f5c:	d410      	bmi.n	8000f80 <__swhatbuf_r+0x40>
 8000f5e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f62:	e00e      	b.n	8000f82 <__swhatbuf_r+0x42>
 8000f64:	466a      	mov	r2, sp
 8000f66:	f000 fba3 	bl	80016b0 <_fstat_r>
 8000f6a:	2800      	cmp	r0, #0
 8000f6c:	dbf1      	blt.n	8000f52 <__swhatbuf_r+0x12>
 8000f6e:	9a01      	ldr	r2, [sp, #4]
 8000f70:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000f74:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000f78:	425a      	negs	r2, r3
 8000f7a:	415a      	adcs	r2, r3
 8000f7c:	602a      	str	r2, [r5, #0]
 8000f7e:	e7ee      	b.n	8000f5e <__swhatbuf_r+0x1e>
 8000f80:	2340      	movs	r3, #64	; 0x40
 8000f82:	2000      	movs	r0, #0
 8000f84:	6023      	str	r3, [r4, #0]
 8000f86:	b016      	add	sp, #88	; 0x58
 8000f88:	bd70      	pop	{r4, r5, r6, pc}
	...

08000f8c <__smakebuf_r>:
 8000f8c:	898b      	ldrh	r3, [r1, #12]
 8000f8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000f90:	079d      	lsls	r5, r3, #30
 8000f92:	4606      	mov	r6, r0
 8000f94:	460c      	mov	r4, r1
 8000f96:	d507      	bpl.n	8000fa8 <__smakebuf_r+0x1c>
 8000f98:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000f9c:	6023      	str	r3, [r4, #0]
 8000f9e:	6123      	str	r3, [r4, #16]
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	6163      	str	r3, [r4, #20]
 8000fa4:	b002      	add	sp, #8
 8000fa6:	bd70      	pop	{r4, r5, r6, pc}
 8000fa8:	ab01      	add	r3, sp, #4
 8000faa:	466a      	mov	r2, sp
 8000fac:	f7ff ffc8 	bl	8000f40 <__swhatbuf_r>
 8000fb0:	9900      	ldr	r1, [sp, #0]
 8000fb2:	4605      	mov	r5, r0
 8000fb4:	4630      	mov	r0, r6
 8000fb6:	f7ff fd65 	bl	8000a84 <_malloc_r>
 8000fba:	b948      	cbnz	r0, 8000fd0 <__smakebuf_r+0x44>
 8000fbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fc0:	059a      	lsls	r2, r3, #22
 8000fc2:	d4ef      	bmi.n	8000fa4 <__smakebuf_r+0x18>
 8000fc4:	f023 0303 	bic.w	r3, r3, #3
 8000fc8:	f043 0302 	orr.w	r3, r3, #2
 8000fcc:	81a3      	strh	r3, [r4, #12]
 8000fce:	e7e3      	b.n	8000f98 <__smakebuf_r+0xc>
 8000fd0:	4b0d      	ldr	r3, [pc, #52]	; (8001008 <__smakebuf_r+0x7c>)
 8000fd2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000fd4:	89a3      	ldrh	r3, [r4, #12]
 8000fd6:	6020      	str	r0, [r4, #0]
 8000fd8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000fdc:	81a3      	strh	r3, [r4, #12]
 8000fde:	9b00      	ldr	r3, [sp, #0]
 8000fe0:	6163      	str	r3, [r4, #20]
 8000fe2:	9b01      	ldr	r3, [sp, #4]
 8000fe4:	6120      	str	r0, [r4, #16]
 8000fe6:	b15b      	cbz	r3, 8001000 <__smakebuf_r+0x74>
 8000fe8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000fec:	4630      	mov	r0, r6
 8000fee:	f000 fb71 	bl	80016d4 <_isatty_r>
 8000ff2:	b128      	cbz	r0, 8001000 <__smakebuf_r+0x74>
 8000ff4:	89a3      	ldrh	r3, [r4, #12]
 8000ff6:	f023 0303 	bic.w	r3, r3, #3
 8000ffa:	f043 0301 	orr.w	r3, r3, #1
 8000ffe:	81a3      	strh	r3, [r4, #12]
 8001000:	89a0      	ldrh	r0, [r4, #12]
 8001002:	4305      	orrs	r5, r0
 8001004:	81a5      	strh	r5, [r4, #12]
 8001006:	e7cd      	b.n	8000fa4 <__smakebuf_r+0x18>
 8001008:	0800079d 	.word	0x0800079d

0800100c <__malloc_lock>:
 800100c:	4801      	ldr	r0, [pc, #4]	; (8001014 <__malloc_lock+0x8>)
 800100e:	f7ff bcbc 	b.w	800098a <__retarget_lock_acquire_recursive>
 8001012:	bf00      	nop
 8001014:	20000084 	.word	0x20000084

08001018 <__malloc_unlock>:
 8001018:	4801      	ldr	r0, [pc, #4]	; (8001020 <__malloc_unlock+0x8>)
 800101a:	f7ff bcb7 	b.w	800098c <__retarget_lock_release_recursive>
 800101e:	bf00      	nop
 8001020:	20000084 	.word	0x20000084

08001024 <__sfputc_r>:
 8001024:	6893      	ldr	r3, [r2, #8]
 8001026:	3b01      	subs	r3, #1
 8001028:	2b00      	cmp	r3, #0
 800102a:	b410      	push	{r4}
 800102c:	6093      	str	r3, [r2, #8]
 800102e:	da07      	bge.n	8001040 <__sfputc_r+0x1c>
 8001030:	6994      	ldr	r4, [r2, #24]
 8001032:	42a3      	cmp	r3, r4
 8001034:	db01      	blt.n	800103a <__sfputc_r+0x16>
 8001036:	290a      	cmp	r1, #10
 8001038:	d102      	bne.n	8001040 <__sfputc_r+0x1c>
 800103a:	bc10      	pop	{r4}
 800103c:	f7ff be8c 	b.w	8000d58 <__swbuf_r>
 8001040:	6813      	ldr	r3, [r2, #0]
 8001042:	1c58      	adds	r0, r3, #1
 8001044:	6010      	str	r0, [r2, #0]
 8001046:	7019      	strb	r1, [r3, #0]
 8001048:	4608      	mov	r0, r1
 800104a:	bc10      	pop	{r4}
 800104c:	4770      	bx	lr

0800104e <__sfputs_r>:
 800104e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001050:	4606      	mov	r6, r0
 8001052:	460f      	mov	r7, r1
 8001054:	4614      	mov	r4, r2
 8001056:	18d5      	adds	r5, r2, r3
 8001058:	42ac      	cmp	r4, r5
 800105a:	d101      	bne.n	8001060 <__sfputs_r+0x12>
 800105c:	2000      	movs	r0, #0
 800105e:	e007      	b.n	8001070 <__sfputs_r+0x22>
 8001060:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001064:	463a      	mov	r2, r7
 8001066:	4630      	mov	r0, r6
 8001068:	f7ff ffdc 	bl	8001024 <__sfputc_r>
 800106c:	1c43      	adds	r3, r0, #1
 800106e:	d1f3      	bne.n	8001058 <__sfputs_r+0xa>
 8001070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001074 <_vfiprintf_r>:
 8001074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001078:	460d      	mov	r5, r1
 800107a:	b09d      	sub	sp, #116	; 0x74
 800107c:	4614      	mov	r4, r2
 800107e:	4698      	mov	r8, r3
 8001080:	4606      	mov	r6, r0
 8001082:	b118      	cbz	r0, 800108c <_vfiprintf_r+0x18>
 8001084:	6983      	ldr	r3, [r0, #24]
 8001086:	b90b      	cbnz	r3, 800108c <_vfiprintf_r+0x18>
 8001088:	f7ff fbbc 	bl	8000804 <__sinit>
 800108c:	4b89      	ldr	r3, [pc, #548]	; (80012b4 <_vfiprintf_r+0x240>)
 800108e:	429d      	cmp	r5, r3
 8001090:	d11b      	bne.n	80010ca <_vfiprintf_r+0x56>
 8001092:	6875      	ldr	r5, [r6, #4]
 8001094:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001096:	07d9      	lsls	r1, r3, #31
 8001098:	d405      	bmi.n	80010a6 <_vfiprintf_r+0x32>
 800109a:	89ab      	ldrh	r3, [r5, #12]
 800109c:	059a      	lsls	r2, r3, #22
 800109e:	d402      	bmi.n	80010a6 <_vfiprintf_r+0x32>
 80010a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010a2:	f7ff fc72 	bl	800098a <__retarget_lock_acquire_recursive>
 80010a6:	89ab      	ldrh	r3, [r5, #12]
 80010a8:	071b      	lsls	r3, r3, #28
 80010aa:	d501      	bpl.n	80010b0 <_vfiprintf_r+0x3c>
 80010ac:	692b      	ldr	r3, [r5, #16]
 80010ae:	b9eb      	cbnz	r3, 80010ec <_vfiprintf_r+0x78>
 80010b0:	4629      	mov	r1, r5
 80010b2:	4630      	mov	r0, r6
 80010b4:	f7ff feb4 	bl	8000e20 <__swsetup_r>
 80010b8:	b1c0      	cbz	r0, 80010ec <_vfiprintf_r+0x78>
 80010ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010bc:	07dc      	lsls	r4, r3, #31
 80010be:	d50e      	bpl.n	80010de <_vfiprintf_r+0x6a>
 80010c0:	f04f 30ff 	mov.w	r0, #4294967295
 80010c4:	b01d      	add	sp, #116	; 0x74
 80010c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80010ca:	4b7b      	ldr	r3, [pc, #492]	; (80012b8 <_vfiprintf_r+0x244>)
 80010cc:	429d      	cmp	r5, r3
 80010ce:	d101      	bne.n	80010d4 <_vfiprintf_r+0x60>
 80010d0:	68b5      	ldr	r5, [r6, #8]
 80010d2:	e7df      	b.n	8001094 <_vfiprintf_r+0x20>
 80010d4:	4b79      	ldr	r3, [pc, #484]	; (80012bc <_vfiprintf_r+0x248>)
 80010d6:	429d      	cmp	r5, r3
 80010d8:	bf08      	it	eq
 80010da:	68f5      	ldreq	r5, [r6, #12]
 80010dc:	e7da      	b.n	8001094 <_vfiprintf_r+0x20>
 80010de:	89ab      	ldrh	r3, [r5, #12]
 80010e0:	0598      	lsls	r0, r3, #22
 80010e2:	d4ed      	bmi.n	80010c0 <_vfiprintf_r+0x4c>
 80010e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010e6:	f7ff fc51 	bl	800098c <__retarget_lock_release_recursive>
 80010ea:	e7e9      	b.n	80010c0 <_vfiprintf_r+0x4c>
 80010ec:	2300      	movs	r3, #0
 80010ee:	9309      	str	r3, [sp, #36]	; 0x24
 80010f0:	2320      	movs	r3, #32
 80010f2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80010f6:	f8cd 800c 	str.w	r8, [sp, #12]
 80010fa:	2330      	movs	r3, #48	; 0x30
 80010fc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80012c0 <_vfiprintf_r+0x24c>
 8001100:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001104:	f04f 0901 	mov.w	r9, #1
 8001108:	4623      	mov	r3, r4
 800110a:	469a      	mov	sl, r3
 800110c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001110:	b10a      	cbz	r2, 8001116 <_vfiprintf_r+0xa2>
 8001112:	2a25      	cmp	r2, #37	; 0x25
 8001114:	d1f9      	bne.n	800110a <_vfiprintf_r+0x96>
 8001116:	ebba 0b04 	subs.w	fp, sl, r4
 800111a:	d00b      	beq.n	8001134 <_vfiprintf_r+0xc0>
 800111c:	465b      	mov	r3, fp
 800111e:	4622      	mov	r2, r4
 8001120:	4629      	mov	r1, r5
 8001122:	4630      	mov	r0, r6
 8001124:	f7ff ff93 	bl	800104e <__sfputs_r>
 8001128:	3001      	adds	r0, #1
 800112a:	f000 80aa 	beq.w	8001282 <_vfiprintf_r+0x20e>
 800112e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001130:	445a      	add	r2, fp
 8001132:	9209      	str	r2, [sp, #36]	; 0x24
 8001134:	f89a 3000 	ldrb.w	r3, [sl]
 8001138:	2b00      	cmp	r3, #0
 800113a:	f000 80a2 	beq.w	8001282 <_vfiprintf_r+0x20e>
 800113e:	2300      	movs	r3, #0
 8001140:	f04f 32ff 	mov.w	r2, #4294967295
 8001144:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001148:	f10a 0a01 	add.w	sl, sl, #1
 800114c:	9304      	str	r3, [sp, #16]
 800114e:	9307      	str	r3, [sp, #28]
 8001150:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001154:	931a      	str	r3, [sp, #104]	; 0x68
 8001156:	4654      	mov	r4, sl
 8001158:	2205      	movs	r2, #5
 800115a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800115e:	4858      	ldr	r0, [pc, #352]	; (80012c0 <_vfiprintf_r+0x24c>)
 8001160:	f7ff f856 	bl	8000210 <memchr>
 8001164:	9a04      	ldr	r2, [sp, #16]
 8001166:	b9d8      	cbnz	r0, 80011a0 <_vfiprintf_r+0x12c>
 8001168:	06d1      	lsls	r1, r2, #27
 800116a:	bf44      	itt	mi
 800116c:	2320      	movmi	r3, #32
 800116e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001172:	0713      	lsls	r3, r2, #28
 8001174:	bf44      	itt	mi
 8001176:	232b      	movmi	r3, #43	; 0x2b
 8001178:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800117c:	f89a 3000 	ldrb.w	r3, [sl]
 8001180:	2b2a      	cmp	r3, #42	; 0x2a
 8001182:	d015      	beq.n	80011b0 <_vfiprintf_r+0x13c>
 8001184:	9a07      	ldr	r2, [sp, #28]
 8001186:	4654      	mov	r4, sl
 8001188:	2000      	movs	r0, #0
 800118a:	f04f 0c0a 	mov.w	ip, #10
 800118e:	4621      	mov	r1, r4
 8001190:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001194:	3b30      	subs	r3, #48	; 0x30
 8001196:	2b09      	cmp	r3, #9
 8001198:	d94e      	bls.n	8001238 <_vfiprintf_r+0x1c4>
 800119a:	b1b0      	cbz	r0, 80011ca <_vfiprintf_r+0x156>
 800119c:	9207      	str	r2, [sp, #28]
 800119e:	e014      	b.n	80011ca <_vfiprintf_r+0x156>
 80011a0:	eba0 0308 	sub.w	r3, r0, r8
 80011a4:	fa09 f303 	lsl.w	r3, r9, r3
 80011a8:	4313      	orrs	r3, r2
 80011aa:	9304      	str	r3, [sp, #16]
 80011ac:	46a2      	mov	sl, r4
 80011ae:	e7d2      	b.n	8001156 <_vfiprintf_r+0xe2>
 80011b0:	9b03      	ldr	r3, [sp, #12]
 80011b2:	1d19      	adds	r1, r3, #4
 80011b4:	681b      	ldr	r3, [r3, #0]
 80011b6:	9103      	str	r1, [sp, #12]
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	bfbb      	ittet	lt
 80011bc:	425b      	neglt	r3, r3
 80011be:	f042 0202 	orrlt.w	r2, r2, #2
 80011c2:	9307      	strge	r3, [sp, #28]
 80011c4:	9307      	strlt	r3, [sp, #28]
 80011c6:	bfb8      	it	lt
 80011c8:	9204      	strlt	r2, [sp, #16]
 80011ca:	7823      	ldrb	r3, [r4, #0]
 80011cc:	2b2e      	cmp	r3, #46	; 0x2e
 80011ce:	d10c      	bne.n	80011ea <_vfiprintf_r+0x176>
 80011d0:	7863      	ldrb	r3, [r4, #1]
 80011d2:	2b2a      	cmp	r3, #42	; 0x2a
 80011d4:	d135      	bne.n	8001242 <_vfiprintf_r+0x1ce>
 80011d6:	9b03      	ldr	r3, [sp, #12]
 80011d8:	1d1a      	adds	r2, r3, #4
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	9203      	str	r2, [sp, #12]
 80011de:	2b00      	cmp	r3, #0
 80011e0:	bfb8      	it	lt
 80011e2:	f04f 33ff 	movlt.w	r3, #4294967295
 80011e6:	3402      	adds	r4, #2
 80011e8:	9305      	str	r3, [sp, #20]
 80011ea:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80012c4 <_vfiprintf_r+0x250>
 80011ee:	7821      	ldrb	r1, [r4, #0]
 80011f0:	2203      	movs	r2, #3
 80011f2:	4650      	mov	r0, sl
 80011f4:	f7ff f80c 	bl	8000210 <memchr>
 80011f8:	b140      	cbz	r0, 800120c <_vfiprintf_r+0x198>
 80011fa:	2340      	movs	r3, #64	; 0x40
 80011fc:	eba0 000a 	sub.w	r0, r0, sl
 8001200:	fa03 f000 	lsl.w	r0, r3, r0
 8001204:	9b04      	ldr	r3, [sp, #16]
 8001206:	4303      	orrs	r3, r0
 8001208:	3401      	adds	r4, #1
 800120a:	9304      	str	r3, [sp, #16]
 800120c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001210:	482d      	ldr	r0, [pc, #180]	; (80012c8 <_vfiprintf_r+0x254>)
 8001212:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001216:	2206      	movs	r2, #6
 8001218:	f7fe fffa 	bl	8000210 <memchr>
 800121c:	2800      	cmp	r0, #0
 800121e:	d03f      	beq.n	80012a0 <_vfiprintf_r+0x22c>
 8001220:	4b2a      	ldr	r3, [pc, #168]	; (80012cc <_vfiprintf_r+0x258>)
 8001222:	bb1b      	cbnz	r3, 800126c <_vfiprintf_r+0x1f8>
 8001224:	9b03      	ldr	r3, [sp, #12]
 8001226:	3307      	adds	r3, #7
 8001228:	f023 0307 	bic.w	r3, r3, #7
 800122c:	3308      	adds	r3, #8
 800122e:	9303      	str	r3, [sp, #12]
 8001230:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001232:	443b      	add	r3, r7
 8001234:	9309      	str	r3, [sp, #36]	; 0x24
 8001236:	e767      	b.n	8001108 <_vfiprintf_r+0x94>
 8001238:	fb0c 3202 	mla	r2, ip, r2, r3
 800123c:	460c      	mov	r4, r1
 800123e:	2001      	movs	r0, #1
 8001240:	e7a5      	b.n	800118e <_vfiprintf_r+0x11a>
 8001242:	2300      	movs	r3, #0
 8001244:	3401      	adds	r4, #1
 8001246:	9305      	str	r3, [sp, #20]
 8001248:	4619      	mov	r1, r3
 800124a:	f04f 0c0a 	mov.w	ip, #10
 800124e:	4620      	mov	r0, r4
 8001250:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001254:	3a30      	subs	r2, #48	; 0x30
 8001256:	2a09      	cmp	r2, #9
 8001258:	d903      	bls.n	8001262 <_vfiprintf_r+0x1ee>
 800125a:	2b00      	cmp	r3, #0
 800125c:	d0c5      	beq.n	80011ea <_vfiprintf_r+0x176>
 800125e:	9105      	str	r1, [sp, #20]
 8001260:	e7c3      	b.n	80011ea <_vfiprintf_r+0x176>
 8001262:	fb0c 2101 	mla	r1, ip, r1, r2
 8001266:	4604      	mov	r4, r0
 8001268:	2301      	movs	r3, #1
 800126a:	e7f0      	b.n	800124e <_vfiprintf_r+0x1da>
 800126c:	ab03      	add	r3, sp, #12
 800126e:	9300      	str	r3, [sp, #0]
 8001270:	462a      	mov	r2, r5
 8001272:	4b17      	ldr	r3, [pc, #92]	; (80012d0 <_vfiprintf_r+0x25c>)
 8001274:	a904      	add	r1, sp, #16
 8001276:	4630      	mov	r0, r6
 8001278:	f3af 8000 	nop.w
 800127c:	4607      	mov	r7, r0
 800127e:	1c78      	adds	r0, r7, #1
 8001280:	d1d6      	bne.n	8001230 <_vfiprintf_r+0x1bc>
 8001282:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001284:	07d9      	lsls	r1, r3, #31
 8001286:	d405      	bmi.n	8001294 <_vfiprintf_r+0x220>
 8001288:	89ab      	ldrh	r3, [r5, #12]
 800128a:	059a      	lsls	r2, r3, #22
 800128c:	d402      	bmi.n	8001294 <_vfiprintf_r+0x220>
 800128e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001290:	f7ff fb7c 	bl	800098c <__retarget_lock_release_recursive>
 8001294:	89ab      	ldrh	r3, [r5, #12]
 8001296:	065b      	lsls	r3, r3, #25
 8001298:	f53f af12 	bmi.w	80010c0 <_vfiprintf_r+0x4c>
 800129c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800129e:	e711      	b.n	80010c4 <_vfiprintf_r+0x50>
 80012a0:	ab03      	add	r3, sp, #12
 80012a2:	9300      	str	r3, [sp, #0]
 80012a4:	462a      	mov	r2, r5
 80012a6:	4b0a      	ldr	r3, [pc, #40]	; (80012d0 <_vfiprintf_r+0x25c>)
 80012a8:	a904      	add	r1, sp, #16
 80012aa:	4630      	mov	r0, r6
 80012ac:	f000 f880 	bl	80013b0 <_printf_i>
 80012b0:	e7e4      	b.n	800127c <_vfiprintf_r+0x208>
 80012b2:	bf00      	nop
 80012b4:	08001740 	.word	0x08001740
 80012b8:	08001760 	.word	0x08001760
 80012bc:	08001720 	.word	0x08001720
 80012c0:	08001784 	.word	0x08001784
 80012c4:	0800178a 	.word	0x0800178a
 80012c8:	0800178e 	.word	0x0800178e
 80012cc:	00000000 	.word	0x00000000
 80012d0:	0800104f 	.word	0x0800104f

080012d4 <_printf_common>:
 80012d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80012d8:	4616      	mov	r6, r2
 80012da:	4699      	mov	r9, r3
 80012dc:	688a      	ldr	r2, [r1, #8]
 80012de:	690b      	ldr	r3, [r1, #16]
 80012e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80012e4:	4293      	cmp	r3, r2
 80012e6:	bfb8      	it	lt
 80012e8:	4613      	movlt	r3, r2
 80012ea:	6033      	str	r3, [r6, #0]
 80012ec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80012f0:	4607      	mov	r7, r0
 80012f2:	460c      	mov	r4, r1
 80012f4:	b10a      	cbz	r2, 80012fa <_printf_common+0x26>
 80012f6:	3301      	adds	r3, #1
 80012f8:	6033      	str	r3, [r6, #0]
 80012fa:	6823      	ldr	r3, [r4, #0]
 80012fc:	0699      	lsls	r1, r3, #26
 80012fe:	bf42      	ittt	mi
 8001300:	6833      	ldrmi	r3, [r6, #0]
 8001302:	3302      	addmi	r3, #2
 8001304:	6033      	strmi	r3, [r6, #0]
 8001306:	6825      	ldr	r5, [r4, #0]
 8001308:	f015 0506 	ands.w	r5, r5, #6
 800130c:	d106      	bne.n	800131c <_printf_common+0x48>
 800130e:	f104 0a19 	add.w	sl, r4, #25
 8001312:	68e3      	ldr	r3, [r4, #12]
 8001314:	6832      	ldr	r2, [r6, #0]
 8001316:	1a9b      	subs	r3, r3, r2
 8001318:	42ab      	cmp	r3, r5
 800131a:	dc26      	bgt.n	800136a <_printf_common+0x96>
 800131c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001320:	1e13      	subs	r3, r2, #0
 8001322:	6822      	ldr	r2, [r4, #0]
 8001324:	bf18      	it	ne
 8001326:	2301      	movne	r3, #1
 8001328:	0692      	lsls	r2, r2, #26
 800132a:	d42b      	bmi.n	8001384 <_printf_common+0xb0>
 800132c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001330:	4649      	mov	r1, r9
 8001332:	4638      	mov	r0, r7
 8001334:	47c0      	blx	r8
 8001336:	3001      	adds	r0, #1
 8001338:	d01e      	beq.n	8001378 <_printf_common+0xa4>
 800133a:	6823      	ldr	r3, [r4, #0]
 800133c:	68e5      	ldr	r5, [r4, #12]
 800133e:	6832      	ldr	r2, [r6, #0]
 8001340:	f003 0306 	and.w	r3, r3, #6
 8001344:	2b04      	cmp	r3, #4
 8001346:	bf08      	it	eq
 8001348:	1aad      	subeq	r5, r5, r2
 800134a:	68a3      	ldr	r3, [r4, #8]
 800134c:	6922      	ldr	r2, [r4, #16]
 800134e:	bf0c      	ite	eq
 8001350:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001354:	2500      	movne	r5, #0
 8001356:	4293      	cmp	r3, r2
 8001358:	bfc4      	itt	gt
 800135a:	1a9b      	subgt	r3, r3, r2
 800135c:	18ed      	addgt	r5, r5, r3
 800135e:	2600      	movs	r6, #0
 8001360:	341a      	adds	r4, #26
 8001362:	42b5      	cmp	r5, r6
 8001364:	d11a      	bne.n	800139c <_printf_common+0xc8>
 8001366:	2000      	movs	r0, #0
 8001368:	e008      	b.n	800137c <_printf_common+0xa8>
 800136a:	2301      	movs	r3, #1
 800136c:	4652      	mov	r2, sl
 800136e:	4649      	mov	r1, r9
 8001370:	4638      	mov	r0, r7
 8001372:	47c0      	blx	r8
 8001374:	3001      	adds	r0, #1
 8001376:	d103      	bne.n	8001380 <_printf_common+0xac>
 8001378:	f04f 30ff 	mov.w	r0, #4294967295
 800137c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001380:	3501      	adds	r5, #1
 8001382:	e7c6      	b.n	8001312 <_printf_common+0x3e>
 8001384:	18e1      	adds	r1, r4, r3
 8001386:	1c5a      	adds	r2, r3, #1
 8001388:	2030      	movs	r0, #48	; 0x30
 800138a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800138e:	4422      	add	r2, r4
 8001390:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001394:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001398:	3302      	adds	r3, #2
 800139a:	e7c7      	b.n	800132c <_printf_common+0x58>
 800139c:	2301      	movs	r3, #1
 800139e:	4622      	mov	r2, r4
 80013a0:	4649      	mov	r1, r9
 80013a2:	4638      	mov	r0, r7
 80013a4:	47c0      	blx	r8
 80013a6:	3001      	adds	r0, #1
 80013a8:	d0e6      	beq.n	8001378 <_printf_common+0xa4>
 80013aa:	3601      	adds	r6, #1
 80013ac:	e7d9      	b.n	8001362 <_printf_common+0x8e>
	...

080013b0 <_printf_i>:
 80013b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80013b4:	7e0f      	ldrb	r7, [r1, #24]
 80013b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80013b8:	2f78      	cmp	r7, #120	; 0x78
 80013ba:	4691      	mov	r9, r2
 80013bc:	4680      	mov	r8, r0
 80013be:	460c      	mov	r4, r1
 80013c0:	469a      	mov	sl, r3
 80013c2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80013c6:	d807      	bhi.n	80013d8 <_printf_i+0x28>
 80013c8:	2f62      	cmp	r7, #98	; 0x62
 80013ca:	d80a      	bhi.n	80013e2 <_printf_i+0x32>
 80013cc:	2f00      	cmp	r7, #0
 80013ce:	f000 80d8 	beq.w	8001582 <_printf_i+0x1d2>
 80013d2:	2f58      	cmp	r7, #88	; 0x58
 80013d4:	f000 80a3 	beq.w	800151e <_printf_i+0x16e>
 80013d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80013dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80013e0:	e03a      	b.n	8001458 <_printf_i+0xa8>
 80013e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80013e6:	2b15      	cmp	r3, #21
 80013e8:	d8f6      	bhi.n	80013d8 <_printf_i+0x28>
 80013ea:	a101      	add	r1, pc, #4	; (adr r1, 80013f0 <_printf_i+0x40>)
 80013ec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80013f0:	08001449 	.word	0x08001449
 80013f4:	0800145d 	.word	0x0800145d
 80013f8:	080013d9 	.word	0x080013d9
 80013fc:	080013d9 	.word	0x080013d9
 8001400:	080013d9 	.word	0x080013d9
 8001404:	080013d9 	.word	0x080013d9
 8001408:	0800145d 	.word	0x0800145d
 800140c:	080013d9 	.word	0x080013d9
 8001410:	080013d9 	.word	0x080013d9
 8001414:	080013d9 	.word	0x080013d9
 8001418:	080013d9 	.word	0x080013d9
 800141c:	08001569 	.word	0x08001569
 8001420:	0800148d 	.word	0x0800148d
 8001424:	0800154b 	.word	0x0800154b
 8001428:	080013d9 	.word	0x080013d9
 800142c:	080013d9 	.word	0x080013d9
 8001430:	0800158b 	.word	0x0800158b
 8001434:	080013d9 	.word	0x080013d9
 8001438:	0800148d 	.word	0x0800148d
 800143c:	080013d9 	.word	0x080013d9
 8001440:	080013d9 	.word	0x080013d9
 8001444:	08001553 	.word	0x08001553
 8001448:	682b      	ldr	r3, [r5, #0]
 800144a:	1d1a      	adds	r2, r3, #4
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	602a      	str	r2, [r5, #0]
 8001450:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001454:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001458:	2301      	movs	r3, #1
 800145a:	e0a3      	b.n	80015a4 <_printf_i+0x1f4>
 800145c:	6820      	ldr	r0, [r4, #0]
 800145e:	6829      	ldr	r1, [r5, #0]
 8001460:	0606      	lsls	r6, r0, #24
 8001462:	f101 0304 	add.w	r3, r1, #4
 8001466:	d50a      	bpl.n	800147e <_printf_i+0xce>
 8001468:	680e      	ldr	r6, [r1, #0]
 800146a:	602b      	str	r3, [r5, #0]
 800146c:	2e00      	cmp	r6, #0
 800146e:	da03      	bge.n	8001478 <_printf_i+0xc8>
 8001470:	232d      	movs	r3, #45	; 0x2d
 8001472:	4276      	negs	r6, r6
 8001474:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001478:	485e      	ldr	r0, [pc, #376]	; (80015f4 <_printf_i+0x244>)
 800147a:	230a      	movs	r3, #10
 800147c:	e019      	b.n	80014b2 <_printf_i+0x102>
 800147e:	680e      	ldr	r6, [r1, #0]
 8001480:	602b      	str	r3, [r5, #0]
 8001482:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001486:	bf18      	it	ne
 8001488:	b236      	sxthne	r6, r6
 800148a:	e7ef      	b.n	800146c <_printf_i+0xbc>
 800148c:	682b      	ldr	r3, [r5, #0]
 800148e:	6820      	ldr	r0, [r4, #0]
 8001490:	1d19      	adds	r1, r3, #4
 8001492:	6029      	str	r1, [r5, #0]
 8001494:	0601      	lsls	r1, r0, #24
 8001496:	d501      	bpl.n	800149c <_printf_i+0xec>
 8001498:	681e      	ldr	r6, [r3, #0]
 800149a:	e002      	b.n	80014a2 <_printf_i+0xf2>
 800149c:	0646      	lsls	r6, r0, #25
 800149e:	d5fb      	bpl.n	8001498 <_printf_i+0xe8>
 80014a0:	881e      	ldrh	r6, [r3, #0]
 80014a2:	4854      	ldr	r0, [pc, #336]	; (80015f4 <_printf_i+0x244>)
 80014a4:	2f6f      	cmp	r7, #111	; 0x6f
 80014a6:	bf0c      	ite	eq
 80014a8:	2308      	moveq	r3, #8
 80014aa:	230a      	movne	r3, #10
 80014ac:	2100      	movs	r1, #0
 80014ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80014b2:	6865      	ldr	r5, [r4, #4]
 80014b4:	60a5      	str	r5, [r4, #8]
 80014b6:	2d00      	cmp	r5, #0
 80014b8:	bfa2      	ittt	ge
 80014ba:	6821      	ldrge	r1, [r4, #0]
 80014bc:	f021 0104 	bicge.w	r1, r1, #4
 80014c0:	6021      	strge	r1, [r4, #0]
 80014c2:	b90e      	cbnz	r6, 80014c8 <_printf_i+0x118>
 80014c4:	2d00      	cmp	r5, #0
 80014c6:	d04d      	beq.n	8001564 <_printf_i+0x1b4>
 80014c8:	4615      	mov	r5, r2
 80014ca:	fbb6 f1f3 	udiv	r1, r6, r3
 80014ce:	fb03 6711 	mls	r7, r3, r1, r6
 80014d2:	5dc7      	ldrb	r7, [r0, r7]
 80014d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80014d8:	4637      	mov	r7, r6
 80014da:	42bb      	cmp	r3, r7
 80014dc:	460e      	mov	r6, r1
 80014de:	d9f4      	bls.n	80014ca <_printf_i+0x11a>
 80014e0:	2b08      	cmp	r3, #8
 80014e2:	d10b      	bne.n	80014fc <_printf_i+0x14c>
 80014e4:	6823      	ldr	r3, [r4, #0]
 80014e6:	07de      	lsls	r6, r3, #31
 80014e8:	d508      	bpl.n	80014fc <_printf_i+0x14c>
 80014ea:	6923      	ldr	r3, [r4, #16]
 80014ec:	6861      	ldr	r1, [r4, #4]
 80014ee:	4299      	cmp	r1, r3
 80014f0:	bfde      	ittt	le
 80014f2:	2330      	movle	r3, #48	; 0x30
 80014f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80014f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 80014fc:	1b52      	subs	r2, r2, r5
 80014fe:	6122      	str	r2, [r4, #16]
 8001500:	f8cd a000 	str.w	sl, [sp]
 8001504:	464b      	mov	r3, r9
 8001506:	aa03      	add	r2, sp, #12
 8001508:	4621      	mov	r1, r4
 800150a:	4640      	mov	r0, r8
 800150c:	f7ff fee2 	bl	80012d4 <_printf_common>
 8001510:	3001      	adds	r0, #1
 8001512:	d14c      	bne.n	80015ae <_printf_i+0x1fe>
 8001514:	f04f 30ff 	mov.w	r0, #4294967295
 8001518:	b004      	add	sp, #16
 800151a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800151e:	4835      	ldr	r0, [pc, #212]	; (80015f4 <_printf_i+0x244>)
 8001520:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001524:	6829      	ldr	r1, [r5, #0]
 8001526:	6823      	ldr	r3, [r4, #0]
 8001528:	f851 6b04 	ldr.w	r6, [r1], #4
 800152c:	6029      	str	r1, [r5, #0]
 800152e:	061d      	lsls	r5, r3, #24
 8001530:	d514      	bpl.n	800155c <_printf_i+0x1ac>
 8001532:	07df      	lsls	r7, r3, #31
 8001534:	bf44      	itt	mi
 8001536:	f043 0320 	orrmi.w	r3, r3, #32
 800153a:	6023      	strmi	r3, [r4, #0]
 800153c:	b91e      	cbnz	r6, 8001546 <_printf_i+0x196>
 800153e:	6823      	ldr	r3, [r4, #0]
 8001540:	f023 0320 	bic.w	r3, r3, #32
 8001544:	6023      	str	r3, [r4, #0]
 8001546:	2310      	movs	r3, #16
 8001548:	e7b0      	b.n	80014ac <_printf_i+0xfc>
 800154a:	6823      	ldr	r3, [r4, #0]
 800154c:	f043 0320 	orr.w	r3, r3, #32
 8001550:	6023      	str	r3, [r4, #0]
 8001552:	2378      	movs	r3, #120	; 0x78
 8001554:	4828      	ldr	r0, [pc, #160]	; (80015f8 <_printf_i+0x248>)
 8001556:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800155a:	e7e3      	b.n	8001524 <_printf_i+0x174>
 800155c:	0659      	lsls	r1, r3, #25
 800155e:	bf48      	it	mi
 8001560:	b2b6      	uxthmi	r6, r6
 8001562:	e7e6      	b.n	8001532 <_printf_i+0x182>
 8001564:	4615      	mov	r5, r2
 8001566:	e7bb      	b.n	80014e0 <_printf_i+0x130>
 8001568:	682b      	ldr	r3, [r5, #0]
 800156a:	6826      	ldr	r6, [r4, #0]
 800156c:	6961      	ldr	r1, [r4, #20]
 800156e:	1d18      	adds	r0, r3, #4
 8001570:	6028      	str	r0, [r5, #0]
 8001572:	0635      	lsls	r5, r6, #24
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	d501      	bpl.n	800157c <_printf_i+0x1cc>
 8001578:	6019      	str	r1, [r3, #0]
 800157a:	e002      	b.n	8001582 <_printf_i+0x1d2>
 800157c:	0670      	lsls	r0, r6, #25
 800157e:	d5fb      	bpl.n	8001578 <_printf_i+0x1c8>
 8001580:	8019      	strh	r1, [r3, #0]
 8001582:	2300      	movs	r3, #0
 8001584:	6123      	str	r3, [r4, #16]
 8001586:	4615      	mov	r5, r2
 8001588:	e7ba      	b.n	8001500 <_printf_i+0x150>
 800158a:	682b      	ldr	r3, [r5, #0]
 800158c:	1d1a      	adds	r2, r3, #4
 800158e:	602a      	str	r2, [r5, #0]
 8001590:	681d      	ldr	r5, [r3, #0]
 8001592:	6862      	ldr	r2, [r4, #4]
 8001594:	2100      	movs	r1, #0
 8001596:	4628      	mov	r0, r5
 8001598:	f7fe fe3a 	bl	8000210 <memchr>
 800159c:	b108      	cbz	r0, 80015a2 <_printf_i+0x1f2>
 800159e:	1b40      	subs	r0, r0, r5
 80015a0:	6060      	str	r0, [r4, #4]
 80015a2:	6863      	ldr	r3, [r4, #4]
 80015a4:	6123      	str	r3, [r4, #16]
 80015a6:	2300      	movs	r3, #0
 80015a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80015ac:	e7a8      	b.n	8001500 <_printf_i+0x150>
 80015ae:	6923      	ldr	r3, [r4, #16]
 80015b0:	462a      	mov	r2, r5
 80015b2:	4649      	mov	r1, r9
 80015b4:	4640      	mov	r0, r8
 80015b6:	47d0      	blx	sl
 80015b8:	3001      	adds	r0, #1
 80015ba:	d0ab      	beq.n	8001514 <_printf_i+0x164>
 80015bc:	6823      	ldr	r3, [r4, #0]
 80015be:	079b      	lsls	r3, r3, #30
 80015c0:	d413      	bmi.n	80015ea <_printf_i+0x23a>
 80015c2:	68e0      	ldr	r0, [r4, #12]
 80015c4:	9b03      	ldr	r3, [sp, #12]
 80015c6:	4298      	cmp	r0, r3
 80015c8:	bfb8      	it	lt
 80015ca:	4618      	movlt	r0, r3
 80015cc:	e7a4      	b.n	8001518 <_printf_i+0x168>
 80015ce:	2301      	movs	r3, #1
 80015d0:	4632      	mov	r2, r6
 80015d2:	4649      	mov	r1, r9
 80015d4:	4640      	mov	r0, r8
 80015d6:	47d0      	blx	sl
 80015d8:	3001      	adds	r0, #1
 80015da:	d09b      	beq.n	8001514 <_printf_i+0x164>
 80015dc:	3501      	adds	r5, #1
 80015de:	68e3      	ldr	r3, [r4, #12]
 80015e0:	9903      	ldr	r1, [sp, #12]
 80015e2:	1a5b      	subs	r3, r3, r1
 80015e4:	42ab      	cmp	r3, r5
 80015e6:	dcf2      	bgt.n	80015ce <_printf_i+0x21e>
 80015e8:	e7eb      	b.n	80015c2 <_printf_i+0x212>
 80015ea:	2500      	movs	r5, #0
 80015ec:	f104 0619 	add.w	r6, r4, #25
 80015f0:	e7f5      	b.n	80015de <_printf_i+0x22e>
 80015f2:	bf00      	nop
 80015f4:	08001795 	.word	0x08001795
 80015f8:	080017a6 	.word	0x080017a6

080015fc <_putc_r>:
 80015fc:	b570      	push	{r4, r5, r6, lr}
 80015fe:	460d      	mov	r5, r1
 8001600:	4614      	mov	r4, r2
 8001602:	4606      	mov	r6, r0
 8001604:	b118      	cbz	r0, 800160e <_putc_r+0x12>
 8001606:	6983      	ldr	r3, [r0, #24]
 8001608:	b90b      	cbnz	r3, 800160e <_putc_r+0x12>
 800160a:	f7ff f8fb 	bl	8000804 <__sinit>
 800160e:	4b1c      	ldr	r3, [pc, #112]	; (8001680 <_putc_r+0x84>)
 8001610:	429c      	cmp	r4, r3
 8001612:	d124      	bne.n	800165e <_putc_r+0x62>
 8001614:	6874      	ldr	r4, [r6, #4]
 8001616:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001618:	07d8      	lsls	r0, r3, #31
 800161a:	d405      	bmi.n	8001628 <_putc_r+0x2c>
 800161c:	89a3      	ldrh	r3, [r4, #12]
 800161e:	0599      	lsls	r1, r3, #22
 8001620:	d402      	bmi.n	8001628 <_putc_r+0x2c>
 8001622:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001624:	f7ff f9b1 	bl	800098a <__retarget_lock_acquire_recursive>
 8001628:	68a3      	ldr	r3, [r4, #8]
 800162a:	3b01      	subs	r3, #1
 800162c:	2b00      	cmp	r3, #0
 800162e:	60a3      	str	r3, [r4, #8]
 8001630:	da05      	bge.n	800163e <_putc_r+0x42>
 8001632:	69a2      	ldr	r2, [r4, #24]
 8001634:	4293      	cmp	r3, r2
 8001636:	db1c      	blt.n	8001672 <_putc_r+0x76>
 8001638:	b2eb      	uxtb	r3, r5
 800163a:	2b0a      	cmp	r3, #10
 800163c:	d019      	beq.n	8001672 <_putc_r+0x76>
 800163e:	6823      	ldr	r3, [r4, #0]
 8001640:	1c5a      	adds	r2, r3, #1
 8001642:	6022      	str	r2, [r4, #0]
 8001644:	701d      	strb	r5, [r3, #0]
 8001646:	b2ed      	uxtb	r5, r5
 8001648:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800164a:	07da      	lsls	r2, r3, #31
 800164c:	d405      	bmi.n	800165a <_putc_r+0x5e>
 800164e:	89a3      	ldrh	r3, [r4, #12]
 8001650:	059b      	lsls	r3, r3, #22
 8001652:	d402      	bmi.n	800165a <_putc_r+0x5e>
 8001654:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001656:	f7ff f999 	bl	800098c <__retarget_lock_release_recursive>
 800165a:	4628      	mov	r0, r5
 800165c:	bd70      	pop	{r4, r5, r6, pc}
 800165e:	4b09      	ldr	r3, [pc, #36]	; (8001684 <_putc_r+0x88>)
 8001660:	429c      	cmp	r4, r3
 8001662:	d101      	bne.n	8001668 <_putc_r+0x6c>
 8001664:	68b4      	ldr	r4, [r6, #8]
 8001666:	e7d6      	b.n	8001616 <_putc_r+0x1a>
 8001668:	4b07      	ldr	r3, [pc, #28]	; (8001688 <_putc_r+0x8c>)
 800166a:	429c      	cmp	r4, r3
 800166c:	bf08      	it	eq
 800166e:	68f4      	ldreq	r4, [r6, #12]
 8001670:	e7d1      	b.n	8001616 <_putc_r+0x1a>
 8001672:	4629      	mov	r1, r5
 8001674:	4622      	mov	r2, r4
 8001676:	4630      	mov	r0, r6
 8001678:	f7ff fb6e 	bl	8000d58 <__swbuf_r>
 800167c:	4605      	mov	r5, r0
 800167e:	e7e3      	b.n	8001648 <_putc_r+0x4c>
 8001680:	08001740 	.word	0x08001740
 8001684:	08001760 	.word	0x08001760
 8001688:	08001720 	.word	0x08001720

0800168c <_read_r>:
 800168c:	b538      	push	{r3, r4, r5, lr}
 800168e:	4d07      	ldr	r5, [pc, #28]	; (80016ac <_read_r+0x20>)
 8001690:	4604      	mov	r4, r0
 8001692:	4608      	mov	r0, r1
 8001694:	4611      	mov	r1, r2
 8001696:	2200      	movs	r2, #0
 8001698:	602a      	str	r2, [r5, #0]
 800169a:	461a      	mov	r2, r3
 800169c:	f7fe feba 	bl	8000414 <_read>
 80016a0:	1c43      	adds	r3, r0, #1
 80016a2:	d102      	bne.n	80016aa <_read_r+0x1e>
 80016a4:	682b      	ldr	r3, [r5, #0]
 80016a6:	b103      	cbz	r3, 80016aa <_read_r+0x1e>
 80016a8:	6023      	str	r3, [r4, #0]
 80016aa:	bd38      	pop	{r3, r4, r5, pc}
 80016ac:	20000090 	.word	0x20000090

080016b0 <_fstat_r>:
 80016b0:	b538      	push	{r3, r4, r5, lr}
 80016b2:	4d07      	ldr	r5, [pc, #28]	; (80016d0 <_fstat_r+0x20>)
 80016b4:	2300      	movs	r3, #0
 80016b6:	4604      	mov	r4, r0
 80016b8:	4608      	mov	r0, r1
 80016ba:	4611      	mov	r1, r2
 80016bc:	602b      	str	r3, [r5, #0]
 80016be:	f7fe feed 	bl	800049c <_fstat>
 80016c2:	1c43      	adds	r3, r0, #1
 80016c4:	d102      	bne.n	80016cc <_fstat_r+0x1c>
 80016c6:	682b      	ldr	r3, [r5, #0]
 80016c8:	b103      	cbz	r3, 80016cc <_fstat_r+0x1c>
 80016ca:	6023      	str	r3, [r4, #0]
 80016cc:	bd38      	pop	{r3, r4, r5, pc}
 80016ce:	bf00      	nop
 80016d0:	20000090 	.word	0x20000090

080016d4 <_isatty_r>:
 80016d4:	b538      	push	{r3, r4, r5, lr}
 80016d6:	4d06      	ldr	r5, [pc, #24]	; (80016f0 <_isatty_r+0x1c>)
 80016d8:	2300      	movs	r3, #0
 80016da:	4604      	mov	r4, r0
 80016dc:	4608      	mov	r0, r1
 80016de:	602b      	str	r3, [r5, #0]
 80016e0:	f7fe feeb 	bl	80004ba <_isatty>
 80016e4:	1c43      	adds	r3, r0, #1
 80016e6:	d102      	bne.n	80016ee <_isatty_r+0x1a>
 80016e8:	682b      	ldr	r3, [r5, #0]
 80016ea:	b103      	cbz	r3, 80016ee <_isatty_r+0x1a>
 80016ec:	6023      	str	r3, [r4, #0]
 80016ee:	bd38      	pop	{r3, r4, r5, pc}
 80016f0:	20000090 	.word	0x20000090

080016f4 <_init>:
 80016f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016f6:	bf00      	nop
 80016f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016fa:	bc08      	pop	{r3}
 80016fc:	469e      	mov	lr, r3
 80016fe:	4770      	bx	lr

08001700 <_fini>:
 8001700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001702:	bf00      	nop
 8001704:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001706:	bc08      	pop	{r3}
 8001708:	469e      	mov	lr, r3
 800170a:	4770      	bx	lr
