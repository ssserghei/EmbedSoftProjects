
021_stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008c8  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a8c  08000a94  00010a94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a8c  08000a8c  00010a94  2**0
                  CONTENTS
  4 .ARM          00000000  08000a8c  08000a8c  00010a94  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a8c  08000a94  00010a94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a8c  08000a8c  00010a8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a90  08000a90  00010a90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a94  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a94  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a94  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ae5  00000000  00000000  00010abe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002cb  00000000  00000000  000115a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00011870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00011938  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001da8  00000000  00000000  000119d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fb4  00000000  00000000  00013780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008556  00000000  00000000  00014734  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001cc8a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001ccdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a74 	.word	0x08000a74

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a74 	.word	0x08000a74

08000204 <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a04      	ldr	r2, [pc, #16]	; (800022c <delay+0x28>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	bf00      	nop
 8000222:	370c      	adds	r7, #12
 8000224:	46bd      	mov	sp, r7
 8000226:	bc80      	pop	{r7}
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	0003d08f 	.word	0x0003d08f

08000230 <main>:

int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 8000236:	f107 030c 	add.w	r3, r7, #12
 800023a:	220c      	movs	r2, #12
 800023c:	2100      	movs	r1, #0
 800023e:	4618      	mov	r0, r3
 8000240:	f000 fc10 	bl	8000a64 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 8000244:	463b      	mov	r3, r7
 8000246:	220c      	movs	r2, #12
 8000248:	2100      	movs	r1, #0
 800024a:	4618      	mov	r0, r3
 800024c:	f000 fc0a 	bl	8000a64 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000250:	4b1a      	ldr	r3, [pc, #104]	; (80002bc <main+0x8c>)
 8000252:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000254:	2305      	movs	r3, #5
 8000256:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000258:	2301      	movs	r3, #1
 800025a:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 800025c:	2300      	movs	r3, #0
 800025e:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000260:	2300      	movs	r3, #0
 8000262:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000264:	2300      	movs	r3, #0
 8000266:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000268:	2101      	movs	r1, #1
 800026a:	4814      	ldr	r0, [pc, #80]	; (80002bc <main+0x8c>)
 800026c:	f000 f864 	bl	8000338 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000270:	f107 030c 	add.w	r3, r7, #12
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f92f 	bl	80004d8 <GPIO_Init>

	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOC;
 800027a:	4b11      	ldr	r3, [pc, #68]	; (80002c0 <main+0x90>)
 800027c:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800027e:	230d      	movs	r3, #13
 8000280:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000282:	2304      	movs	r3, #4
 8000284:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000286:	2302      	movs	r3, #2
 8000288:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800028a:	2301      	movs	r3, #1
 800028c:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC,ENABLE);
 800028e:	2101      	movs	r1, #1
 8000290:	480b      	ldr	r0, [pc, #44]	; (80002c0 <main+0x90>)
 8000292:	f000 f851 	bl	8000338 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 8000296:	463b      	mov	r3, r7
 8000298:	4618      	mov	r0, r3
 800029a:	f000 f91d 	bl	80004d8 <GPIO_Init>

	GPIO_WriteToOutPin(GPIOA,GPIO_PIN_NO_5,GPIO_PIN_RESET);
 800029e:	2200      	movs	r2, #0
 80002a0:	2105      	movs	r1, #5
 80002a2:	4806      	ldr	r0, [pc, #24]	; (80002bc <main+0x8c>)
 80002a4:	f000 fab4 	bl	8000810 <GPIO_WriteToOutPin>
	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5,NVIC_IRQ_PRI15);
 80002a8:	210f      	movs	r1, #15
 80002aa:	2017      	movs	r0, #23
 80002ac:	f000 fb6c 	bl	8000988 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5,ENABLE);
 80002b0:	2101      	movs	r1, #1
 80002b2:	2017      	movs	r0, #23
 80002b4:	f000 fae4 	bl	8000880 <GPIO_IRQInterruptConfig>

    while(1);
 80002b8:	e7fe      	b.n	80002b8 <main+0x88>
 80002ba:	bf00      	nop
 80002bc:	40020000 	.word	0x40020000
 80002c0:	40020800 	.word	0x40020800

080002c4 <EXTI9_5_IRQHandler>:

}//END MAIN

void EXTI9_5_IRQHandler(void){
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0
   /// delay(); //200ms . wait till button de-bouncing gets over
	GPIO_IRQHandling(GPIO_PIN_NO_13); //clear the pending event from exti line
 80002c8:	200d      	movs	r0, #13
 80002ca:	f000 fb87 	bl	80009dc <GPIO_IRQHandling>
	GPIO_ToggleOutPin(GPIOA,GPIO_PIN_NO_5);
 80002ce:	2105      	movs	r1, #5
 80002d0:	4803      	ldr	r0, [pc, #12]	; (80002e0 <EXTI9_5_IRQHandler+0x1c>)
 80002d2:	f000 fac1 	bl	8000858 <GPIO_ToggleOutPin>
	delay();
 80002d6:	f7ff ff95 	bl	8000204 <delay>
}//EXTI9_5_IRQHandler
 80002da:	bf00      	nop
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	40020000 	.word	0x40020000

080002e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e4:	480d      	ldr	r0, [pc, #52]	; (800031c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ec:	480c      	ldr	r0, [pc, #48]	; (8000320 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ee:	490d      	ldr	r1, [pc, #52]	; (8000324 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f0:	4a0d      	ldr	r2, [pc, #52]	; (8000328 <LoopForever+0xe>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f4:	e002      	b.n	80002fc <LoopCopyDataInit>

080002f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002fa:	3304      	adds	r3, #4

080002fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000300:	d3f9      	bcc.n	80002f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000302:	4a0a      	ldr	r2, [pc, #40]	; (800032c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000304:	4c0a      	ldr	r4, [pc, #40]	; (8000330 <LoopForever+0x16>)
  movs r3, #0
 8000306:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000308:	e001      	b.n	800030e <LoopFillZerobss>

0800030a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800030a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800030c:	3204      	adds	r2, #4

0800030e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000310:	d3fb      	bcc.n	800030a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000312:	f000 fb83 	bl	8000a1c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000316:	f7ff ff8b 	bl	8000230 <main>

0800031a <LoopForever>:

LoopForever:
    b LoopForever
 800031a:	e7fe      	b.n	800031a <LoopForever>
  ldr   r0, =_estack
 800031c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000320:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000324:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000328:	08000a94 	.word	0x08000a94
  ldr r2, =_sbss
 800032c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000330:	2000001c 	.word	0x2000001c

08000334 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000334:	e7fe      	b.n	8000334 <ADC_IRQHandler>
	...

08000338 <GPIO_PeriClockControl>:
 *@Note					- none
 *
 * */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDI)	//
{
 8000338:	b480      	push	{r7}
 800033a:	b083      	sub	sp, #12
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
 8000340:	460b      	mov	r3, r1
 8000342:	70fb      	strb	r3, [r7, #3]
	if (EnorDI==ENABLE)
 8000344:	78fb      	ldrb	r3, [r7, #3]
 8000346:	2b01      	cmp	r3, #1
 8000348:	d157      	bne.n	80003fa <GPIO_PeriClockControl+0xc2>
	{
		if		(pGPIOx==GPIOA){
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a59      	ldr	r2, [pc, #356]	; (80004b4 <GPIO_PeriClockControl+0x17c>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000352:	4b59      	ldr	r3, [pc, #356]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a58      	ldr	r2, [pc, #352]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000358:	f043 0301 	orr.w	r3, r3, #1
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
					GPIOG_PCLK_DI();
				}else if(pGPIOx==GPIOH){
					GPIOH_PCLK_DI();
				}
	}
}//END GPIO_PeriClockControl
 800035e:	e0a3      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOB){
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a56      	ldr	r2, [pc, #344]	; (80004bc <GPIO_PeriClockControl+0x184>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000368:	4b53      	ldr	r3, [pc, #332]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a52      	ldr	r2, [pc, #328]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800036e:	f043 0302 	orr.w	r3, r3, #2
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 8000374:	e098      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOC){
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a51      	ldr	r2, [pc, #324]	; (80004c0 <GPIO_PeriClockControl+0x188>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800037e:	4b4e      	ldr	r3, [pc, #312]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a4d      	ldr	r2, [pc, #308]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000384:	f043 0304 	orr.w	r3, r3, #4
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 800038a:	e08d      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOD){
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a4d      	ldr	r2, [pc, #308]	; (80004c4 <GPIO_PeriClockControl+0x18c>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000394:	4b48      	ldr	r3, [pc, #288]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a47      	ldr	r2, [pc, #284]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800039a:	f043 0308 	orr.w	r3, r3, #8
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80003a0:	e082      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOE){
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a48      	ldr	r2, [pc, #288]	; (80004c8 <GPIO_PeriClockControl+0x190>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003aa:	4b43      	ldr	r3, [pc, #268]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a42      	ldr	r2, [pc, #264]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003b0:	f043 0310 	orr.w	r3, r3, #16
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80003b6:	e077      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOF){
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a44      	ldr	r2, [pc, #272]	; (80004cc <GPIO_PeriClockControl+0x194>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003c0:	4b3d      	ldr	r3, [pc, #244]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c4:	4a3c      	ldr	r2, [pc, #240]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003c6:	f043 0320 	orr.w	r3, r3, #32
 80003ca:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80003cc:	e06c      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOG){
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a3f      	ldr	r2, [pc, #252]	; (80004d0 <GPIO_PeriClockControl+0x198>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003d6:	4b38      	ldr	r3, [pc, #224]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003da:	4a37      	ldr	r2, [pc, #220]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003e0:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80003e2:	e061      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		}else if(pGPIOx==GPIOH){
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a3b      	ldr	r2, [pc, #236]	; (80004d4 <GPIO_PeriClockControl+0x19c>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d15d      	bne.n	80004a8 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003ec:	4b32      	ldr	r3, [pc, #200]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a31      	ldr	r2, [pc, #196]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80003f8:	e056      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		if		(pGPIOx==GPIOA){
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a2d      	ldr	r2, [pc, #180]	; (80004b4 <GPIO_PeriClockControl+0x17c>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0xd8>
					GPIOA_PCLK_DI();
 8000402:	4b2d      	ldr	r3, [pc, #180]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a2c      	ldr	r2, [pc, #176]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000408:	f023 0301 	bic.w	r3, r3, #1
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 800040e:	e04b      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOB){
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a2a      	ldr	r2, [pc, #168]	; (80004bc <GPIO_PeriClockControl+0x184>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0xee>
					GPIOB_PCLK_DI();
 8000418:	4b27      	ldr	r3, [pc, #156]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041c:	4a26      	ldr	r2, [pc, #152]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800041e:	f023 0302 	bic.w	r3, r3, #2
 8000422:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 8000424:	e040      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOC){
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a25      	ldr	r2, [pc, #148]	; (80004c0 <GPIO_PeriClockControl+0x188>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PeriClockControl+0x104>
					GPIOC_PCLK_DI();
 800042e:	4b22      	ldr	r3, [pc, #136]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000432:	4a21      	ldr	r2, [pc, #132]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000434:	f023 0304 	bic.w	r3, r3, #4
 8000438:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 800043a:	e035      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOD){
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a21      	ldr	r2, [pc, #132]	; (80004c4 <GPIO_PeriClockControl+0x18c>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0x11a>
					GPIOD_PCLK_DI();
 8000444:	4b1c      	ldr	r3, [pc, #112]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000448:	4a1b      	ldr	r2, [pc, #108]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800044a:	f023 0308 	bic.w	r3, r3, #8
 800044e:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 8000450:	e02a      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOE){
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a1c      	ldr	r2, [pc, #112]	; (80004c8 <GPIO_PeriClockControl+0x190>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PeriClockControl+0x130>
					GPIOE_PCLK_DI();
 800045a:	4b17      	ldr	r3, [pc, #92]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045e:	4a16      	ldr	r2, [pc, #88]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000460:	f023 0310 	bic.w	r3, r3, #16
 8000464:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 8000466:	e01f      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOF){
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a18      	ldr	r2, [pc, #96]	; (80004cc <GPIO_PeriClockControl+0x194>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PeriClockControl+0x146>
					GPIOF_PCLK_DI();
 8000470:	4b11      	ldr	r3, [pc, #68]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a10      	ldr	r2, [pc, #64]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000476:	f023 0320 	bic.w	r3, r3, #32
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 800047c:	e014      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOG){
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a13      	ldr	r2, [pc, #76]	; (80004d0 <GPIO_PeriClockControl+0x198>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d106      	bne.n	8000494 <GPIO_PeriClockControl+0x15c>
					GPIOG_PCLK_DI();
 8000486:	4b0c      	ldr	r3, [pc, #48]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048a:	4a0b      	ldr	r2, [pc, #44]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800048c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000490:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 8000492:	e009      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
				}else if(pGPIOx==GPIOH){
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	4a0f      	ldr	r2, [pc, #60]	; (80004d4 <GPIO_PeriClockControl+0x19c>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d105      	bne.n	80004a8 <GPIO_PeriClockControl+0x170>
					GPIOH_PCLK_DI();
 800049c:	4b06      	ldr	r3, [pc, #24]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800049e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a0:	4a05      	ldr	r2, [pc, #20]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80004a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a6:	6313      	str	r3, [r2, #48]	; 0x30
}//END GPIO_PeriClockControl
 80004a8:	bf00      	nop
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	bc80      	pop	{r7}
 80004b0:	4770      	bx	lr
 80004b2:	bf00      	nop
 80004b4:	40020000 	.word	0x40020000
 80004b8:	40023800 	.word	0x40023800
 80004bc:	40020400 	.word	0x40020400
 80004c0:	40020800 	.word	0x40020800
 80004c4:	40020c00 	.word	0x40020c00
 80004c8:	40021000 	.word	0x40021000
 80004cc:	40021400 	.word	0x40021400
 80004d0:	40021800 	.word	0x40021800
 80004d4:	40021c00 	.word	0x40021c00

080004d8 <GPIO_Init>:
 *@return				-
 *
 *@Note					-
 *
 * */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80004d8:	b580      	push	{r7, lr}
 80004da:	b086      	sub	sp, #24
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
	uint32_t temp=0; 		//temp. register
 80004e0:	2300      	movs	r3, #0
 80004e2:	617b      	str	r3, [r7, #20]

	//enable the peripheral clock
	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	2101      	movs	r1, #1
 80004ea:	4618      	mov	r0, r3
 80004ec:	f7ff ff24 	bl	8000338 <GPIO_PeriClockControl>

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b03      	cmp	r3, #3
 80004f6:	d822      	bhi.n	800053e <GPIO_Init+0x66>
		//the non interrupt mode.
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	461a      	mov	r2, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	005b      	lsls	r3, r3, #1
 8000504:	fa02 f303 	lsl.w	r3, r2, r3
 8000508:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &=~(0x3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));		//clearing
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	681a      	ldr	r2, [r3, #0]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	791b      	ldrb	r3, [r3, #4]
 8000514:	005b      	lsls	r3, r3, #1
 8000516:	2103      	movs	r1, #3
 8000518:	fa01 f303 	lsl.w	r3, r1, r3
 800051c:	43db      	mvns	r3, r3
 800051e:	4619      	mov	r1, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	400a      	ands	r2, r1
 8000526:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp;		//setting
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	6819      	ldr	r1, [r3, #0]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	697a      	ldr	r2, [r7, #20]
 8000534:	430a      	orrs	r2, r1
 8000536:	601a      	str	r2, [r3, #0]
		temp=0;
 8000538:	2300      	movs	r3, #0
 800053a:	617b      	str	r3, [r7, #20]
 800053c:	e0c1      	b.n	80006c2 <GPIO_Init+0x1ea>
	}else{	//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_IT_FT){
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	795b      	ldrb	r3, [r3, #5]
 8000542:	2b04      	cmp	r3, #4
 8000544:	d817      	bhi.n	8000576 <GPIO_Init+0x9e>
			//1.configure the FTSR
			EXTI->FTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	4b47      	ldr	r3, [pc, #284]	; (8000664 <GPIO_Init+0x18c>)
 8000548:	68db      	ldr	r3, [r3, #12]
 800054a:	687a      	ldr	r2, [r7, #4]
 800054c:	7912      	ldrb	r2, [r2, #4]
 800054e:	4611      	mov	r1, r2
 8000550:	2201      	movs	r2, #1
 8000552:	408a      	lsls	r2, r1
 8000554:	4611      	mov	r1, r2
 8000556:	4a43      	ldr	r2, [pc, #268]	; (8000664 <GPIO_Init+0x18c>)
 8000558:	430b      	orrs	r3, r1
 800055a:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &=~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055c:	4b41      	ldr	r3, [pc, #260]	; (8000664 <GPIO_Init+0x18c>)
 800055e:	689b      	ldr	r3, [r3, #8]
 8000560:	687a      	ldr	r2, [r7, #4]
 8000562:	7912      	ldrb	r2, [r2, #4]
 8000564:	4611      	mov	r1, r2
 8000566:	2201      	movs	r2, #1
 8000568:	408a      	lsls	r2, r1
 800056a:	43d2      	mvns	r2, r2
 800056c:	4611      	mov	r1, r2
 800056e:	4a3d      	ldr	r2, [pc, #244]	; (8000664 <GPIO_Init+0x18c>)
 8000570:	400b      	ands	r3, r1
 8000572:	6093      	str	r3, [r2, #8]
 8000574:	e035      	b.n	80005e2 <GPIO_Init+0x10a>
		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_IT_RT){
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	795b      	ldrb	r3, [r3, #5]
 800057a:	2b05      	cmp	r3, #5
 800057c:	d817      	bhi.n	80005ae <GPIO_Init+0xd6>
			//1.configure the RTSR
			EXTI->RTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057e:	4b39      	ldr	r3, [pc, #228]	; (8000664 <GPIO_Init+0x18c>)
 8000580:	689b      	ldr	r3, [r3, #8]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	7912      	ldrb	r2, [r2, #4]
 8000586:	4611      	mov	r1, r2
 8000588:	2201      	movs	r2, #1
 800058a:	408a      	lsls	r2, r1
 800058c:	4611      	mov	r1, r2
 800058e:	4a35      	ldr	r2, [pc, #212]	; (8000664 <GPIO_Init+0x18c>)
 8000590:	430b      	orrs	r3, r1
 8000592:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &=~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000594:	4b33      	ldr	r3, [pc, #204]	; (8000664 <GPIO_Init+0x18c>)
 8000596:	68db      	ldr	r3, [r3, #12]
 8000598:	687a      	ldr	r2, [r7, #4]
 800059a:	7912      	ldrb	r2, [r2, #4]
 800059c:	4611      	mov	r1, r2
 800059e:	2201      	movs	r2, #1
 80005a0:	408a      	lsls	r2, r1
 80005a2:	43d2      	mvns	r2, r2
 80005a4:	4611      	mov	r1, r2
 80005a6:	4a2f      	ldr	r2, [pc, #188]	; (8000664 <GPIO_Init+0x18c>)
 80005a8:	400b      	ands	r3, r1
 80005aa:	60d3      	str	r3, [r2, #12]
 80005ac:	e019      	b.n	80005e2 <GPIO_Init+0x10a>
		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_IT_RFT){
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	795b      	ldrb	r3, [r3, #5]
 80005b2:	2b06      	cmp	r3, #6
 80005b4:	d815      	bhi.n	80005e2 <GPIO_Init+0x10a>
			//1.configure both FTSR and RTSR
			EXTI->RTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b6:	4b2b      	ldr	r3, [pc, #172]	; (8000664 <GPIO_Init+0x18c>)
 80005b8:	689b      	ldr	r3, [r3, #8]
 80005ba:	687a      	ldr	r2, [r7, #4]
 80005bc:	7912      	ldrb	r2, [r2, #4]
 80005be:	4611      	mov	r1, r2
 80005c0:	2201      	movs	r2, #1
 80005c2:	408a      	lsls	r2, r1
 80005c4:	4611      	mov	r1, r2
 80005c6:	4a27      	ldr	r2, [pc, #156]	; (8000664 <GPIO_Init+0x18c>)
 80005c8:	430b      	orrs	r3, r1
 80005ca:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005cc:	4b25      	ldr	r3, [pc, #148]	; (8000664 <GPIO_Init+0x18c>)
 80005ce:	68db      	ldr	r3, [r3, #12]
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	7912      	ldrb	r2, [r2, #4]
 80005d4:	4611      	mov	r1, r2
 80005d6:	2201      	movs	r2, #1
 80005d8:	408a      	lsls	r2, r1
 80005da:	4611      	mov	r1, r2
 80005dc:	4a21      	ldr	r2, [pc, #132]	; (8000664 <GPIO_Init+0x18c>)
 80005de:	430b      	orrs	r3, r1
 80005e0:	60d3      	str	r3, [r2, #12]
		//2. configure GPIO port selection in SYSCFG_EXTICR
		//Будем расчитывать позицию EXTIx в регистрах
		/*Всего 4 регистра SYSCFG_EXTICR2 из каждого регистра используются первые 16 бит. Каждый регистр отвечает за 4 линии EXTI
		 * К каждой линии EXTI можно подключить путем записи 4 битного числа только один пин порта под номером соответствующему номеру линии EXTI
		 *Пример: к линии EXTI5 можно подключить PA5 либо PB5 либо... PE5*/
		uint8_t	temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	089b      	lsrs	r3, r3, #2
 80005e8:	74fb      	strb	r3, [r7, #19]
		uint8_t	temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	791b      	ldrb	r3, [r3, #4]
 80005ee:	f003 0303 	and.w	r3, r3, #3
 80005f2:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode=GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a1b      	ldr	r2, [pc, #108]	; (8000668 <GPIO_Init+0x190>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d044      	beq.n	8000688 <GPIO_Init+0x1b0>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a1a      	ldr	r2, [pc, #104]	; (800066c <GPIO_Init+0x194>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d02b      	beq.n	8000660 <GPIO_Init+0x188>
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a18      	ldr	r2, [pc, #96]	; (8000670 <GPIO_Init+0x198>)
 800060e:	4293      	cmp	r3, r2
 8000610:	d024      	beq.n	800065c <GPIO_Init+0x184>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a17      	ldr	r2, [pc, #92]	; (8000674 <GPIO_Init+0x19c>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d01d      	beq.n	8000658 <GPIO_Init+0x180>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	4a15      	ldr	r2, [pc, #84]	; (8000678 <GPIO_Init+0x1a0>)
 8000622:	4293      	cmp	r3, r2
 8000624:	d016      	beq.n	8000654 <GPIO_Init+0x17c>
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	4a14      	ldr	r2, [pc, #80]	; (800067c <GPIO_Init+0x1a4>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d00f      	beq.n	8000650 <GPIO_Init+0x178>
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	4a12      	ldr	r2, [pc, #72]	; (8000680 <GPIO_Init+0x1a8>)
 8000636:	4293      	cmp	r3, r2
 8000638:	d008      	beq.n	800064c <GPIO_Init+0x174>
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	4a11      	ldr	r2, [pc, #68]	; (8000684 <GPIO_Init+0x1ac>)
 8000640:	4293      	cmp	r3, r2
 8000642:	d101      	bne.n	8000648 <GPIO_Init+0x170>
 8000644:	2307      	movs	r3, #7
 8000646:	e020      	b.n	800068a <GPIO_Init+0x1b2>
 8000648:	2300      	movs	r3, #0
 800064a:	e01e      	b.n	800068a <GPIO_Init+0x1b2>
 800064c:	2306      	movs	r3, #6
 800064e:	e01c      	b.n	800068a <GPIO_Init+0x1b2>
 8000650:	2305      	movs	r3, #5
 8000652:	e01a      	b.n	800068a <GPIO_Init+0x1b2>
 8000654:	2304      	movs	r3, #4
 8000656:	e018      	b.n	800068a <GPIO_Init+0x1b2>
 8000658:	2303      	movs	r3, #3
 800065a:	e016      	b.n	800068a <GPIO_Init+0x1b2>
 800065c:	2302      	movs	r3, #2
 800065e:	e014      	b.n	800068a <GPIO_Init+0x1b2>
 8000660:	2301      	movs	r3, #1
 8000662:	e012      	b.n	800068a <GPIO_Init+0x1b2>
 8000664:	40013c00 	.word	0x40013c00
 8000668:	40020000 	.word	0x40020000
 800066c:	40020400 	.word	0x40020400
 8000670:	40020800 	.word	0x40020800
 8000674:	40020c00 	.word	0x40020c00
 8000678:	40021000 	.word	0x40021000
 800067c:	40021400 	.word	0x40021400
 8000680:	40021800 	.word	0x40021800
 8000684:	40021c00 	.word	0x40021c00
 8000688:	2300      	movs	r3, #0
 800068a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800068c:	4b5d      	ldr	r3, [pc, #372]	; (8000804 <GPIO_Init+0x32c>)
 800068e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000690:	4a5c      	ldr	r2, [pc, #368]	; (8000804 <GPIO_Init+0x32c>)
 8000692:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000696:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1]=portcode <<(temp2*4);
 8000698:	7c7a      	ldrb	r2, [r7, #17]
 800069a:	7cbb      	ldrb	r3, [r7, #18]
 800069c:	009b      	lsls	r3, r3, #2
 800069e:	fa02 f103 	lsl.w	r1, r2, r3
 80006a2:	4a59      	ldr	r2, [pc, #356]	; (8000808 <GPIO_Init+0x330>)
 80006a4:	7cfb      	ldrb	r3, [r7, #19]
 80006a6:	3302      	adds	r3, #2
 80006a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI->IMR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ac:	4b57      	ldr	r3, [pc, #348]	; (800080c <GPIO_Init+0x334>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	687a      	ldr	r2, [r7, #4]
 80006b2:	7912      	ldrb	r2, [r2, #4]
 80006b4:	4611      	mov	r1, r2
 80006b6:	2201      	movs	r2, #1
 80006b8:	408a      	lsls	r2, r1
 80006ba:	4611      	mov	r1, r2
 80006bc:	4a53      	ldr	r2, [pc, #332]	; (800080c <GPIO_Init+0x334>)
 80006be:	430b      	orrs	r3, r1
 80006c0:	6013      	str	r3, [r2, #0]
	}

	temp=0;
 80006c2:	2300      	movs	r3, #0
 80006c4:	617b      	str	r3, [r7, #20]

	//2.configure the speed
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	799b      	ldrb	r3, [r3, #6]
 80006ca:	461a      	mov	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &=~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	689a      	ldr	r2, [r3, #8]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	4619      	mov	r1, r3
 80006e4:	2303      	movs	r3, #3
 80006e6:	408b      	lsls	r3, r1
 80006e8:	43db      	mvns	r3, r3
 80006ea:	4619      	mov	r1, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	400a      	ands	r2, r1
 80006f2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |=temp;
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	6899      	ldr	r1, [r3, #8]
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	697a      	ldr	r2, [r7, #20]
 8000700:	430a      	orrs	r2, r1
 8000702:	609a      	str	r2, [r3, #8]
	temp=0;
 8000704:	2300      	movs	r3, #0
 8000706:	617b      	str	r3, [r7, #20]

	//3.configure the pudp setting
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	79db      	ldrb	r3, [r3, #7]
 800070c:	461a      	mov	r2, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	791b      	ldrb	r3, [r3, #4]
 8000712:	005b      	lsls	r3, r3, #1
 8000714:	fa02 f303 	lsl.w	r3, r2, r3
 8000718:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &=~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	68da      	ldr	r2, [r3, #12]
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	4619      	mov	r1, r3
 8000726:	2303      	movs	r3, #3
 8000728:	408b      	lsls	r3, r1
 800072a:	43db      	mvns	r3, r3
 800072c:	4619      	mov	r1, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	400a      	ands	r2, r1
 8000734:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |=temp;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	68d9      	ldr	r1, [r3, #12]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	697a      	ldr	r2, [r7, #20]
 8000742:	430a      	orrs	r2, r1
 8000744:	60da      	str	r2, [r3, #12]
	temp=0;
 8000746:	2300      	movs	r3, #0
 8000748:	617b      	str	r3, [r7, #20]

	//4. configure the optype
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	7a1b      	ldrb	r3, [r3, #8]
 800074e:	461a      	mov	r2, r3
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	791b      	ldrb	r3, [r3, #4]
 8000754:	fa02 f303 	lsl.w	r3, r2, r3
 8000758:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &=~(0x1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	685a      	ldr	r2, [r3, #4]
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	791b      	ldrb	r3, [r3, #4]
 8000764:	4619      	mov	r1, r3
 8000766:	2301      	movs	r3, #1
 8000768:	408b      	lsls	r3, r1
 800076a:	43db      	mvns	r3, r3
 800076c:	4619      	mov	r1, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	400a      	ands	r2, r1
 8000774:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |=temp;
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	6859      	ldr	r1, [r3, #4]
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	697a      	ldr	r2, [r7, #20]
 8000782:	430a      	orrs	r2, r1
 8000784:	605a      	str	r2, [r3, #4]

	//5. configure the alt fuctionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_ALTFN){
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	795b      	ldrb	r3, [r3, #5]
 800078a:	2b02      	cmp	r3, #2
 800078c:	d135      	bne.n	80007fa <GPIO_Init+0x322>
		//configure the alt function registers.
		uint8_t temp1, temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /8;
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	08db      	lsrs	r3, r3, #3
 8000794:	743b      	strb	r3, [r7, #16]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8;
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	791b      	ldrb	r3, [r3, #4]
 800079a:	f003 0307 	and.w	r3, r3, #7
 800079e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &=~(0xF<<(4*temp2));
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	681a      	ldr	r2, [r3, #0]
 80007a4:	7c3b      	ldrb	r3, [r7, #16]
 80007a6:	3306      	adds	r3, #6
 80007a8:	009b      	lsls	r3, r3, #2
 80007aa:	4413      	add	r3, r2
 80007ac:	685a      	ldr	r2, [r3, #4]
 80007ae:	7bfb      	ldrb	r3, [r7, #15]
 80007b0:	009b      	lsls	r3, r3, #2
 80007b2:	210f      	movs	r1, #15
 80007b4:	fa01 f303 	lsl.w	r3, r1, r3
 80007b8:	43db      	mvns	r3, r3
 80007ba:	4618      	mov	r0, r3
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	6819      	ldr	r1, [r3, #0]
 80007c0:	7c3b      	ldrb	r3, [r7, #16]
 80007c2:	4002      	ands	r2, r0
 80007c4:	3306      	adds	r3, #6
 80007c6:	009b      	lsls	r3, r3, #2
 80007c8:	440b      	add	r3, r1
 80007ca:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->AFR[temp1] |=(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*temp2));
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681a      	ldr	r2, [r3, #0]
 80007d0:	7c3b      	ldrb	r3, [r7, #16]
 80007d2:	3306      	adds	r3, #6
 80007d4:	009b      	lsls	r3, r3, #2
 80007d6:	4413      	add	r3, r2
 80007d8:	685a      	ldr	r2, [r3, #4]
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	7a5b      	ldrb	r3, [r3, #9]
 80007de:	4619      	mov	r1, r3
 80007e0:	7bfb      	ldrb	r3, [r7, #15]
 80007e2:	009b      	lsls	r3, r3, #2
 80007e4:	fa01 f303 	lsl.w	r3, r1, r3
 80007e8:	4618      	mov	r0, r3
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	6819      	ldr	r1, [r3, #0]
 80007ee:	7c3b      	ldrb	r3, [r7, #16]
 80007f0:	4302      	orrs	r2, r0
 80007f2:	3306      	adds	r3, #6
 80007f4:	009b      	lsls	r3, r3, #2
 80007f6:	440b      	add	r3, r1
 80007f8:	605a      	str	r2, [r3, #4]
	}
}
 80007fa:	bf00      	nop
 80007fc:	3718      	adds	r7, #24
 80007fe:	46bd      	mov	sp, r7
 8000800:	bd80      	pop	{r7, pc}
 8000802:	bf00      	nop
 8000804:	40023800 	.word	0x40023800
 8000808:	40013800 	.word	0x40013800
 800080c:	40013c00 	.word	0x40013c00

08000810 <GPIO_WriteToOutPin>:
 * @return            -
 *
 * @Note              -

 */
void GPIO_WriteToOutPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value){		//
 8000810:	b480      	push	{r7}
 8000812:	b083      	sub	sp, #12
 8000814:	af00      	add	r7, sp, #0
 8000816:	6078      	str	r0, [r7, #4]
 8000818:	460b      	mov	r3, r1
 800081a:	70fb      	strb	r3, [r7, #3]
 800081c:	4613      	mov	r3, r2
 800081e:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET){
 8000820:	78bb      	ldrb	r3, [r7, #2]
 8000822:	2b01      	cmp	r3, #1
 8000824:	d109      	bne.n	800083a <GPIO_WriteToOutPin+0x2a>
			//write 1 to the output data register at the bit field corresponding to the pin number
			pGPIOx->ODR |= ( 1 << PinNumber);
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	695b      	ldr	r3, [r3, #20]
 800082a:	78fa      	ldrb	r2, [r7, #3]
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	431a      	orrs	r2, r3
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	615a      	str	r2, [r3, #20]
		}else{
			//write 0
			pGPIOx->ODR &= ~( 1 << PinNumber);
		}
}
 8000838:	e009      	b.n	800084e <GPIO_WriteToOutPin+0x3e>
			pGPIOx->ODR &= ~( 1 << PinNumber);
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	695b      	ldr	r3, [r3, #20]
 800083e:	78fa      	ldrb	r2, [r7, #3]
 8000840:	2101      	movs	r1, #1
 8000842:	fa01 f202 	lsl.w	r2, r1, r2
 8000846:	43d2      	mvns	r2, r2
 8000848:	401a      	ands	r2, r3
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	615a      	str	r2, [r3, #20]
}
 800084e:	bf00      	nop
 8000850:	370c      	adds	r7, #12
 8000852:	46bd      	mov	sp, r7
 8000854:	bc80      	pop	{r7}
 8000856:	4770      	bx	lr

08000858 <GPIO_ToggleOutPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000858:	b480      	push	{r7}
 800085a:	b083      	sub	sp, #12
 800085c:	af00      	add	r7, sp, #0
 800085e:	6078      	str	r0, [r7, #4]
 8000860:	460b      	mov	r3, r1
 8000862:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	695b      	ldr	r3, [r3, #20]
 8000868:	78fa      	ldrb	r2, [r7, #3]
 800086a:	2101      	movs	r1, #1
 800086c:	fa01 f202 	lsl.w	r2, r1, r2
 8000870:	405a      	eors	r2, r3
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	615a      	str	r2, [r3, #20]
}
 8000876:	bf00      	nop
 8000878:	370c      	adds	r7, #12
 800087a:	46bd      	mov	sp, r7
 800087c:	bc80      	pop	{r7}
 800087e:	4770      	bx	lr

08000880 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDI){
 8000880:	b480      	push	{r7}
 8000882:	b083      	sub	sp, #12
 8000884:	af00      	add	r7, sp, #0
 8000886:	4603      	mov	r3, r0
 8000888:	460a      	mov	r2, r1
 800088a:	71fb      	strb	r3, [r7, #7]
 800088c:	4613      	mov	r3, r2
 800088e:	71bb      	strb	r3, [r7, #6]
	if(EnorDI ==ENABLE){
 8000890:	79bb      	ldrb	r3, [r7, #6]
 8000892:	2b01      	cmp	r3, #1
 8000894:	d133      	bne.n	80008fe <GPIO_IRQInterruptConfig+0x7e>
		if(IRQNumber <=31){
 8000896:	79fb      	ldrb	r3, [r7, #7]
 8000898:	2b1f      	cmp	r3, #31
 800089a:	d80a      	bhi.n	80008b2 <GPIO_IRQInterruptConfig+0x32>
			//program ISER0 resgister
			*NVIC_ISER0 |=(1<<IRQNumber);
 800089c:	4b34      	ldr	r3, [pc, #208]	; (8000970 <GPIO_IRQInterruptConfig+0xf0>)
 800089e:	681b      	ldr	r3, [r3, #0]
 80008a0:	79fa      	ldrb	r2, [r7, #7]
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a31      	ldr	r2, [pc, #196]	; (8000970 <GPIO_IRQInterruptConfig+0xf0>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6013      	str	r3, [r2, #0]
		}else if(IRQNumber >=64 && IRQNumber <96){
			//program ICER2 register
			*NVIC_ICER2 |=(1<<(IRQNumber %64));
		}
	}
}//END GPIO_IRQInterruptConfig
 80008b0:	e059      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >31 && IRQNumber <64){	//32 to 63
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b1f      	cmp	r3, #31
 80008b6:	d90f      	bls.n	80008d8 <GPIO_IRQInterruptConfig+0x58>
 80008b8:	79fb      	ldrb	r3, [r7, #7]
 80008ba:	2b3f      	cmp	r3, #63	; 0x3f
 80008bc:	d80c      	bhi.n	80008d8 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |=(1<<(IRQNumber %32));
 80008be:	4b2d      	ldr	r3, [pc, #180]	; (8000974 <GPIO_IRQInterruptConfig+0xf4>)
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	79fa      	ldrb	r2, [r7, #7]
 80008c4:	f002 021f 	and.w	r2, r2, #31
 80008c8:	2101      	movs	r1, #1
 80008ca:	fa01 f202 	lsl.w	r2, r1, r2
 80008ce:	4611      	mov	r1, r2
 80008d0:	4a28      	ldr	r2, [pc, #160]	; (8000974 <GPIO_IRQInterruptConfig+0xf4>)
 80008d2:	430b      	orrs	r3, r1
 80008d4:	6013      	str	r3, [r2, #0]
 80008d6:	e046      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >=64 && IRQNumber <96){
 80008d8:	79fb      	ldrb	r3, [r7, #7]
 80008da:	2b3f      	cmp	r3, #63	; 0x3f
 80008dc:	d943      	bls.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	2b5f      	cmp	r3, #95	; 0x5f
 80008e2:	d840      	bhi.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |=(1<<(IRQNumber %64));		//64 to 95
 80008e4:	4b24      	ldr	r3, [pc, #144]	; (8000978 <GPIO_IRQInterruptConfig+0xf8>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	79fa      	ldrb	r2, [r7, #7]
 80008ea:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ee:	2101      	movs	r1, #1
 80008f0:	fa01 f202 	lsl.w	r2, r1, r2
 80008f4:	4611      	mov	r1, r2
 80008f6:	4a20      	ldr	r2, [pc, #128]	; (8000978 <GPIO_IRQInterruptConfig+0xf8>)
 80008f8:	430b      	orrs	r3, r1
 80008fa:	6013      	str	r3, [r2, #0]
}//END GPIO_IRQInterruptConfig
 80008fc:	e033      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <=31){
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	2b1f      	cmp	r3, #31
 8000902:	d80a      	bhi.n	800091a <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |=(1<<IRQNumber);
 8000904:	4b1d      	ldr	r3, [pc, #116]	; (800097c <GPIO_IRQInterruptConfig+0xfc>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	79fa      	ldrb	r2, [r7, #7]
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	4611      	mov	r1, r2
 8000912:	4a1a      	ldr	r2, [pc, #104]	; (800097c <GPIO_IRQInterruptConfig+0xfc>)
 8000914:	430b      	orrs	r3, r1
 8000916:	6013      	str	r3, [r2, #0]
}//END GPIO_IRQInterruptConfig
 8000918:	e025      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >31 && IRQNumber <64){
 800091a:	79fb      	ldrb	r3, [r7, #7]
 800091c:	2b1f      	cmp	r3, #31
 800091e:	d90f      	bls.n	8000940 <GPIO_IRQInterruptConfig+0xc0>
 8000920:	79fb      	ldrb	r3, [r7, #7]
 8000922:	2b3f      	cmp	r3, #63	; 0x3f
 8000924:	d80c      	bhi.n	8000940 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |=(1<<(IRQNumber %32));
 8000926:	4b16      	ldr	r3, [pc, #88]	; (8000980 <GPIO_IRQInterruptConfig+0x100>)
 8000928:	681b      	ldr	r3, [r3, #0]
 800092a:	79fa      	ldrb	r2, [r7, #7]
 800092c:	f002 021f 	and.w	r2, r2, #31
 8000930:	2101      	movs	r1, #1
 8000932:	fa01 f202 	lsl.w	r2, r1, r2
 8000936:	4611      	mov	r1, r2
 8000938:	4a11      	ldr	r2, [pc, #68]	; (8000980 <GPIO_IRQInterruptConfig+0x100>)
 800093a:	430b      	orrs	r3, r1
 800093c:	6013      	str	r3, [r2, #0]
 800093e:	e012      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >=64 && IRQNumber <96){
 8000940:	79fb      	ldrb	r3, [r7, #7]
 8000942:	2b3f      	cmp	r3, #63	; 0x3f
 8000944:	d90f      	bls.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
 8000946:	79fb      	ldrb	r3, [r7, #7]
 8000948:	2b5f      	cmp	r3, #95	; 0x5f
 800094a:	d80c      	bhi.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |=(1<<(IRQNumber %64));
 800094c:	4b0d      	ldr	r3, [pc, #52]	; (8000984 <GPIO_IRQInterruptConfig+0x104>)
 800094e:	681b      	ldr	r3, [r3, #0]
 8000950:	79fa      	ldrb	r2, [r7, #7]
 8000952:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000956:	2101      	movs	r1, #1
 8000958:	fa01 f202 	lsl.w	r2, r1, r2
 800095c:	4611      	mov	r1, r2
 800095e:	4a09      	ldr	r2, [pc, #36]	; (8000984 <GPIO_IRQInterruptConfig+0x104>)
 8000960:	430b      	orrs	r3, r1
 8000962:	6013      	str	r3, [r2, #0]
}//END GPIO_IRQInterruptConfig
 8000964:	e7ff      	b.n	8000966 <GPIO_IRQInterruptConfig+0xe6>
 8000966:	bf00      	nop
 8000968:	370c      	adds	r7, #12
 800096a:	46bd      	mov	sp, r7
 800096c:	bc80      	pop	{r7}
 800096e:	4770      	bx	lr
 8000970:	e000e100 	.word	0xe000e100
 8000974:	e000e104 	.word	0xe000e104
 8000978:	e000e108 	.word	0xe000e108
 800097c:	e000e180 	.word	0xe000e180
 8000980:	e000e184 	.word	0xe000e184
 8000984:	e000e188 	.word	0xe000e188

08000988 <GPIO_IRQPriorityConfig>:
 *@return				-
 *
 *@Note					-
 *
 * */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority){
 8000988:	b480      	push	{r7}
 800098a:	b085      	sub	sp, #20
 800098c:	af00      	add	r7, sp, #0
 800098e:	4603      	mov	r3, r0
 8000990:	6039      	str	r1, [r7, #0]
 8000992:	71fb      	strb	r3, [r7, #7]
	//1. first lets find out the ipr register
	uint8_t iprx=IRQNumber/4;				//выесняем какой регистр IPRX
 8000994:	79fb      	ldrb	r3, [r7, #7]
 8000996:	089b      	lsrs	r3, r3, #2
 8000998:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section=IRQNumber %4;		//выесняем какиая из 4 секций
 800099a:	79fb      	ldrb	r3, [r7, #7]
 800099c:	f003 0303 	and.w	r3, r3, #3
 80009a0:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_ammount=(8*iprx_section)+(8-NO_PR_BITS_IMPLEMENTED);
 80009a2:	7bbb      	ldrb	r3, [r7, #14]
 80009a4:	00db      	lsls	r3, r3, #3
 80009a6:	b2db      	uxtb	r3, r3
 80009a8:	3304      	adds	r3, #4
 80009aa:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR +iprx) |= (IRQPriority <<shift_ammount);	/*(8*iprx_section)	 не умножаем на 4 так как арифметика указателей
 80009ac:	7bfb      	ldrb	r3, [r7, #15]
 80009ae:	009b      	lsls	r3, r3, #2
 80009b0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009b4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009b8:	6819      	ldr	r1, [r3, #0]
 80009ba:	7b7b      	ldrb	r3, [r7, #13]
 80009bc:	683a      	ldr	r2, [r7, #0]
 80009be:	409a      	lsls	r2, r3
 80009c0:	7bfb      	ldrb	r3, [r7, #15]
 80009c2:	009b      	lsls	r3, r3, #2
 80009c4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009c8:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009cc:	430a      	orrs	r2, r1
 80009ce:	601a      	str	r2, [r3, #0]
	не работает так как мы задумали на 4 потому что следуюший адрес регистра находится через 4 адреса */
}//END GPIO_IRQPriorityConfig
 80009d0:	bf00      	nop
 80009d2:	3714      	adds	r7, #20
 80009d4:	46bd      	mov	sp, r7
 80009d6:	bc80      	pop	{r7}
 80009d8:	4770      	bx	lr
	...

080009dc <GPIO_IRQHandling>:
 *@return				-
 *
 *@Note					-
 *
 * */
void GPIO_IRQHandling(uint8_t PinNumber){
 80009dc:	b480      	push	{r7}
 80009de:	b083      	sub	sp, #12
 80009e0:	af00      	add	r7, sp, #0
 80009e2:	4603      	mov	r3, r0
 80009e4:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if (EXTI->PR &(1<<PinNumber)){
 80009e6:	4b0c      	ldr	r3, [pc, #48]	; (8000a18 <GPIO_IRQHandling+0x3c>)
 80009e8:	695b      	ldr	r3, [r3, #20]
 80009ea:	79fa      	ldrb	r2, [r7, #7]
 80009ec:	2101      	movs	r1, #1
 80009ee:	fa01 f202 	lsl.w	r2, r1, r2
 80009f2:	4013      	ands	r3, r2
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	d009      	beq.n	8000a0c <GPIO_IRQHandling+0x30>
		//clear the pending register bit
		EXTI->PR |=(1<<PinNumber);
 80009f8:	4b07      	ldr	r3, [pc, #28]	; (8000a18 <GPIO_IRQHandling+0x3c>)
 80009fa:	695b      	ldr	r3, [r3, #20]
 80009fc:	79fa      	ldrb	r2, [r7, #7]
 80009fe:	2101      	movs	r1, #1
 8000a00:	fa01 f202 	lsl.w	r2, r1, r2
 8000a04:	4611      	mov	r1, r2
 8000a06:	4a04      	ldr	r2, [pc, #16]	; (8000a18 <GPIO_IRQHandling+0x3c>)
 8000a08:	430b      	orrs	r3, r1
 8000a0a:	6153      	str	r3, [r2, #20]
	}
}
 8000a0c:	bf00      	nop
 8000a0e:	370c      	adds	r7, #12
 8000a10:	46bd      	mov	sp, r7
 8000a12:	bc80      	pop	{r7}
 8000a14:	4770      	bx	lr
 8000a16:	bf00      	nop
 8000a18:	40013c00 	.word	0x40013c00

08000a1c <__libc_init_array>:
 8000a1c:	b570      	push	{r4, r5, r6, lr}
 8000a1e:	4d0d      	ldr	r5, [pc, #52]	; (8000a54 <__libc_init_array+0x38>)
 8000a20:	4c0d      	ldr	r4, [pc, #52]	; (8000a58 <__libc_init_array+0x3c>)
 8000a22:	1b64      	subs	r4, r4, r5
 8000a24:	10a4      	asrs	r4, r4, #2
 8000a26:	2600      	movs	r6, #0
 8000a28:	42a6      	cmp	r6, r4
 8000a2a:	d109      	bne.n	8000a40 <__libc_init_array+0x24>
 8000a2c:	4d0b      	ldr	r5, [pc, #44]	; (8000a5c <__libc_init_array+0x40>)
 8000a2e:	4c0c      	ldr	r4, [pc, #48]	; (8000a60 <__libc_init_array+0x44>)
 8000a30:	f000 f820 	bl	8000a74 <_init>
 8000a34:	1b64      	subs	r4, r4, r5
 8000a36:	10a4      	asrs	r4, r4, #2
 8000a38:	2600      	movs	r6, #0
 8000a3a:	42a6      	cmp	r6, r4
 8000a3c:	d105      	bne.n	8000a4a <__libc_init_array+0x2e>
 8000a3e:	bd70      	pop	{r4, r5, r6, pc}
 8000a40:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a44:	4798      	blx	r3
 8000a46:	3601      	adds	r6, #1
 8000a48:	e7ee      	b.n	8000a28 <__libc_init_array+0xc>
 8000a4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4e:	4798      	blx	r3
 8000a50:	3601      	adds	r6, #1
 8000a52:	e7f2      	b.n	8000a3a <__libc_init_array+0x1e>
 8000a54:	08000a8c 	.word	0x08000a8c
 8000a58:	08000a8c 	.word	0x08000a8c
 8000a5c:	08000a8c 	.word	0x08000a8c
 8000a60:	08000a90 	.word	0x08000a90

08000a64 <memset>:
 8000a64:	4402      	add	r2, r0
 8000a66:	4603      	mov	r3, r0
 8000a68:	4293      	cmp	r3, r2
 8000a6a:	d100      	bne.n	8000a6e <memset+0xa>
 8000a6c:	4770      	bx	lr
 8000a6e:	f803 1b01 	strb.w	r1, [r3], #1
 8000a72:	e7f9      	b.n	8000a68 <memset+0x4>

08000a74 <_init>:
 8000a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a76:	bf00      	nop
 8000a78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a7a:	bc08      	pop	{r3}
 8000a7c:	469e      	mov	lr, r3
 8000a7e:	4770      	bx	lr

08000a80 <_fini>:
 8000a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a82:	bf00      	nop
 8000a84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a86:	bc08      	pop	{r3}
 8000a88:	469e      	mov	lr, r3
 8000a8a:	4770      	bx	lr
