/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

/*
 	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_9);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_10);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_11);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_12);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_13);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_14);
	HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_15);
*/

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{

	uint32_t *pClkCtrlReg=(uint32_t*)(0x40021000+0x14);		//Table 2. //9.4.6 AHB peripheral clock enable register (RCC_AHBENR)
//	uint32_t *pPortEModeReg=(uint32_t*)(0x48001000+0x00);	//Table 2. //11.4.1 GPIO port mode register (GPIOx_MODER) (x =A..H)
//	uint32_t *pPortEOutReg=(uint32_t*)(0x48001000+0x14);	//Table 2. //11.4.6 GPIO port output data register (GPIOx_ODR) (x = A..H)

	//Enable the Clock
	*pClkCtrlReg |=0x100000;


}
